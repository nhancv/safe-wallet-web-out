{"version":3,"file":"static/chunks/2188.6340c85bc06d94cc.js","mappings":"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","sources":["webpack://_N_E/./src/components/tx-flow/common/constants.ts","webpack://_N_E/./src/components/tx-flow/flows/RemoveOwner/ReviewRemoveOwner.tsx","webpack://_N_E/./src/components/common/Mui/index.tsx","webpack://_N_E/./src/components/tx-flow/flows/RemoveOwner/SetThreshold.tsx","webpack://_N_E/./src/components/tx-flow/flows/RemoveOwner/index.tsx"],"sourcesContent":["export const TOOLTIP_TITLES = {\n  THRESHOLD:\n    'The threshold of a Safe Account specifies how many signers need to confirm a Safe Account transaction before it can be executed.',\n  REVIEW_WINDOW:\n    'A period that begins after a recovery is submitted on-chain, during which the Safe Account signers can review the proposal and cancel it before it is executable.',\n  PROPOSAL_EXPIRY: 'A period after which the recovery proposal will expire and can no longer be executed.',\n} as const\n","import { useCallback, useContext, useEffect } from 'react'\nimport type { ReactElement, PropsWithChildren } from 'react'\n\nimport useSafeInfo from '@/hooks/useSafeInfo'\nimport { trackEvent, SETTINGS_EVENTS } from '@/services/analytics'\nimport { createRemoveOwnerTx } from '@/services/tx/tx-sender'\nimport { SafeTxContext } from '../../SafeTxProvider'\nimport type { RemoveOwnerFlowProps } from '.'\nimport ReviewTransaction from '@/components/tx/ReviewTransactionV2'\n\nexport const ReviewRemoveOwner = ({\n  params,\n  onSubmit,\n  children,\n}: PropsWithChildren<{\n  params: RemoveOwnerFlowProps\n  onSubmit: () => void\n}>): ReactElement => {\n  const { setSafeTx, setSafeTxError } = useContext(SafeTxContext)\n  const { safe } = useSafeInfo()\n  const { removedOwner, threshold } = params\n\n  useEffect(() => {\n    createRemoveOwnerTx({ ownerAddress: removedOwner.address, threshold }).then(setSafeTx).catch(setSafeTxError)\n  }, [removedOwner.address, setSafeTx, setSafeTxError, threshold])\n\n  const onFormSubmit = useCallback(() => {\n    trackEvent({ ...SETTINGS_EVENTS.SETUP.THRESHOLD, label: safe.threshold })\n    trackEvent({ ...SETTINGS_EVENTS.SETUP.OWNERS, label: safe.owners.length })\n    onSubmit()\n  }, [onSubmit, safe.threshold, safe.owners])\n\n  return <ReviewTransaction onSubmit={onFormSubmit}>{children}</ReviewTransaction>\n}\n","export * from \"/app/apps/web/src/components/common/Mui/index.tsx\"","import { useState } from 'react'\nimport { Button, Box, CardActions, Divider, Grid, MenuItem, Select, Typography, SvgIcon, Tooltip } from '@mui/material'\nimport type { ReactElement, SyntheticEvent } from 'react'\nimport type { SelectChangeEvent } from '@mui/material'\n\nimport EthHashInfo from '@/components/common/EthHashInfo'\nimport useSafeInfo from '@/hooks/useSafeInfo'\nimport TxCard from '../../common/TxCard'\nimport InfoIcon from '@/public/images/notifications/info.svg'\nimport { TOOLTIP_TITLES } from '@/components/tx-flow/common/constants'\nimport type { RemoveOwnerFlowProps } from '.'\n\nimport commonCss from '@/components/tx-flow/common/styles.module.css'\nimport { maybePlural } from '@safe-global/utils/utils/formatters'\n\nexport const SetThreshold = ({\n  params,\n  onSubmit,\n}: {\n  params: RemoveOwnerFlowProps\n  onSubmit: (data: RemoveOwnerFlowProps) => void\n}): ReactElement => {\n  const { safe } = useSafeInfo()\n  const [selectedThreshold, setSelectedThreshold] = useState<number>(params.threshold ?? 1)\n\n  const handleChange = (event: SelectChangeEvent<number>) => {\n    setSelectedThreshold(parseInt(event.target.value.toString()))\n  }\n\n  const onSubmitHandler = (e: SyntheticEvent) => {\n    e.preventDefault()\n    onSubmit({ ...params, threshold: selectedThreshold })\n  }\n\n  const newNumberOfOwners = safe ? safe.owners.length - 1 : 1\n\n  return (\n    <TxCard>\n      <form onSubmit={onSubmitHandler}>\n        <Box mb={3}>\n          <Typography mb={2}>Review the signer you want to remove from the active Safe Account:</Typography>\n\n          <EthHashInfo address={params.removedOwner.address} shortAddress={false} showCopyButton hasExplorer />\n        </Box>\n\n        <Divider className={commonCss.nestedDivider} />\n\n        <Box my={3}>\n          <Typography variant=\"h4\" fontWeight={700}>\n            Threshold\n            <Tooltip title={TOOLTIP_TITLES.THRESHOLD} arrow placement=\"top\">\n              <span>\n                <SvgIcon\n                  component={InfoIcon}\n                  inheritViewBox\n                  color=\"border\"\n                  fontSize=\"small\"\n                  sx={{\n                    verticalAlign: 'middle',\n                    ml: 0.5,\n                  }}\n                />\n              </span>\n            </Tooltip>\n          </Typography>\n          <Typography>Any transaction requires the confirmation of:</Typography>\n          <Grid\n            container\n            direction=\"row\"\n            sx={{\n              alignItems: 'center',\n              gap: 1,\n              mt: 2,\n            }}\n          >\n            <Grid item xs={1.5}>\n              <Select data-testid=\"threshold-selector\" value={selectedThreshold} onChange={handleChange} fullWidth>\n                {safe.owners.slice(1).map((_, idx) => (\n                  <MenuItem key={idx + 1} value={idx + 1}>\n                    {idx + 1}\n                  </MenuItem>\n                ))}\n              </Select>\n            </Grid>\n            <Grid item>\n              <Typography>\n                out of {newNumberOfOwners} signer{maybePlural(newNumberOfOwners)}\n              </Typography>\n            </Grid>\n          </Grid>\n        </Box>\n\n        <Divider className={commonCss.nestedDivider} />\n\n        <CardActions>\n          <Button data-testid=\"next-btn\" variant=\"contained\" type=\"submit\">\n            Next\n          </Button>\n        </CardActions>\n      </form>\n    </TxCard>\n  )\n}\n","import useSafeInfo from '@/hooks/useSafeInfo'\nimport { ReviewRemoveOwner } from './ReviewRemoveOwner'\nimport SaveAddressIcon from '@/public/images/common/save-address.svg'\nimport { SetThreshold } from './SetThreshold'\nimport { useContext } from 'react'\nimport { TxFlowType } from '@/services/analytics'\nimport { TxFlowContext } from '../../TxFlowProvider'\nimport { TxFlow } from '../../TxFlow'\nimport { TxFlowStep } from '../../TxFlowStep'\nimport { type ReviewTransactionProps } from '@/components/tx/ReviewTransactionV2'\n\ntype Owner = {\n  address: string\n  name?: string\n}\n\nexport type RemoveOwnerFlowProps = {\n  removedOwner: Owner\n  threshold: number\n}\n\nconst SetThresholdStep = () => {\n  const { onNext, data } = useContext(TxFlowContext)\n  return <SetThreshold onSubmit={onNext} params={data} />\n}\n\nconst ReviewOwnerStep = (props: ReviewTransactionProps) => {\n  const { data } = useContext(TxFlowContext)\n  return <ReviewRemoveOwner params={data} {...props} />\n}\n\nconst RemoveOwnerFlow = (props: Owner) => {\n  const { safe } = useSafeInfo()\n\n  const defaultValues: RemoveOwnerFlowProps = {\n    removedOwner: props,\n    threshold: Math.min(safe.threshold, safe.owners.length - 1),\n  }\n\n  return (\n    <TxFlow\n      initialData={defaultValues}\n      eventCategory={TxFlowType.REMOVE_OWNER}\n      icon={SaveAddressIcon}\n      subtitle=\"Remove signer\"\n      ReviewTransactionComponent={ReviewOwnerStep}\n    >\n      <TxFlowStep title=\"New transaction\">\n        <SetThresholdStep />\n      </TxFlowStep>\n    </TxFlow>\n  )\n}\n\nexport default RemoveOwnerFlow\n"],"names":["TOOLTIP_TITLES","THRESHOLD","REVIEW_WINDOW","PROPOSAL_EXPIRY","ReviewRemoveOwner","params","onSubmit","children","setSafeTx","setSafeTxError","useContext","SafeTxContext","safe","useSafeInfo","removedOwner","threshold","useEffect","createRemoveOwnerTx","ownerAddress","address","then","catch","onFormSubmit","useCallback","trackEvent","SETTINGS_EVENTS","SETUP","label","OWNERS","owners","length","ReviewTransaction","SetThreshold","selectedThreshold","setSelectedThreshold","useState","newNumberOfOwners","TxCard","form","onSubmitHandler","e","preventDefault","Box","mb","Typography","EthHashInfo","shortAddress","showCopyButton","hasExplorer","Divider","className","commonCss","my","variant","fontWeight","Tooltip","title","arrow","placement","span","SvgIcon","component","InfoIcon","inheritViewBox","color","fontSize","sx","verticalAlign","ml","Grid","container","direction","alignItems","gap","mt","item","xs","Select","data-testid","value","onChange","event","handleChange","parseInt","target","toString","fullWidth","slice","map","_","idx","MenuItem","maybePlural","CardActions","Button","type","SetThresholdStep","onNext","data","TxFlowContext","ReviewOwnerStep","props","defaultValues","Math","min","TxFlow","initialData","eventCategory","TxFlowType","REMOVE_OWNER","icon","SaveAddressIcon","subtitle","ReviewTransactionComponent","TxFlowStep"],"sourceRoot":"","ignoreList":[]}