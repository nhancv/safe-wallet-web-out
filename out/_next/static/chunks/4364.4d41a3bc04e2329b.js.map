{"version":3,"file":"static/chunks/4364.4d41a3bc04e2329b.js","mappings":"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","sources":["webpack://_N_E/./src/components/dashboard/GovernanceSection/styles.module.css","webpack://_N_E/./src/components/common/Mui/index.tsx","webpack://_N_E/./node_modules/@mui/icons-material/esm/OpenInNew.js","webpack://_N_E/./public/images/common/network-error.svg","webpack://_N_E/./src/components/dashboard/GovernanceSection/GovernanceSection.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"lazyWrapper\":\"styles_lazyWrapper__blSCL\",\"widgetWrapper\":\"styles_widgetWrapper__6HIZY\",\"loadErrorCard\":\"styles_loadErrorCard__ICsLq\",\"loadErrorMsgContainer\":\"styles_loadErrorMsgContainer__mgWYb\",\"loadErroricon\":\"styles_loadErroricon__rLzd0\"};","export * from \"/app/apps/web/src/components/common/Mui/index.tsx\"","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3z\"\n}), 'OpenInNew');","var _g;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (-1 !== e.indexOf(n)) continue; t[n] = r[n]; } return t; }\nimport * as React from \"react\";\nvar SvgNetworkError = function SvgNetworkError(_ref) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 90,\n    height: 90,\n    viewBox: \"0 0 90 90\",\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    fill: \"none\",\n    fillRule: \"evenodd\"\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 45,\n    cy: 45,\n    r: 45,\n    className: \"illustration-background-fill\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"illustration-light-fill\",\n    fillRule: \"nonzero\",\n    d: \"M26.24 62c-.57 0-1.13-.15-1.623-.437a3.254 3.254 0 0 1-1.18-4.44l18.76-32.501a3.234 3.234 0 0 1 5.606 0l18.761 32.501c.286.495.436 1.057.436 1.628A3.244 3.244 0 0 1 63.76 62H26.24z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"illustration-background-fill\",\n    fillRule: \"nonzero\",\n    d: \"M47 49h-4V36h4zM47 55h-4v-4h4z\"\n  }))));\n};\nexport default SvgNetworkError;","import { useCallback, useEffect, useRef, useState } from 'react'\nimport { Typography, Card, Box, Link, SvgIcon } from '@mui/material'\nimport { WidgetBody } from '@/components/dashboard/styled'\nimport css from './styles.module.css'\nimport { useBrowserPermissions } from '@/hooks/safe-apps/permissions'\nimport { useRemoteSafeApps } from '@/hooks/safe-apps/useRemoteSafeApps'\nimport { SafeAppsTag } from '@/config/constants'\nimport { useDarkMode } from '@/hooks/useDarkMode'\nimport { OpenInNew } from '@mui/icons-material'\nimport NetworkError from '@/public/images/common/network-error.svg'\nimport useChainId from '@/hooks/useChainId'\nimport { getSafeTokenAddress } from '@/components/common/SafeTokenWidget'\nimport SafeAppIframe from '@/components/safe-apps/AppFrame/SafeAppIframe'\nimport type { UseAppCommunicatorHandlers } from '@/components/safe-apps/AppFrame/useAppCommunicator'\nimport useAppCommunicator from '@/components/safe-apps/AppFrame/useAppCommunicator'\nimport { useCurrentChain } from '@/hooks/useChains'\nimport useGetSafeInfo from '@/components/safe-apps/AppFrame/useGetSafeInfo'\nimport type { SafeAppData } from '@safe-global/safe-gateway-typescript-sdk'\nimport useSafeInfo from '@/hooks/useSafeInfo'\nimport { fetchSafeAppFromManifest } from '@/services/safe-apps/manifest'\nimport useAsync from '@safe-global/utils/hooks/useAsync'\nimport { getOrigin } from '@/components/safe-apps/utils'\nimport InfiniteScroll from '@/components/common/InfiniteScroll'\nimport { DISCORD_URL } from '@safe-global/utils/config/constants'\n\n// A fallback component when the Safe App fails to load\nconst WidgetLoadErrorFallback = () => (\n  <Box\n    sx={{\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      height: '100%',\n    }}\n  >\n    <Card className={css.loadErrorCard}>\n      <Box className={css.loadErrorMsgContainer}>\n        <Typography\n          variant=\"h4\"\n          sx={{\n            color: 'text.primary',\n            fontWeight: 'bold',\n          }}\n        >\n          Couldn&apos;t load governance widgets\n        </Typography>\n        <SvgIcon component={NetworkError} inheritViewBox className={css.loadErroricon} />\n        <Typography\n          variant=\"body1\"\n          sx={{\n            color: 'text.primary',\n          }}\n        >\n          You can try to reload the page and in case the problem persists, please reach out to us via{' '}\n          <Link\n            target=\"_blank\"\n            href={DISCORD_URL}\n            sx={{\n              fontSize: 'medium',\n            }}\n          >\n            Discord\n            <OpenInNew fontSize=\"small\" color=\"primary\" className={css.loadErroricon} />\n          </Link>\n        </Typography>\n      </Box>\n    </Card>\n  </Box>\n)\n\n// A mini Safe App frame with a minimal set of communication handlers\nconst MiniAppFrame = ({ app, title }: { app: SafeAppData; title: string }) => {\n  const chain = useCurrentChain()\n  const isDarkMode = useDarkMode()\n  const theme = isDarkMode ? 'dark' : 'light'\n  const { getAllowedFeaturesList } = useBrowserPermissions()\n  const iframeRef = useRef<HTMLIFrameElement>(null)\n\n  const [, error] = useAsync(() => {\n    if (!chain?.chainId) return\n    return fetchSafeAppFromManifest(app.url, chain.chainId)\n  }, [app.url, chain?.chainId])\n\n  // Initialize the app communicator\n  useAppCommunicator(iframeRef, app, chain, {\n    onGetSafeInfo: useGetSafeInfo(),\n  } as Partial<UseAppCommunicatorHandlers> as UseAppCommunicatorHandlers)\n\n  return error ? (\n    <WidgetLoadErrorFallback />\n  ) : (\n    <SafeAppIframe\n      key={theme}\n      appUrl={`${app.url}/widgets?theme=${theme}`}\n      allowedFeaturesList={getAllowedFeaturesList(getOrigin(app.url))}\n      title={title}\n      iframeRef={iframeRef}\n    />\n  )\n}\n\n// Entire section for the governance widgets\nconst GovernanceSection = () => {\n  const [matchingApps, errorFetchingGovernanceSafeApp] = useRemoteSafeApps({ tag: SafeAppsTag.SAFE_GOVERNANCE_APP })\n  const governanceApp = matchingApps?.[0]\n  const fetchingSafeGovernanceApp = !governanceApp && !errorFetchingGovernanceSafeApp\n  const { safeLoading } = useSafeInfo()\n\n  return (\n    <>\n      {governanceApp || fetchingSafeGovernanceApp ? (\n        <WidgetBody>\n          <Card className={css.widgetWrapper}>\n            {governanceApp && !safeLoading ? (\n              <MiniAppFrame app={governanceApp} title=\"Safe Governance\" />\n            ) : (\n              <Box\n                className={css.widgetWrapper}\n                sx={{\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  textAlign: 'center',\n                }}\n              >\n                <Typography\n                  variant=\"h1\"\n                  sx={{\n                    color: 'text.secondary',\n                  }}\n                >\n                  Loading section...\n                </Typography>\n              </Box>\n            )}\n          </Card>\n        </WidgetBody>\n      ) : (\n        <WidgetLoadErrorFallback />\n      )}\n    </>\n  )\n}\n\nconst LazyGovernanceSection = () => {\n  const [isVisible, setIsVisible] = useState(false)\n  const [hasScrolled, setHasScrolled] = useState(false)\n\n  const onVisible = useCallback(() => {\n    setIsVisible(true)\n  }, [])\n\n  useEffect(() => {\n    const handleScroll = () => {\n      if (window.scrollY > 0) {\n        setHasScrolled(true)\n        window.removeEventListener('scroll', handleScroll)\n      }\n    }\n    window.addEventListener('scroll', handleScroll)\n    return () => window.removeEventListener('scroll', handleScroll)\n  }, [])\n\n  return (\n    <>\n      {hasScrolled && <InfiniteScroll onLoadMore={onVisible} />}\n      <Typography\n        component=\"h2\"\n        variant=\"subtitle1\"\n        sx={{\n          fontWeight: 700,\n        }}\n      >\n        Governance\n      </Typography>\n      <Typography\n        variant=\"body2\"\n        sx={{\n          mb: 2,\n          color: 'text.secondary',\n        }}\n      >\n        Use your SAFE tokens to vote on important proposals or participate in forum discussions.\n      </Typography>\n      <div className={css.lazyWrapper}>{isVisible && <GovernanceSection />}</div>\n    </>\n  )\n}\n\n// Prevent `GovernanceSection` hooks from needlessly being called\nconst GovernanceSectionWrapper = () => {\n  const chainId = useChainId()\n  if (!getSafeTokenAddress(chainId)) {\n    return null\n  }\n  return <LazyGovernanceSection />\n}\n\nexport default GovernanceSectionWrapper\n"],"names":["createSvgIcon","_jsx","d","WidgetLoadErrorFallback","Box","sx","display","flexDirection","alignItems","height","Card","className","css","Typography","variant","color","fontWeight","SvgIcon","component","NetworkError","inheritViewBox","Link","target","href","DISCORD_URL","fontSize","OpenInNew","MiniAppFrame","app","title","chain","useCurrentChain","theme","useDarkMode","getAllowedFeaturesList","useBrowserPermissions","iframeRef","useRef","error","useAsync","chainId","fetchSafeAppFromManifest","url","useAppCommunicator","onGetSafeInfo","useGetSafeInfo","SafeAppIframe","appUrl","allowedFeaturesList","getOrigin","GovernanceSection","matchingApps","errorFetchingGovernanceSafeApp","useRemoteSafeApps","tag","SafeAppsTag","SAFE_GOVERNANCE_APP","governanceApp","fetchingSafeGovernanceApp","safeLoading","useSafeInfo","WidgetBody","justifyContent","textAlign","LazyGovernanceSection","isVisible","setIsVisible","useState","hasScrolled","setHasScrolled","onVisible","useCallback","useEffect","handleScroll","window","scrollY","removeEventListener","addEventListener","InfiniteScroll","onLoadMore","mb","div","useChainId","getSafeTokenAddress","GovernanceSectionWrapper"],"sourceRoot":"","ignoreList":[2]}