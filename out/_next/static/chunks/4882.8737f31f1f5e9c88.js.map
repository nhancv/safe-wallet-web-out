{"version":3,"file":"static/chunks/4882.8737f31f1f5e9c88.js","mappings":"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","sources":["webpack://_N_E/./src/components/tx-flow/common/constants.ts","webpack://_N_E/./src/components/tx-flow/flows/ChangeThreshold/ChooseThreshold.tsx","webpack://_N_E/./src/components/tx-flow/flows/ChangeThreshold/ReviewChangeThreshold.tsx","webpack://_N_E/./src/components/tx-flow/flows/ChangeThreshold/index.tsx","webpack://_N_E/./src/components/common/Mui/index.tsx"],"sourcesContent":["export const TOOLTIP_TITLES = {\n  THRESHOLD:\n    'The threshold of a Safe Account specifies how many signers need to confirm a Safe Account transaction before it can be executed.',\n  REVIEW_WINDOW:\n    'A period that begins after a recovery is submitted on-chain, during which the Safe Account signers can review the proposal and cancel it before it is executable.',\n  PROPOSAL_EXPIRY: 'A period after which the recovery proposal will expire and can no longer be executed.',\n} as const\n","import { Controller, useForm } from 'react-hook-form'\nimport {\n  TextField,\n  MenuItem,\n  Button,\n  CardActions,\n  Divider,\n  Typography,\n  Box,\n  Grid,\n  SvgIcon,\n  Tooltip,\n} from '@mui/material'\nimport { useContext, useEffect } from 'react'\nimport useSafeInfo from '@/hooks/useSafeInfo'\nimport TxCard from '@/components/tx-flow/common/TxCard'\nimport { ChangeThresholdFlowFieldNames } from '@/components/tx-flow/flows/ChangeThreshold'\nimport type { ChangeThresholdFlowProps } from '@/components/tx-flow/flows/ChangeThreshold'\nimport InfoIcon from '@/public/images/notifications/info.svg'\nimport { TOOLTIP_TITLES } from '@/components/tx-flow/common/constants'\nimport commonCss from '@/components/tx-flow/common/styles.module.css'\nimport { maybePlural } from '@safe-global/utils/utils/formatters'\nimport { SafeTxContext } from '@/components/tx-flow/SafeTxProvider'\nimport { createUpdateThresholdTx } from '@/services/tx/tx-sender'\nimport { TxFlowContext } from '@/components/tx-flow/TxFlowProvider'\n\nexport const ChooseThreshold = () => {\n  const { onNext, data } = useContext(TxFlowContext)\n  const { setSafeTx, setSafeTxError } = useContext(SafeTxContext)\n  const { safe } = useSafeInfo()\n\n  const formMethods = useForm<ChangeThresholdFlowProps>({\n    defaultValues: data,\n    mode: 'onChange',\n  })\n\n  const newThreshold = formMethods.watch(ChangeThresholdFlowFieldNames.threshold)\n\n  useEffect(() => {\n    createUpdateThresholdTx(newThreshold).then(setSafeTx).catch(setSafeTxError)\n  }, [newThreshold, setSafeTx, setSafeTxError])\n\n  return (\n    <TxCard>\n      <div>\n        <Typography\n          variant=\"h3\"\n          sx={{\n            fontWeight: 700,\n          }}\n        >\n          Threshold\n          <Tooltip title={TOOLTIP_TITLES.THRESHOLD} arrow placement=\"top\">\n            <span>\n              <SvgIcon\n                component={InfoIcon}\n                inheritViewBox\n                color=\"border\"\n                fontSize=\"small\"\n                sx={{\n                  verticalAlign: 'middle',\n                  ml: 0.5,\n                }}\n              />\n            </span>\n          </Tooltip>\n        </Typography>\n\n        <Typography>Any transaction will require the confirmation of:</Typography>\n      </div>\n      <form onSubmit={formMethods.handleSubmit(onNext)}>\n        <Box\n          sx={{\n            mb: 2,\n          }}\n        >\n          <Controller\n            control={formMethods.control}\n            rules={{\n              validate: (value) => {\n                if (value === safe.threshold) {\n                  return `Current policy is already set to ${safe.threshold}.`\n                }\n              },\n            }}\n            name={ChangeThresholdFlowFieldNames.threshold}\n            render={({ field, fieldState }) => {\n              const isError = !!fieldState.error\n\n              return (\n                <Grid\n                  container\n                  direction=\"row\"\n                  sx={{\n                    gap: 2,\n                    alignItems: 'center',\n                  }}\n                >\n                  <Grid item>\n                    <TextField select {...field} error={isError}>\n                      {safe.owners.map((_, idx) => (\n                        <MenuItem data-testid=\"threshold-item\" key={idx + 1} value={idx + 1}>\n                          {idx + 1}\n                        </MenuItem>\n                      ))}\n                    </TextField>\n                  </Grid>\n                  <Grid item>\n                    <Typography>\n                      out of {safe.owners.length} signer{maybePlural(safe.owners)}\n                    </Typography>\n                  </Grid>\n                  <Grid item xs={12}>\n                    {isError ? (\n                      <Typography\n                        color=\"error\"\n                        sx={{\n                          mb: 2,\n                        }}\n                      >\n                        {fieldState.error?.message}\n                      </Typography>\n                    ) : (\n                      <Typography\n                        sx={{\n                          mb: 2,\n                        }}\n                      >\n                        {fieldState.isDirty ? 'Previous policy was ' : 'Current policy is '}\n                        <b>\n                          {safe.threshold} out of {safe.owners.length}\n                        </b>\n                        .\n                      </Typography>\n                    )}\n                  </Grid>\n                </Grid>\n              )\n            }}\n          />\n        </Box>\n\n        <Divider className={commonCss.nestedDivider} />\n\n        <CardActions>\n          <Button\n            data-testid=\"threshold-next-btn\"\n            variant=\"contained\"\n            type=\"submit\"\n            disabled={\n              !!formMethods.formState.errors[ChangeThresholdFlowFieldNames.threshold] ||\n              // Prevent initial submit before field was interacted with\n              newThreshold === safe.threshold\n            }\n          >\n            Next\n          </Button>\n        </CardActions>\n      </form>\n    </TxCard>\n  )\n}\n","import useSafeInfo from '@/hooks/useSafeInfo'\nimport { useContext, useEffect, type PropsWithChildren } from 'react'\n\nimport { createUpdateThresholdTx } from '@/services/tx/tx-sender'\nimport { SETTINGS_EVENTS, trackEvent } from '@/services/analytics'\nimport { SafeTxContext } from '@/components/tx-flow/SafeTxProvider'\nimport { ChangeThresholdFlowFieldNames } from '@/components/tx-flow/flows/ChangeThreshold'\nimport type { ChangeThresholdFlowProps } from '@/components/tx-flow/flows/ChangeThreshold'\n\nimport ReviewTransaction from '@/components/tx/ReviewTransactionV2'\n\nconst ReviewChangeThreshold = ({\n  params,\n  onSubmit,\n  children,\n}: PropsWithChildren<{ params: ChangeThresholdFlowProps; onSubmit: () => void }>) => {\n  const { safe } = useSafeInfo()\n  const newThreshold = params[ChangeThresholdFlowFieldNames.threshold]\n\n  const { setSafeTx, setSafeTxError } = useContext(SafeTxContext)\n\n  useEffect(() => {\n    createUpdateThresholdTx(newThreshold).then(setSafeTx).catch(setSafeTxError)\n  }, [newThreshold, setSafeTx, setSafeTxError])\n\n  const trackEvents = () => {\n    trackEvent({ ...SETTINGS_EVENTS.SETUP.OWNERS, label: safe.owners.length })\n    trackEvent({ ...SETTINGS_EVENTS.SETUP.THRESHOLD, label: newThreshold })\n  }\n\n  const handleSubmit = () => {\n    trackEvents()\n    onSubmit()\n  }\n\n  return <ReviewTransaction onSubmit={handleSubmit}>{children}</ReviewTransaction>\n}\n\nexport default ReviewChangeThreshold\n","import SaveAddressIcon from '@/public/images/common/save-address.svg'\nimport useSafeInfo from '@/hooks/useSafeInfo'\nimport { ChooseThreshold } from './ChooseThreshold'\nimport { TxFlowType } from '@/services/analytics'\nimport { TxFlow } from '../../TxFlow'\nimport { TxFlowStep } from '../../TxFlowStep'\nimport { type ReviewTransactionProps } from '@/components/tx/ReviewTransactionV2'\nimport { useContext } from 'react'\nimport { TxFlowContext } from '../../TxFlowProvider'\nimport ReviewChangeThreshold from './ReviewChangeThreshold'\n\nexport enum ChangeThresholdFlowFieldNames {\n  threshold = 'threshold',\n}\n\nexport type ChangeThresholdFlowProps = {\n  [ChangeThresholdFlowFieldNames.threshold]: number\n}\n\nconst ReviewThresholdStep = (props: ReviewTransactionProps) => {\n  const { data } = useContext(TxFlowContext)\n\n  return <ReviewChangeThreshold params={data} {...props} />\n}\n\nconst ChangeThresholdFlow = () => {\n  const {\n    safe: { threshold },\n  } = useSafeInfo()\n\n  return (\n    <TxFlow\n      initialData={{ threshold }}\n      icon={SaveAddressIcon}\n      subtitle=\"Change threshold\"\n      eventCategory={TxFlowType.CHANGE_THRESHOLD}\n      ReviewTransactionComponent={ReviewThresholdStep}\n    >\n      <TxFlowStep title=\"New transaction\">\n        <ChooseThreshold />\n      </TxFlowStep>\n    </TxFlow>\n  )\n}\n\nexport default ChangeThresholdFlow\n","export * from \"/app/apps/web/src/components/common/Mui/index.tsx\""],"names":["TOOLTIP_TITLES","THRESHOLD","REVIEW_WINDOW","PROPOSAL_EXPIRY","ChooseThreshold","onNext","data","useContext","TxFlowContext","setSafeTx","setSafeTxError","SafeTxContext","safe","useSafeInfo","formMethods","useForm","defaultValues","mode","newThreshold","watch","ChangeThresholdFlowFieldNames","threshold","useEffect","createUpdateThresholdTx","then","catch","TxCard","div","Typography","variant","sx","fontWeight","Tooltip","title","arrow","placement","span","SvgIcon","component","InfoIcon","inheritViewBox","color","fontSize","verticalAlign","ml","form","onSubmit","handleSubmit","Box","mb","Controller","control","rules","validate","value","name","render","fieldState","field","isError","error","Grid","container","direction","gap","alignItems","item","TextField","select","owners","map","_","idx","MenuItem","data-testid","length","maybePlural","xs","message","isDirty","b","Divider","className","commonCss","CardActions","Button","type","disabled","formState","errors","params","children","ReviewChangeThreshold","trackEvents","trackEvent","SETTINGS_EVENTS","SETUP","OWNERS","label","ReviewTransaction","ReviewThresholdStep","props","ChangeThresholdFlow","TxFlow","initialData","icon","SaveAddressIcon","subtitle","eventCategory","TxFlowType","CHANGE_THRESHOLD","ReviewTransactionComponent","TxFlowStep"],"sourceRoot":"","ignoreList":[]}