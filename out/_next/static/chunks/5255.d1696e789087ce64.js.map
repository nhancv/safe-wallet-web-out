{"version":3,"file":"static/chunks/5255.d1696e789087ce64.js","mappings":"6JA4BA,MArBe,OAAC,OAAEA,CAAK,MAAEC,CAAI,CAAoC,GACzD,CAAEC,CAoBKC,MAAMA,EApBJ,CAAE,CAAGC,CAAAA,EAAAA,EAAAA,CAAAA,CAAQA,GAE5B,OAAOJ,EACL,UAACK,EAAAA,EAAWA,CAAAA,CACVL,MAAOA,EACPC,KAAMA,EACNK,QAASJ,EAAQK,UAAU,CAACC,KAAK,CACjCC,QAASP,EAAQQ,IAAI,CAACC,OAAO,CAC7BC,cAAe,CACbC,IAAK,8BACLC,OAAOC,EACPC,OAda,CAcLD,EACRE,UAAU,CACZ,IAGF,UAACC,EAAAA,GAAQA,CAAAA,CAACC,QAAQ,cAAcL,MAAOb,EAAMe,OAAQf,GAEzD,sJEqCA,MArDgB,OAAC,CAAEmB,SAAO,CAA2B,GAC7CC,CAoDOC,CApDOC,CAAAA,EAAAA,EAAAA,CAoDAD,CApDcC,CAoDd,EAnDdC,EAAQC,CAAAA,EAAAA,EAAAA,EAAAA,CAAeA,GACvBC,EAAWC,CAAAA,EAAAA,EAAAA,EAAAA,CAAcA,CAACC,EAAAA,EAAcA,EACxCC,EAAWC,CAAAA,EAAAA,EAAAA,EAAAA,CAAcA,GACzBC,EAAWL,EAASM,SAAS,CAACC,EAAE,CAAG,GAAoB,aAAjBT,EAAAA,KAAAA,EAAAA,EAAOQ,OAAPR,EAAgB,CAAC,KAAK,GAC5DU,EAAS,GAAcb,MAAAA,CAAXU,GAAuB,OAAZV,GACvBc,EAAYX,OAAAA,EAAAA,KAAAA,EAAAA,EAAOW,OAAPX,EAAOW,GAAa,GAChCC,EAAcZ,SAAAA,KAAAA,EAAAA,EAAAA,cAAqB,CAACa,MAAAA,GAAU,GAEpD,MACE,UAACC,EAAAA,CAAWA,CAAAA,CAACC,IAAI,IAACC,YAAY,iBAAiBpB,QAASA,EAASqB,kBAAkB,aACjF,WAACC,EAAAA,GAAaA,CAAAA,WACZ,WAACC,EAAAA,GAAGA,CAAAA,CAACC,OAAO,OAAEpB,EAAAA,KAAAA,EAAAA,EAAOqB,KAAK,CAACC,CAAbtB,cAA4B,CAAEuB,KAAK,OAAEvB,EAAAA,KAAAA,EAAAA,EAAOqB,KAAK,CAACG,CAAbxB,QAAsB,CAAEyB,GAAI,EAAGC,GAAI,EAAGC,GAAI,CAAC,YAC3FhB,EAAU,wBAA4BA,EAAU,mCAGnD,WAACiB,EAAAA,GAAUA,CAAAA,CAACC,GAAI,YAAG,2HAENjB,EAAY,uDAGzB,WAACO,EAAAA,GAAGA,CAAAA,CAACW,QAAQ,OAAOC,cAAc,SAASC,SAAS,OAAOC,eAAe,SAASC,WAAW,SAASL,GAAI,YACzG,UAACV,EAAAA,GAAGA,CAAAA,CAACgB,GAAI,EAAGC,GAAI,EAAGC,EAAG,EAAGC,OAAO,YAAYC,YAAY,cAAcC,aAAc,WAClF,UAAC7D,EAAAA,CAAMA,CAAAA,CAACH,MAAOkC,EAAQjC,KAAM,QAG/B,UAACgE,EAAAA,GAAgBA,CAAAA,CACfC,QACE,UAACC,EAAAA,GAAMA,CAAAA,CAACC,QAAS1C,EAASM,SAAS,CAACC,EAAE,CAAEoC,SAAU,GAAOxC,EAASyC,CAAAA,EAAAA,EAAAA,EAAAA,CAAcA,CAACC,EAAEC,MAAM,CAACJ,OAAO,KAEnGK,MACE,iCAAE,8BAC2B,WAACC,IAAAA,iBAAGlD,EAAAA,KAAAA,EAAAA,EAAOQ,OAAPR,EAAgB,CAAC,OAAK,SAK3D,UAACmB,EAAAA,GAAGA,CAAAA,CAACgB,GAAI,WACP,UAACgB,EAAAA,CAAWA,CAAAA,CACVC,QAASvD,EACTwD,cAAc,EACdC,WAAY/C,EAASgD,MAAM,CAAG,EAC9BC,WAAW,IACXC,cAAc,eAO5B","sources":["webpack://_N_E/./src/components/common/QRCode/index.tsx","webpack://_N_E/./src/components/common/Mui/index.tsx","webpack://_N_E/./src/components/sidebar/QrCodeButton/QrModal.tsx"],"sourcesContent":["import QRCodeReact from 'qrcode.react'\nimport { Skeleton } from '@mui/material'\nimport { useTheme } from '@mui/material/styles'\nimport type { ReactElement } from 'react'\n\nconst QR_LOGO_SIZE = 20\n\nconst QRCode = ({ value, size }: { value?: string; size: number }): ReactElement => {\n  const { palette } = useTheme()\n\n  return value ? (\n    <QRCodeReact\n      value={value}\n      size={size}\n      bgColor={palette.background.paper}\n      fgColor={palette.text.primary}\n      imageSettings={{\n        src: '/images/safe-logo-green.png',\n        width: QR_LOGO_SIZE,\n        height: QR_LOGO_SIZE,\n        excavate: true,\n      }}\n    />\n  ) : (\n    <Skeleton variant=\"rectangular\" width={size} height={size} />\n  )\n}\n\nexport default QRCode\n","export * from \"/app/apps/web/src/components/common/Mui/index.tsx\"","import { type ReactElement } from 'react'\nimport { Box, Switch, DialogContent, FormControlLabel, Typography } from '@mui/material'\nimport ModalDialog from '@/components/common/ModalDialog'\nimport useSafeAddress from '@/hooks/useSafeAddress'\nimport { useCurrentChain } from '@/hooks/useChains'\nimport QRCode from '@/components/common/QRCode'\nimport EthHashInfo from '@/components/common/EthHashInfo'\nimport { useAppDispatch, useAppSelector } from '@/store'\nimport { selectSettings, setQrShortName } from '@/store/settingsSlice'\n\nconst QrModal = ({ onClose }: { onClose: () => void }): ReactElement => {\n  const safeAddress = useSafeAddress()\n  const chain = useCurrentChain()\n  const settings = useAppSelector(selectSettings)\n  const dispatch = useAppDispatch()\n  const qrPrefix = settings.shortName.qr ? `${chain?.shortName}:` : ''\n  const qrCode = `${qrPrefix}${safeAddress}`\n  const chainName = chain?.chainName || ''\n  const nativeToken = chain?.nativeCurrency.symbol || ''\n\n  return (\n    <ModalDialog open dialogTitle=\"Receive assets\" onClose={onClose} hideChainIndicator>\n      <DialogContent>\n        <Box bgcolor={chain?.theme.backgroundColor} color={chain?.theme.textColor} px={3} py={2} mx={-3}>\n          {chainName} network &mdash; only send {chainName} assets to this Safe Account.\n        </Box>\n\n        <Typography my={2}>\n          This is the address of your Safe Account. Deposit funds by scanning the QR code or copying the address below.\n          Only send {nativeToken} and tokens (e.g. ERC20, ERC721) to this address.\n        </Typography>\n\n        <Box display=\"flex\" flexDirection=\"column\" flexWrap=\"wrap\" justifyContent=\"center\" alignItems=\"center\" my={2}>\n          <Box mt={1} mb={1} p={1} border=\"1px solid\" borderColor=\"border.main\" borderRadius={1}>\n            <QRCode value={qrCode} size={164} />\n          </Box>\n\n          <FormControlLabel\n            control={\n              <Switch checked={settings.shortName.qr} onChange={(e) => dispatch(setQrShortName(e.target.checked))} />\n            }\n            label={\n              <>\n                QR code with chain prefix (<b>{chain?.shortName}:</b>)\n              </>\n            }\n          />\n\n          <Box mt={2}>\n            <EthHashInfo\n              address={safeAddress}\n              shortAddress={false}\n              showPrefix={qrPrefix.length > 0}\n              hasExplorer\n              showCopyButton\n            />\n          </Box>\n        </Box>\n      </DialogContent>\n    </ModalDialog>\n  )\n}\n\nexport default QrModal\n"],"names":["value","size","palette","QRCode","useTheme","QRCodeReact","bgColor","background","paper","fgColor","text","primary","imageSettings","src","width","QR_LOGO_SIZE","height","excavate","Skeleton","variant","onClose","safeAddress","QrModal","useSafeAddress","chain","useCurrentChain","settings","useAppSelector","selectSettings","dispatch","useAppDispatch","qrPrefix","shortName","qr","qrCode","chainName","nativeToken","symbol","ModalDialog","open","dialogTitle","hideChainIndicator","DialogContent","Box","bgcolor","theme","backgroundColor","color","textColor","px","py","mx","Typography","my","display","flexDirection","flexWrap","justifyContent","alignItems","mt","mb","p","border","borderColor","borderRadius","FormControlLabel","control","Switch","checked","onChange","setQrShortName","e","target","label","b","EthHashInfo","address","shortAddress","showPrefix","length","hasExplorer","showCopyButton"],"sourceRoot":"","ignoreList":[]}