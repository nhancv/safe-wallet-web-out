{"version":3,"file":"static/chunks/6165.42c398cd2861259a.js","mappings":"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","sources":["webpack://_N_E/./src/components/tx-flow/common/constants.ts","webpack://_N_E/./src/components/tx-flow/flows/AddOwner/index.tsx","webpack://_N_E/./src/components/common/Mui/index.tsx","webpack://_N_E/./src/components/tx-flow/flows/AddOwner/ChooseOwner.tsx","webpack://_N_E/./src/components/tx-flow/flows/AddOwner/ReviewOwner.tsx"],"sourcesContent":["export const TOOLTIP_TITLES = {\n  THRESHOLD:\n    'The threshold of a Safe Account specifies how many signers need to confirm a Safe Account transaction before it can be executed.',\n  REVIEW_WINDOW:\n    'A period that begins after a recovery is submitted on-chain, during which the Safe Account signers can review the proposal and cancel it before it is executable.',\n  PROPOSAL_EXPIRY: 'A period after which the recovery proposal will expire and can no longer be executed.',\n} as const\n","import { ChooseOwner, ChooseOwnerMode } from '@/components/tx-flow/flows/AddOwner/ChooseOwner'\nimport { ReviewOwner } from '@/components/tx-flow/flows/AddOwner/ReviewOwner'\nimport SaveAddressIcon from '@/public/images/common/save-address.svg'\nimport useSafeInfo from '@/hooks/useSafeInfo'\nimport { useContext } from 'react'\nimport { TxFlowType } from '@/services/analytics'\nimport { TxFlow } from '../../TxFlow'\nimport { TxFlowStep } from '../../TxFlowStep'\nimport { TxFlowContext } from '../../TxFlowProvider'\nimport { type ReviewTransactionProps } from '@/components/tx/ReviewTransactionV2'\n\ntype Owner = {\n  address: string\n  name?: string\n}\n\nexport type AddOwnerFlowProps = {\n  newOwner: Owner\n  removedOwner?: Owner\n  threshold: number\n}\n\nconst ChooseOwnerStep = () => {\n  const { onNext, data } = useContext(TxFlowContext)\n\n  return <ChooseOwner onSubmit={onNext} params={data} mode={ChooseOwnerMode.ADD} />\n}\n\nconst ReviewOwnerStep = (props: ReviewTransactionProps) => {\n  const { data } = useContext(TxFlowContext)\n\n  return <ReviewOwner params={data} {...props} />\n}\n\nconst AddOwnerFlow = ({ address }: { address?: string }) => {\n  const {\n    safe: { threshold },\n    safeLoaded,\n  } = useSafeInfo()\n\n  const defaultValues: AddOwnerFlowProps = {\n    newOwner: {\n      address: address || '',\n      name: '',\n    },\n    threshold,\n  }\n\n  if (!safeLoaded) return null\n\n  return (\n    <TxFlow\n      initialData={defaultValues}\n      eventCategory={TxFlowType.ADD_OWNER}\n      icon={SaveAddressIcon}\n      subtitle=\"Add signer\"\n      ReviewTransactionComponent={ReviewOwnerStep}\n    >\n      <TxFlowStep title=\"New transaction\">\n        <ChooseOwnerStep />\n      </TxFlowStep>\n    </TxFlow>\n  )\n}\n\nexport default AddOwnerFlow\n","export * from \"/app/apps/web/src/components/common/Mui/index.tsx\"","import {\n  Box,\n  Typography,\n  FormControl,\n  InputAdornment,\n  CircularProgress,\n  Button,\n  CardActions,\n  Divider,\n  Grid,\n  TextField,\n  MenuItem,\n  SvgIcon,\n  Tooltip,\n} from '@mui/material'\nimport { useForm, FormProvider, Controller } from 'react-hook-form'\n\nimport AddressBookInput from '@/components/common/AddressBookInput'\nimport NameInput from '@/components/common/NameInput'\nimport { useAddressResolver } from '@/hooks/useAddressResolver'\nimport useSafeInfo from '@/hooks/useSafeInfo'\nimport { uniqueAddress, addressIsNotCurrentSafe } from '@safe-global/utils/utils/validation'\nimport type { AddOwnerFlowProps } from '.'\nimport type { ReplaceOwnerFlowProps } from '../ReplaceOwner'\nimport TxCard from '../../common/TxCard'\nimport InfoIcon from '@/public/images/notifications/info.svg'\nimport commonCss from '@/components/tx-flow/common/styles.module.css'\nimport { TOOLTIP_TITLES } from '@/components/tx-flow/common/constants'\nimport EthHashInfo from '@/components/common/EthHashInfo'\nimport { maybePlural } from '@safe-global/utils/utils/formatters'\n\ntype FormData = Pick<AddOwnerFlowProps | ReplaceOwnerFlowProps, 'newOwner' | 'threshold'>\n\nexport enum ChooseOwnerMode {\n  REPLACE,\n  ADD,\n}\n\nexport const ChooseOwner = ({\n  params,\n  onSubmit,\n  mode,\n}: {\n  params: AddOwnerFlowProps | ReplaceOwnerFlowProps\n  onSubmit: (data: FormData) => void\n  mode: ChooseOwnerMode\n}) => {\n  const { safe, safeAddress } = useSafeInfo()\n\n  const formMethods = useForm<FormData>({\n    defaultValues: params,\n    mode: 'onChange',\n  })\n  const { handleSubmit, formState, watch, control } = formMethods\n  const isValid = Object.keys(formState.errors).length === 0 // do not use formState.isValid because names can be empty\n\n  const notAlreadyOwner = uniqueAddress(safe.owners.map((owner) => owner.value))\n  const notCurrentSafe = addressIsNotCurrentSafe(safeAddress)\n  const combinedValidate = (address: string) => notAlreadyOwner(address) || notCurrentSafe(address)\n\n  const address = watch('newOwner.address')\n\n  const { name, ens, resolving } = useAddressResolver(address)\n\n  // Address book, ENS\n  const fallbackName = name || ens\n\n  const onFormSubmit = handleSubmit((formData: FormData) => {\n    onSubmit({\n      ...formData,\n      newOwner: {\n        ...formData.newOwner,\n        name: formData.newOwner.name || fallbackName,\n      },\n      threshold: formData.threshold,\n    })\n  })\n\n  const newNumberOfOwners = safe.owners.length + (!params.removedOwner ? 1 : 0)\n\n  return (\n    <TxCard>\n      <FormProvider {...formMethods}>\n        <form onSubmit={onFormSubmit} className={commonCss.form}>\n          {params.removedOwner && (\n            <>\n              <Typography\n                variant=\"body2\"\n                sx={{\n                  mb: 1,\n                }}\n              >\n                {params.removedOwner &&\n                  'Review the signer you want to replace in the active Safe Account, then specify the new signer you want to replace it with:'}\n              </Typography>\n              <Box\n                sx={{\n                  my: 3,\n                }}\n              >\n                <Typography\n                  variant=\"body2\"\n                  sx={{\n                    color: 'text.secondary',\n                    mb: 1,\n                  }}\n                >\n                  Current signer\n                </Typography>\n                <EthHashInfo address={params.removedOwner.address} showCopyButton shortAddress={false} hasExplorer />\n              </Box>\n            </>\n          )}\n\n          <FormControl fullWidth>\n            <NameInput\n              label=\"New signer\"\n              name=\"newOwner.name\"\n              placeholder={fallbackName || 'Signer name'}\n              InputLabelProps={{ shrink: true }}\n              InputProps={{\n                endAdornment: resolving && (\n                  <InputAdornment position=\"end\">\n                    <CircularProgress size={20} />\n                  </InputAdornment>\n                ),\n              }}\n            />\n          </FormControl>\n\n          <FormControl fullWidth>\n            <AddressBookInput\n              name=\"newOwner.address\"\n              label=\"Signer address or ENS\"\n              validate={combinedValidate}\n              required\n            />\n          </FormControl>\n\n          <Divider className={commonCss.nestedDivider} />\n\n          {mode === ChooseOwnerMode.ADD && (\n            <FormControl fullWidth>\n              <Typography\n                variant=\"h6\"\n                sx={{\n                  fontWeight: 700,\n                  mt: 3,\n                }}\n              >\n                Threshold\n                <Tooltip title={TOOLTIP_TITLES.THRESHOLD} arrow placement=\"top\">\n                  <span>\n                    <SvgIcon\n                      component={InfoIcon}\n                      inheritViewBox\n                      color=\"border\"\n                      fontSize=\"small\"\n                      sx={{\n                        verticalAlign: 'middle',\n                        ml: 0.5,\n                      }}\n                    />\n                  </span>\n                </Tooltip>\n              </Typography>\n\n              <Typography\n                variant=\"body2\"\n                sx={{\n                  mb: 1,\n                }}\n              >\n                Any transaction requires the confirmation of:\n              </Typography>\n\n              <Grid\n                container\n                direction=\"row\"\n                sx={{\n                  alignItems: 'center',\n                  gap: 2,\n                  pt: 1,\n                }}\n              >\n                <Grid item>\n                  <Controller\n                    control={control}\n                    name=\"threshold\"\n                    render={({ field }) => (\n                      <TextField data-testid=\"owner-number-dropdown\" select {...field}>\n                        {safe.owners.map((_, idx) => (\n                          <MenuItem key={idx + 1} value={idx + 1}>\n                            {idx + 1}\n                          </MenuItem>\n                        ))}\n                        {!params.removedOwner && (\n                          <MenuItem key={newNumberOfOwners} value={newNumberOfOwners}>\n                            {newNumberOfOwners}\n                          </MenuItem>\n                        )}\n                      </TextField>\n                    )}\n                  />\n                </Grid>\n                <Grid item>\n                  <Typography>\n                    out of {newNumberOfOwners} signer{maybePlural(newNumberOfOwners)}\n                  </Typography>\n                </Grid>\n              </Grid>\n            </FormControl>\n          )}\n\n          <Divider className={commonCss.nestedDivider} />\n\n          <CardActions>\n            <Button data-testid=\"add-owner-next-btn\" variant=\"contained\" type=\"submit\" disabled={!isValid || resolving}>\n              Next\n            </Button>\n          </CardActions>\n        </form>\n      </FormProvider>\n    </TxCard>\n  )\n}\n","import { useCurrentChain } from '@/hooks/useChains'\nimport { useContext, useEffect, type PropsWithChildren } from 'react'\n\nimport useSafeInfo from '@/hooks/useSafeInfo'\nimport { trackEvent, SETTINGS_EVENTS } from '@/services/analytics'\nimport { createSwapOwnerTx, createAddOwnerTx } from '@/services/tx/tx-sender'\nimport { useAppDispatch } from '@/store'\nimport { upsertAddressBookEntries } from '@/store/addressBookSlice'\nimport { SafeTxContext } from '../../SafeTxProvider'\nimport type { AddOwnerFlowProps } from '.'\nimport type { ReplaceOwnerFlowProps } from '../ReplaceOwner'\nimport { SettingsChangeContext } from './context'\nimport ReviewTransaction from '@/components/tx/ReviewTransactionV2'\n\nexport const ReviewOwner = ({\n  params,\n  onSubmit,\n  children,\n}: PropsWithChildren<{\n  params: AddOwnerFlowProps | ReplaceOwnerFlowProps\n  onSubmit?: () => void\n}>) => {\n  const dispatch = useAppDispatch()\n  const { setSafeTx, setSafeTxError } = useContext(SafeTxContext)\n  const { safe } = useSafeInfo()\n  const { chainId } = safe\n  const chain = useCurrentChain()\n  const { newOwner, removedOwner, threshold } = params\n\n  useEffect(() => {\n    if (!chain) return\n\n    const promise = removedOwner\n      ? createSwapOwnerTx(chain, safe.deployed, {\n          newOwnerAddress: newOwner.address,\n          oldOwnerAddress: removedOwner.address,\n        })\n      : createAddOwnerTx(chain, safe.deployed, {\n          ownerAddress: newOwner.address,\n          threshold,\n        })\n\n    promise.then(setSafeTx).catch(setSafeTxError)\n  }, [removedOwner, newOwner, threshold, setSafeTx, setSafeTxError, chain, safe.deployed])\n\n  const addAddressBookEntry = () => {\n    if (typeof newOwner.name !== 'undefined') {\n      dispatch(\n        upsertAddressBookEntries({\n          chainIds: [chainId],\n          address: newOwner.address,\n          name: newOwner.name,\n        }),\n      )\n    }\n\n    trackEvent({ ...SETTINGS_EVENTS.SETUP.THRESHOLD, label: safe.threshold })\n    trackEvent({ ...SETTINGS_EVENTS.SETUP.OWNERS, label: safe.owners.length })\n  }\n\n  const handleSubmit = () => {\n    addAddressBookEntry()\n    onSubmit?.()\n  }\n\n  return (\n    <SettingsChangeContext.Provider value={params}>\n      <ReviewTransaction onSubmit={handleSubmit}>{children}</ReviewTransaction>\n    </SettingsChangeContext.Provider>\n  )\n}\n"],"names":["TOOLTIP_TITLES","THRESHOLD","REVIEW_WINDOW","PROPOSAL_EXPIRY","ChooseOwnerStep","onNext","data","useContext","TxFlowContext","ChooseOwner","onSubmit","params","mode","ChooseOwnerMode","ADD","ReviewOwnerStep","ReviewOwner","props","address","safe","AddOwnerFlow","threshold","safeLoaded","useSafeInfo","TxFlow","initialData","newOwner","name","eventCategory","TxFlowType","ADD_OWNER","icon","SaveAddressIcon","subtitle","ReviewTransactionComponent","TxFlowStep","title","safeAddress","formMethods","useForm","defaultValues","handleSubmit","formState","watch","control","isValid","keys","errors","length","notAlreadyOwner","uniqueAddress","owners","map","owner","value","notCurrentSafe","addressIsNotCurrentSafe","ens","resolving","useAddressResolver","fallbackName","onFormSubmit","formData","newNumberOfOwners","removedOwner","TxCard","FormProvider","form","className","commonCss","Typography","variant","sx","mb","Box","my","color","EthHashInfo","showCopyButton","shortAddress","hasExplorer","FormControl","fullWidth","NameInput","label","placeholder","InputLabelProps","shrink","InputProps","endAdornment","InputAdornment","position","CircularProgress","size","AddressBookInput","validate","combinedValidate","required","Divider","fontWeight","mt","Tooltip","arrow","placement","span","SvgIcon","component","InfoIcon","inheritViewBox","fontSize","verticalAlign","ml","Grid","container","direction","alignItems","gap","pt","item","Controller","render","field","TextField","data-testid","select","_","idx","MenuItem","maybePlural","CardActions","Button","type","disabled","children","dispatch","useAppDispatch","setSafeTx","setSafeTxError","SafeTxContext","chainId","chain","useCurrentChain","useEffect","promise","createSwapOwnerTx","deployed","newOwnerAddress","oldOwnerAddress","createAddOwnerTx","ownerAddress","then","catch","addAddressBookEntry","upsertAddressBookEntries","chainIds","trackEvent","SETTINGS_EVENTS","SETUP","OWNERS","SettingsChangeContext","Provider","ReviewTransaction"],"sourceRoot":"","ignoreList":[]}