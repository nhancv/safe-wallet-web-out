{"version":3,"file":"static/chunks/8167.6c76c8118d764ace.js","mappings":"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","sources":["webpack://_N_E/./src/components/common/Mui/index.tsx","webpack://_N_E/./node_modules/@mui/icons-material/esm/Circle.js","webpack://_N_E/./src/components/new-safe/create/steps/StatusStep/StatusStep.tsx","webpack://_N_E/./src/components/tx-flow/flows/SuccessScreen/StatusStepper.tsx","webpack://_N_E/./src/components/tx-flow/flows/SuccessScreen/statuses/ProcessingStatus.tsx","webpack://_N_E/./src/components/tx-flow/flows/SuccessScreen/statuses/IndexingStatus.tsx","webpack://_N_E/./src/components/tx-flow/flows/SuccessScreen/statuses/DefaultStatus.tsx","webpack://_N_E/./src/hooks/usePredictSafeAddressFromTxDetails.ts","webpack://_N_E/./src/components/tx-flow/flows/SuccessScreen/index.tsx","webpack://_N_E/./src/components/tx-flow/flows/SuccessScreen/styles.module.css","webpack://_N_E/./src/components/new-safe/create/steps/StatusStep/styles.module.css","webpack://_N_E/./node_modules/@mui/icons-material/esm/CircleOutlined.js"],"sourcesContent":["export * from \"/app/apps/web/src/components/common/Mui/index.tsx\"","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2\"\n}), 'Circle');","import type { ReactNode } from 'react'\nimport { Box, Skeleton, StepLabel, SvgIcon } from '@mui/material'\nimport css from '@/components/new-safe/create/steps/StatusStep/styles.module.css'\nimport CircleIcon from '@mui/icons-material/Circle'\nimport CircleOutlinedIcon from '@mui/icons-material/CircleOutlined'\nimport Identicon from '@/components/common/Identicon'\n\nconst StatusStep = ({\n  isLoading,\n  safeAddress,\n  children,\n}: {\n  isLoading: boolean\n  safeAddress?: string\n  children: ReactNode\n}) => {\n  const Icon = isLoading ? CircleOutlinedIcon : CircleIcon\n  const color = isLoading ? 'border' : 'primary'\n\n  return (\n    <StepLabel\n      className={css.label}\n      icon={<SvgIcon component={Icon} className={css.icon} color={color} fontSize=\"small\" />}\n    >\n      <Box display=\"flex\" alignItems=\"center\" gap={2} color={color}>\n        <Box flexShrink={0}>\n          {safeAddress && !isLoading ? (\n            <Identicon address={safeAddress} size={32} />\n          ) : (\n            <Skeleton variant=\"circular\" width=\"2.3em\" height=\"2.3em\" />\n          )}\n        </Box>\n        {children}\n      </Box>\n    </StepLabel>\n  )\n}\n\nexport default StatusStep\n","import { Box, Step, StepConnector, Stepper, Typography } from '@mui/material'\nimport css from '@/components/new-safe/create/steps/StatusStep/styles.module.css'\nimport EthHashInfo from '@/components/common/EthHashInfo'\nimport StatusStep from '@/components/new-safe/create/steps/StatusStep/StatusStep'\nimport useSafeInfo from '@/hooks/useSafeInfo'\nimport { PendingStatus } from '@/store/pendingTxsSlice'\n\nconst StatusStepper = ({ status, txHash }: { status?: PendingStatus; txHash?: string }) => {\n  const { safeAddress } = useSafeInfo()\n\n  const isProcessing = status === PendingStatus.PROCESSING || status === PendingStatus.INDEXING || status === undefined\n  const isProcessed = status === PendingStatus.INDEXING || status === undefined\n  const isSuccess = status === undefined\n\n  return (\n    <Stepper orientation=\"vertical\" nonLinear connector={<StepConnector className={css.connector} />}>\n      <Step>\n        <StatusStep isLoading={!isProcessing} safeAddress={safeAddress}>\n          <Box>\n            <Typography variant=\"body2\" fontWeight=\"700\">\n              Your transaction\n            </Typography>\n            {txHash && (\n              <EthHashInfo\n                address={txHash}\n                hasExplorer\n                showCopyButton\n                showName={false}\n                shortAddress={false}\n                showAvatar={false}\n              />\n            )}\n          </Box>\n        </StatusStep>\n      </Step>\n      <Step>\n        <StatusStep isLoading={!isProcessed} safeAddress={safeAddress}>\n          <Box>\n            <Typography variant=\"body2\" fontWeight=\"700\">\n              {isProcessed ? 'Processed' : 'Processing'}\n            </Typography>\n          </Box>\n        </StatusStep>\n      </Step>\n      <Step>\n        <StatusStep isLoading={!isSuccess} safeAddress={safeAddress}>\n          <Typography variant=\"body2\" fontWeight=\"700\">\n            {isSuccess ? 'Indexed' : 'Indexing'}\n          </Typography>\n        </StatusStep>\n      </Step>\n      <Step>\n        <StatusStep isLoading={!isSuccess} safeAddress={safeAddress}>\n          <Typography variant=\"body2\" fontWeight=\"700\">\n            Transaction is executed\n          </Typography>\n        </StatusStep>\n      </Step>\n    </Stepper>\n  )\n}\n\nexport default StatusStepper\n","// Extract status handling into separate components\nimport { Box, Typography } from '@mui/material'\nimport { SpeedUpMonitor } from '@/features/speedup/components/SpeedUpMonitor'\nimport { PendingStatus, type PendingTx } from '@/store/pendingTxsSlice'\n\ntype Props = {\n  txId: string\n  pendingTx: PendingTx\n  willDeploySafe: boolean\n}\nexport const ProcessingStatus = ({ txId, pendingTx, willDeploySafe: isCreatingSafe }: Props) => (\n  <Box px={3} mt={3}>\n    <Typography data-testid=\"transaction-status\" variant=\"h6\" mt={2} fontWeight={700}>\n      {!isCreatingSafe ? 'Transaction is now processing' : 'Nested Safe is now being created'}\n    </Typography>\n    <Typography variant=\"body2\" mb={3}>\n      {!isCreatingSafe ? 'The transaction' : 'Your Nested Safe'} was confirmed and is now being processed.\n    </Typography>\n    <Box>\n      {pendingTx.status === PendingStatus.PROCESSING && (\n        <SpeedUpMonitor txId={txId} pendingTx={pendingTx} modalTrigger=\"alertBox\" />\n      )}\n    </Box>\n  </Box>\n)\n","import { Box, Typography } from '@mui/material'\nimport classNames from 'classnames'\nimport css from '@/components/tx-flow/flows/SuccessScreen/styles.module.css'\n\nexport const IndexingStatus = ({ willDeploySafe: isCreatingSafe }: { willDeploySafe: boolean }) => (\n  <Box px={3} mt={3}>\n    <Typography data-testid=\"transaction-status\" variant=\"h6\" mt={2} fontWeight={700}>\n      {!isCreatingSafe ? 'Transaction' : 'Nested Safe'} was processed\n    </Typography>\n    <Box className={classNames(css.instructions, css.infoBg)}>\n      <Typography variant=\"body2\"> It is now being indexed.</Typography>\n    </Box>\n  </Box>\n)\n","import { Box, Typography } from '@mui/material'\nimport classNames from 'classnames'\nimport css from '@/components/tx-flow/flows/SuccessScreen/styles.module.css'\nimport { isTimeoutError } from '@/utils/ethers-utils'\n\nconst TRANSACTION_FAILED = 'Transaction failed'\nconst NESTED_SAFE_SUCCESSFUL = 'Nested Safe was created'\nconst TRANSACTION_SUCCESSFUL = 'Transaction was successful'\n\ntype Props = {\n  error: undefined | Error\n  willDeploySafe: boolean\n}\nexport const DefaultStatus = ({ error, willDeploySafe: isCreatingSafe }: Props) => (\n  <Box px={3} mt={3}>\n    <Typography data-testid=\"transaction-status\" variant=\"h6\" mt={2} fontWeight={700}>\n      {error ? TRANSACTION_FAILED : !isCreatingSafe ? TRANSACTION_SUCCESSFUL : NESTED_SAFE_SUCCESSFUL}\n    </Typography>\n    {error && (\n      <Box className={classNames(css.instructions, error ? css.errorBg : css.infoBg)}>\n        <Typography variant=\"body2\">\n          {error ? (isTimeoutError(error) ? 'Transaction timed out' : error.message) : ''}\n        </Typography>\n      </Box>\n    )}\n  </Box>\n)\n","import type { DataDecoded, TransactionDetails } from '@safe-global/safe-gateway-typescript-sdk'\n\nimport { predictSafeAddress } from '@/features/multichain/utils/utils'\nimport useAsync from '@safe-global/utils/hooks/useAsync'\nimport { useWeb3ReadOnly } from './wallets/web3'\n\nexport function _getSetupFromDataDecoded(dataDecoded: DataDecoded) {\n  if (dataDecoded?.method !== 'createProxyWithNonce') {\n    return\n  }\n\n  const singleton = dataDecoded?.parameters?.[0]?.value\n  const initializer = dataDecoded?.parameters?.[1]?.value\n  const saltNonce = dataDecoded?.parameters?.[2]?.value\n\n  if (typeof singleton !== 'string' || typeof initializer !== 'string' || typeof saltNonce !== 'string') {\n    return\n  }\n\n  return {\n    singleton,\n    initializer,\n    saltNonce,\n  }\n}\n\nfunction isCreateProxyWithNonce(dataDecoded?: DataDecoded) {\n  return dataDecoded?.method === 'createProxyWithNonce'\n}\n\nexport function usePredictSafeAddressFromTxDetails(txDetails: TransactionDetails | undefined) {\n  const web3 = useWeb3ReadOnly()\n\n  return useAsync(() => {\n    const txData = txDetails?.txData\n    if (!web3 || !txData) {\n      return\n    }\n\n    const isMultiSend = txData?.dataDecoded?.method === 'multiSend'\n\n    const dataDecoded = isMultiSend\n      ? txData?.dataDecoded?.parameters?.[0]?.valueDecoded?.find((tx) => isCreateProxyWithNonce(tx?.dataDecoded))\n          ?.dataDecoded\n      : txData?.dataDecoded\n    const factoryAddress = isMultiSend\n      ? txData?.dataDecoded?.parameters?.[0]?.valueDecoded?.find((tx) => isCreateProxyWithNonce(tx?.dataDecoded))?.to\n      : txData?.to?.value\n\n    if (!dataDecoded || !isCreateProxyWithNonce(dataDecoded) || !factoryAddress) {\n      return\n    }\n\n    const setup = _getSetupFromDataDecoded(dataDecoded)\n    if (!setup) {\n      return\n    }\n\n    return predictSafeAddress(setup, factoryAddress, web3)\n  }, [txDetails?.txData, web3])\n}\n","import StatusStepper from './StatusStepper'\nimport { Button, Container, Divider, Paper } from '@mui/material'\nimport classnames from 'classnames'\nimport Link from 'next/link'\nimport css from './styles.module.css'\nimport { useAppSelector } from '@/store'\nimport { PendingStatus, selectPendingTxById } from '@/store/pendingTxsSlice'\nimport { useCallback, useContext, useEffect, useState } from 'react'\nimport { useCurrentChain } from '@/hooks/useChains'\nimport { TxEvent, txSubscribe } from '@/services/tx/txEvents'\nimport useSafeInfo from '@/hooks/useSafeInfo'\nimport { TxModalContext } from '../..'\nimport LoadingSpinner, { SpinnerStatus } from '@/components/new-safe/create/steps/StatusStep/LoadingSpinner'\nimport { ProcessingStatus } from '@/components/tx-flow/flows/SuccessScreen/statuses/ProcessingStatus'\nimport { IndexingStatus } from '@/components/tx-flow/flows/SuccessScreen/statuses/IndexingStatus'\nimport { DefaultStatus } from '@/components/tx-flow/flows/SuccessScreen/statuses/DefaultStatus'\nimport { isSwapTransferOrderTxInfo } from '@/utils/transaction-guards'\nimport { getTxLink } from '@/utils/tx-link'\nimport useTxDetails from '@/hooks/useTxDetails'\nimport { usePredictSafeAddressFromTxDetails } from '@/hooks/usePredictSafeAddressFromTxDetails'\nimport { AppRoutes } from '@/config/routes'\nimport { NESTED_SAFE_EVENTS, NESTED_SAFE_LABELS } from '@/services/analytics/events/nested-safes'\nimport Track from '@/components/common/Track'\n\ninterface Props {\n  /** The ID assigned to the transaction in the client-gateway */\n  txId?: string\n  /** For module transaction, pass the transaction hash while the `txId` is not yet available */\n  txHash?: string\n}\n\nconst SuccessScreen = ({ txId, txHash }: Props) => {\n  const [localTxHash, setLocalTxHash] = useState<string | undefined>(txHash)\n  const [error, setError] = useState<Error>()\n  const { setTxFlow } = useContext(TxModalContext)\n  const chain = useCurrentChain()\n  const pendingTx = useAppSelector((state) => (txId ? selectPendingTxById(state, txId) : undefined))\n  const { safeAddress } = useSafeInfo()\n  const status = !txId && txHash ? PendingStatus.INDEXING : pendingTx?.status\n  const pendingTxHash = pendingTx && 'txHash' in pendingTx ? pendingTx.txHash : undefined\n  const txLink = chain && txId && getTxLink(txId, chain, safeAddress)\n  const [txDetails] = useTxDetails(txId)\n  const isSwapOrder = txDetails && isSwapTransferOrderTxInfo(txDetails.txInfo)\n  const [predictedSafeAddress] = usePredictSafeAddressFromTxDetails(txDetails)\n\n  useEffect(() => {\n    if (!pendingTxHash) return\n\n    setLocalTxHash(pendingTxHash)\n  }, [pendingTxHash])\n\n  useEffect(() => {\n    const unsubFns: Array<() => void> = ([TxEvent.FAILED, TxEvent.REVERTED] as const).map((event) =>\n      txSubscribe(event, (detail) => {\n        if (detail.txId === txId && pendingTx) setError(detail.error)\n      }),\n    )\n\n    return () => unsubFns.forEach((unsubscribe) => unsubscribe())\n  }, [txId, pendingTx])\n\n  const onClose = useCallback(() => {\n    setTxFlow(undefined)\n  }, [setTxFlow])\n\n  const isSuccess = status === undefined\n  const spinnerStatus = error ? SpinnerStatus.ERROR : isSuccess ? SpinnerStatus.SUCCESS : SpinnerStatus.PROCESSING\n\n  let StatusComponent\n  switch (status) {\n    case PendingStatus.PROCESSING:\n    case PendingStatus.RELAYING:\n      // status can only have these values if txId & pendingTx are defined\n      StatusComponent = <ProcessingStatus txId={txId!} pendingTx={pendingTx!} willDeploySafe={!!predictedSafeAddress} />\n      break\n    case PendingStatus.INDEXING:\n      StatusComponent = <IndexingStatus willDeploySafe={!!predictedSafeAddress} />\n      break\n    default:\n      StatusComponent = <DefaultStatus error={error} willDeploySafe={!!predictedSafeAddress} />\n  }\n\n  return (\n    <Container\n      component={Paper}\n      disableGutters\n      sx={{\n        textAlign: 'center',\n        maxWidth: `${900 - 75}px`, // md={11}\n      }}\n      maxWidth={false}\n    >\n      <div className={css.row}>\n        <LoadingSpinner status={spinnerStatus} />\n        {StatusComponent}\n      </div>\n\n      {!error && (\n        <>\n          <Divider />\n          <div className={css.row}>\n            <StatusStepper status={status} txHash={localTxHash} />\n          </div>\n        </>\n      )}\n\n      <Divider />\n\n      <div className={classnames(css.row, css.buttons)}>\n        {isSwapOrder && (\n          <Button data-testid=\"finish-transaction-btn\" variant=\"outlined\" size=\"small\" onClick={onClose}>\n            Back to swaps\n          </Button>\n        )}\n\n        {txLink && (\n          <Link {...txLink} passHref target=\"_blank\" rel=\"noreferrer\" legacyBehavior>\n            <Button\n              data-testid=\"view-transaction-btn\"\n              variant={isSwapOrder ? 'contained' : 'outlined'}\n              size=\"small\"\n              onClick={onClose}\n            >\n              View transaction\n            </Button>\n          </Link>\n        )}\n\n        {!isSwapOrder &&\n          (predictedSafeAddress ? (\n            <Track {...NESTED_SAFE_EVENTS.OPEN_NESTED_SAFE} label={NESTED_SAFE_LABELS.success_screen}>\n              <Link\n                href={{ pathname: AppRoutes.home, query: { safe: `${chain?.shortName}:${predictedSafeAddress}` } }}\n                passHref\n                legacyBehavior\n              >\n                <Button\n                  data-testid=\"open-nested-safe-btn\"\n                  variant=\"contained\"\n                  size=\"small\"\n                  onClick={onClose}\n                  disabled={!isSuccess}\n                >\n                  Go to Nested Safe\n                </Button>\n              </Link>\n            </Track>\n          ) : (\n            <Button data-testid=\"finish-transaction-btn\" variant=\"contained\" size=\"small\" onClick={onClose}>\n              Finish\n            </Button>\n          ))}\n      </div>\n    </Container>\n  )\n}\n\nexport default SuccessScreen\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"styles_row__fXJ7w\",\"buttons\":\"styles_buttons__bE8Aj\",\"instructions\":\"styles_instructions__tSmyR\",\"errorBg\":\"styles_errorBg__FMLGd\",\"infoBg\":\"styles_infoBg__BhdGw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"icon\":\"styles_icon__pLAhx\",\"connector\":\"styles_connector__J6DS5\",\"label\":\"styles_label__hIz7I\"};","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2m0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8\"\n}), 'CircleOutlined');"],"names":["createSvgIcon","_jsx","d","isLoading","StatusStep","safeAddress","children","Icon","CircleOutlinedIcon","CircleIcon","color","StepLabel","className","css","icon","SvgIcon","component","fontSize","Box","display","alignItems","gap","flexShrink","Identicon","address","size","Skeleton","variant","width","height","status","txHash","StatusStepper","useSafeInfo","isProcessing","PendingStatus","PROCESSING","INDEXING","undefined","isProcessed","isSuccess","Stepper","orientation","nonLinear","connector","StepConnector","Step","Typography","fontWeight","EthHashInfo","hasExplorer","showCopyButton","showName","shortAddress","showAvatar","ProcessingStatus","txId","pendingTx","willDeploySafe","isCreatingSafe","px","mt","data-testid","mb","SpeedUpMonitor","modalTrigger","classNames","DefaultStatus","error","TRANSACTION_FAILED","TRANSACTION_SUCCESSFUL","NESTED_SAFE_SUCCESSFUL","isTimeoutError","message","isCreateProxyWithNonce","dataDecoded","method","StatusComponent","SuccessScreen","localTxHash","setLocalTxHash","useState","setError","setTxFlow","useContext","TxModalContext","chain","useCurrentChain","useAppSelector","selectPendingTxById","state","pendingTxHash","txLink","getTxLink","txDetails","useTxDetails","isSwapOrder","isSwapTransferOrderTxInfo","txInfo","predictedSafeAddress","usePredictSafeAddressFromTxDetails","web3","useWeb3ReadOnly","useAsync","txData","isMultiSend","parameters","valueDecoded","find","tx","factoryAddress","to","value","setup","_getSetupFromDataDecoded","singleton","initializer","saltNonce","predictSafeAddress","useEffect","unsubFns","TxEvent","FAILED","REVERTED","map","txSubscribe","event","detail","forEach","unsubscribe","onClose","useCallback","spinnerStatus","SpinnerStatus","ERROR","SUCCESS","RELAYING","IndexingStatus","Container","Paper","disableGutters","sx","textAlign","maxWidth","div","LoadingSpinner","Divider","classnames","Button","onClick","Link","passHref","target","rel","legacyBehavior","Track","NESTED_SAFE_EVENTS","OPEN_NESTED_SAFE","label","NESTED_SAFE_LABELS","success_screen","href","pathname","AppRoutes","home","query","safe","shortName","disabled"],"sourceRoot":"","ignoreList":[1,11]}