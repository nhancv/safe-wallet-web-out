{"version":3,"file":"static/chunks/8625.d6625299bf36df0c.js","mappings":"2MAwCA,MA/BiB,OAAC,UAAEA,CAAQ,CA+BbC,QAAQA,CA/BOC,CAAQ,CAA0B,GACxD,SAAEC,CAAO,CAAE,CAAGC,CAAAA,EAAAA,EAAAA,UAAAA,CAAUA,CAACC,EAAAA,EAAaA,EACtC,WAAEC,CAAS,gBAAEC,CAAc,UAAEC,CAAQ,CAAE,CAAGJ,CAAAA,EAAAA,EAAAA,UAAAA,CAAUA,CAACK,EAAAA,CAAaA,EAUxE,MARAC,CAAAA,EAAAA,EAAAA,SAAAA,CAASA,CAAC,UACOC,GAAXR,IAEJK,EAASL,EAFiB,CAI1BS,CAAAA,EAAAA,EAAAA,EAAAA,CAAcA,CAACT,GAASU,IAAI,CAACP,GAAWQ,KAAK,CAACP,GAChD,EAAG,CAACJ,EAASK,EAAUF,EAAWC,EAAe,EAG/C,WAACQ,EAAAA,CAAiBA,CAAAA,CAACf,SAAUA,YAC3B,UAACgB,EAAAA,GAAUA,CAAAA,CAACC,GAAI,WAAG,6GAInB,WAACD,EAAAA,GAAUA,CAAAA,CAACC,GAAI,YAAG,sBACE,UAACC,IAAAA,UAAGf,OAGzB,UAACa,EAAAA,GAAUA,CAAAA,CAACC,GAAI,WAAG,6FAIlBf,IAGP,4BClBA,MAXqB,OAAC,SAAEC,CAAO,CAAiB,SAC9C,UAACgB,EAAAA,CAAMA,CAAAA,CACLC,SAAS,SACTC,cAAeC,EAAAA,EAAUA,CAACC,SAAS,CACnCC,2BAA4BvB,EAC5BwB,aAAa,EADuBxB,QAE3BE,EACTuB,WAAW","sources":["webpack://_N_E/./src/components/tx-flow/flows/RejectTx/RejectTx.tsx","webpack://_N_E/./src/components/tx-flow/flows/RejectTx/index.tsx"],"sourcesContent":["import type { ReactElement } from 'react'\nimport { Typography } from '@mui/material'\nimport { createRejectTx } from '@/services/tx/tx-sender'\nimport { useContext, useEffect } from 'react'\nimport { SafeTxContext } from '../../SafeTxProvider'\nimport ReviewTransaction from '@/components/tx/ReviewTransactionV2'\nimport type { ReviewTransactionProps } from '@/components/tx/ReviewTransactionV2'\nimport { TxFlowContext } from '../../TxFlowProvider'\n\nconst RejectTx = ({ onSubmit, children }: ReviewTransactionProps): ReactElement => {\n  const { txNonce } = useContext(TxFlowContext)\n  const { setSafeTx, setSafeTxError, setNonce } = useContext(SafeTxContext)\n\n  useEffect(() => {\n    if (txNonce == undefined) return\n\n    setNonce(txNonce)\n\n    createRejectTx(txNonce).then(setSafeTx).catch(setSafeTxError)\n  }, [txNonce, setNonce, setSafeTx, setSafeTxError])\n\n  return (\n    <ReviewTransaction onSubmit={onSubmit}>\n      <Typography mb={2}>\n        To reject the transaction, a separate rejection transaction will be created to replace the original one.\n      </Typography>\n\n      <Typography mb={2}>\n        Transaction nonce: <b>{txNonce}</b>\n      </Typography>\n\n      <Typography mb={2}>\n        You will need to confirm the rejection transaction with your currently connected wallet.\n      </Typography>\n\n      {children}\n    </ReviewTransaction>\n  )\n}\n\nexport default RejectTx\n","import { type ReactElement } from 'react'\nimport RejectTx from './RejectTx'\nimport { TxFlowType } from '@/services/analytics'\nimport { TxFlow } from '../../TxFlow'\n\ntype RejectTxProps = {\n  txNonce: number\n}\n\nconst RejectTxFlow = ({ txNonce }: RejectTxProps): ReactElement => (\n  <TxFlow\n    subtitle=\"Reject\"\n    eventCategory={TxFlowType.REJECT_TX}\n    ReviewTransactionComponent={RejectTx}\n    isBatchable={false}\n    txNonce={txNonce}\n    isRejection\n  />\n)\n\nexport default RejectTxFlow\n"],"names":["onSubmit","RejectTx","children","txNonce","useContext","TxFlowContext","setSafeTx","setSafeTxError","setNonce","SafeTxContext","useEffect","undefined","createRejectTx","then","catch","ReviewTransaction","Typography","mb","b","TxFlow","subtitle","eventCategory","TxFlowType","REJECT_TX","ReviewTransactionComponent","isBatchable","isRejection"],"sourceRoot":"","ignoreList":[]}