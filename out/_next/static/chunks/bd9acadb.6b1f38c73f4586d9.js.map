{"version":3,"file":"static/chunks/bd9acadb.6b1f38c73f4586d9.js","mappings":"iGA+RA,EAkHA,EAcA,2HA3ZA,cACA,WAOA,cACA,UACA,CACA,aACA,0BACA,CACA,cACA,YACA,CACA,cACA,0BACA,CACA,gBACA,mEACA,CAUA,oBACA,eACA,SAhCA,KAEA,eACA,UACA,QACA,EA2BA,0BACA,MAsCA,iCACA,IACA,6BACA,eACA,kCAEA,UACA,cACA,cACA,SACA,YACA,MAEA,CAAK,EACL,YACA,IACA,CAkBA,gBACA,gBACA,CACA,kBACA,WACA,yBACA,gBACA,QACA,gBACA,MACA,CACA,CACA,cACA,MACA,gBACA,2DACA,UACA,EAEA,gBAOA,gBAEA,OADA,eACA,QAEA,kBACA,yBACA,CACA,cACA,cACA,2BAEA,CACA,gBACA,YAAoB,WAAuB,KAC3C,MACA,SAEA,CACA,cACA,gCACA,CACA,cACA,+DACA,CACA,cACA,iCACA,CACA,aACA,aACA,CAIA,oBAEA,OADA,0BACA,gCACA,CACA,kBACA,QACA,qBACA,uBACA,mBACA,CAIA,gBACA,OACA,YAEA,UACA,CACA,oBACA,QACA,0BAGA,yCAEA,CACA,kBACA,YAAoB,mBAA2B,MAC/C,mBACA,kBACA,cACA,MACA,CACA,CACA,eACA,oBAEA,CACA,CAHmC,QAGnC,KACA,kCACA,oBAEA,kBACA,gCACA,CASA,cACA,IAcA,8BACA,eACA,IAAsB,IACtB,YAAoB,KAAQ,MAC5B,mBACA,YAAkC,EAAE,UAAc;AAAA,EAElD,eAAoC,EAAE,UAAc;AAAA,CAAG,EACvD,cAA6B,SApB7B,GACA,WACA,WACA,UACA,2BACA,YACA,EAc6B,GAAW,GAAG,EAAI,EAC/C,OACA,YAAY,WAAoB,UAfhC,cACA,OAAmB,oBAvGnB,GACA,iBAEA,OADA,UACA,SAoGmB,aAEnB,OADA,WACA,CACA,EAWgC,IAChC,QACA,QACA,2BAA4C,GAAM,EAAE,EAAK,sBAEzD,4BAGA,OAFA,qBAA8B,KAAe,EAAU,OAAS,EAAE,GAAM,EAAE,EAAS,YAAY,EAAM,WACrG,KACA,CACA,CAkCA,SACA,KACA,KACA,KACA,oBACA,KAOA,cACA,SACA,CAsBA,cACA,IACA,CADkB,QAClB,KAIA,SACA,OAEA,QACA,GAGA,IACA,kBACA,WACA,IAvDA,EAwDA,EACA,SAkCA,GACA,sBACA,WACA,mBACA,cACA,aACA,kCACA,yBACA,CACA,EA3CA,KACA,CACA,CACA,SAIA,MAFA,WACA,IACA,CACA,CAIA,IArEA,EAkEA,KACA,WACA,IACA,UACA,UAIA,YAAwB,WAA6B,MACrD,WACA,WAEA,SACA,IAEA,CACA,UACA,EAAM,eACN,eACA,UAEA,KACA,UAxFA,EAyFA,CACA,CAgCA,mBACA,yBApMA,KAAsC,8BAAsC,EAAI,EAChF,0CAEA,OADA,wBAFA,QAGA,CACA,EAgMA,GAAuC,kBAA8B,EAAE,EAAK,GAC5E,CACA,eAeA,iBACA,SACA,aACA,OAEA,CACA,qBACA,OACA,YAEA,UACA,cACA,aACA,IACA,GACA,OACA,IAEA,CAAS,EACT,QAEA,GACA,GAEA,CACA,QAA0B,YAC1B,qBACA,OAAsB,kBACtB,WACA,MACA,OACA,OACA,OACA,aACA,GACA,SA7MA,KACA,0CACA,aACA,kBACA,+BAEA,qBACA,IACA,+BACA,QAMA,OACA,IAEA,cACA,cAAoB,GAAY,aAEhC,GACA,IACA,CAAS,EACT,UACA,CAAK,EAZL,EAgMA,IACA,CACA,gBACA,YAEA,OADA,eACA,CACA,IACA,MACA,IACA,WACA,cACA,cACA,cAEA,CACA,cACA,UAAgB,8CAAiE,MACjF,GACA,YACA,GACA,EAMA,GALA,IAEA,UACA,QAEA,KACA,QAEA,KA3YA,MACA,EA6YA,IACA,IACA,oBAEA,GACA,OACA,SACA,uBArZA,EAsZA,IAUA,GATA,eACA,SACA,OACA,kBACA,IACA,IACA,oCAGA,GACA,YACA,aACA,gBACA,IAEA,IAEA,IAIA,aACA,cAGA,YAEA,eACA,gBAEA,EADA,0BACA,IACA,EAEA,cACA,CAAa,CAvbb,YACA,KAEA,gBACA,OAA+B,QAAyB,CACxD,CAAS,CAmbT,CACA,CACA,OACA,OACA,KACA,CA9IA,GACA,sBACA,UACA,MACA,CAAS,EAET,GAwIA,UAEA,OACA,IACA,CAAiB,EAGjB,IAEA,CAAS,CACT,MACA,IACA,QACA,CACA,CACA,CAEA,mBACA,yBACA,QACA,gBACA,eAEA,CACA,eACA,QACA,CACA,qBACA,aAAY,kBAAyB,KACrC,YACA,GAEA,OACA,oCAIA,iBACA,2BAKA,KAEA,iBACS,EAET,YACA,CACA,iBACA,UACA,sBA5MA,YACA,SACA,KACA,oDACA,kBACA,GACA,EAuMA,gBACA,gBACA,4BAGA,6BACA,SAEA,CASA,kCACA,QAvUA,EAwUA,EACA,YACA,cACA,OAEA,QACA,SACA,YACA,UAEA,YACA,cACA,iBACA,iBACA,gBACA,gDAEA,cACA,QACA,cACA,yBAEA,cACA,SAkBA,GAjBA,QACA,eAAiD,cACjD,sBACA,mCACA,2BACA,cACA,GAvCA,KAwCA,EAxCA,cACA,OAuCA,GA7VA,IACA,KACA,YAsTA,oBAqCA,EAnCA,0BAqCA,QACA,CAAS,EACT,GACA,WACA,KACA,mBAEA,yBACA,UACA,cACA,MA/dA,WA+dA,SA/dA,WAieA,6BACA,YACA,MAGA,0BAEA,UACA,kBACA,wCACA,IACA,CAhYA,EAiYA,CACA,CAIA,SACA,WACA,WACA,eACA,CACA,SACA,SACA,SAEA,sDAEA,OADA,UACA,KACA,kBACA,SACA,aACA,CACA,CACA,QACA,YA7pBA,gBA6pBA,GA7pBA,SA8pBA,sBACA,cACA,sBAEA,CACA,CAEA,qBAAsB,+BAA+C,EAAI,EACzE,mCACA,OACA,QACA,WACA,SACA,mBAA8B,IAAM,EAEpC,CAEA;AACA;AACA;AACA;AACA,EAIA,eACA,kEAAsF,kBAAkB,gBAAgB,aAAa,mBAAmB,uBAAuB,YAAY,WAAW,mBAAmB,eAAe,iDAAiD,0DAA0D,YAAY,2DAA2D,UAAU,oDAAoD,WAAW,kBAAkB,eAAe,cAAc,YAAY,wBAAwB,qCAAqC,uCAAuC,aAAa,kBAAkB,YAAY,WAAW,YAAY,qCAAqC,EACzuB,CAEA,eACA,MACA,EACA,EAEA,OACA,IACA,WACA,WAEA,EADA,WACA,kCACA,2CACA,qCAC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ACA,OACA,MACA,OACA,MACA,uDACA,8BACA,8BACA,uCACA,sCACA,qDACA,CAAG,CACH,OACA,SACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OAEA,IACA,iBACA,KAEA,CAAG,CACH,OACA,IACA,qCACA,4CACA,0DACA,2CAEA,KACA,qDAEA,CAAG,CACH,KACA,QACA,KACA,GACA,CACA,CACA,CAEA,mBACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,+BAEA,OACA,IACA,WACA,aACA,kBAEA,kCAAgD;AAChD,6BAA6B;AAC7B,6BAA6B,KAE7B,MACA,eAEA;AACA;AACA,oDAEA,MACA,aACA,SACA,+BACA,8BACA,oCACA,2CACA,CAAG,CACH,OACA,SACA,OACA,OACA,OACA,OACA,OACA,OACA,cACA,CAAG,CACH,SACA,kBACA,EACA,UAEA,UACA,IACA,aAEK,IACL,OACA,OAEA,CAAG,CACH,IACA,IACA,KACA,QACA,QACA,CACA,CACA,CAEA,uBACA,EACA,uBAAO,GAAqB,EAC5B,CAAO,mBAA8B,EACrC,oBAAO,GAAqB,EAE5B,MACA,QACA,EAkBA,OAdA,YACA,sDACA,gDACA,qDACA,EAEA,iBACA,eACA,QACA,SACA,cAEA,EAEA,CACA,EACA,EACA,EACA,EACA,EArBA,QAuBA,CAGA,oBACA,eACA,QAEA,GACA,KACA,EACA,GACA,GACA,EACA,CACA,qBACA,kBACA,oBACA,CAAI,CACJ,GAEA,CACA,CAIA,eACA,uEAA2F,aAAa,sBAAsB,mBAAmB,uBAAuB,oBAAoB,kBAAkB,cAAc,iBAAiB,mCAAmC,oBAAoB,kBAAkB,gBAAgB,uCAAuC,qBAAqB,kBAAkB,2CAA2C,sBAAsB,kBAAkB,cAAc,kBAAkB,iBAAiB,kBAAkB,+EAA+E,8DAA8D,sDAAsD,uBAAuB,uDAAuD,sBAAsB,sDAAsD,uBAAuB,qCAAqC,GAAG,uBAAuB,KAAK,0BAA0B,EAC5/B,CAGA,eACA,MACA,EAEA,OACA,IACA,YACA,UACA,6BACA,CAAG,CACH,OACA,SACA,MACA,CAAG,CACH,OACA,cACA,CAAG,CACH,KACA,OACA,CACA,CACA,CAEA,mBACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,kBAEA,OACA,IACA,WACA,WACA,WACA,MACA,WACA,MACA,WACA,MACA,SACA,4CACA,yBAAqD,OAAkB,SAAS,MAAiB,GACjG,6CACA,yBAAqD,OAAkB,SAAS,MAAiB,GACjG,4CACA,yBAAqD,OAAkB,SAAS,MAAiB,GACjG,sCACA,yBAAqD,OAAkB,SAAS,MAAiB,GACjG,+CACA,CAAG,CACH,OACA,SACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,cACA,CAAG,CACH,SACA,uBAAiF,OAAkB,SAAS,OAAiB,GAC7H,eAGA,uBAAiF,OAAkB,SAAS,OAAiB,GAC7H,eAGA,uBAAiF,OAAkB,SAAS,OAAiB,GAC7H,eAGA,uBAAiF,OAAkB,SAAS,OAAiB,GAC7H,eAGA,KACA,EACA,UAEA,UACA,IACA,aAEK,IACL,OACA,OAEA,CAAG,CACH,IACA,IACA,KACA,QACA,QACA,CACA,CACA,CAEA,mBACA,gBAAO,MAAmB,EAC1B,MAAO,UAAgB,EAOvB,OALA,YACA,wCACA,yBACA,EAEA,MAGA,oBACA,eACA,QACA,mBAAuE,qBAAyB,IAChG,CACA,CAIA,eACA,4CAAgE,mBAAmB,sBAAsB,sEAAsE,qBAAqB,gIAAgI,kBAAkB,iBAAiB,iHAAiH,8HAA8H,YAAY,WAAW,kCAAkC,+DAA+D,iDAAiD,aAAa,uBAAuB,mBAAmB,eAAe,2BAA2B,oHAAoH,2BAA2B,oHAAoH,2IAA2I,wCAAwC,aAAa,8BAA8B,wHAAwH,sCAAsC,wBAAwB,WAAW,sFAAsF,iGAAiG,cAAc,kBAAkB,aAAa,uBAAuB,mBAAmB,kBAAkB,eAAe,cAAc,aAAa,4CAA4C,oHAAoH,8CAA8C,kHAAkH,oHAAoH,sEAAsE,oDAAoD,8QAA8Q,iHAAiH,kBAAkB,sEAAsE,mCAAmC,aAAa,mBAAmB,kBAAkB,UAAU,UAAU,eAAe,+BAA+B,oBAAoB,0BAA0B,0GAA0G,gEAAgE,gBAAgB,cAAc,kBAAkB,UAAU,UAAU,+BAA+B,aAAa,mBAAmB,uBAAuB,mBAAmB,eAAe,gCAAgC,8EAA8E,+BAA+B,eAAe,kCAAkC,mCAAmC,aAAa,mBAAmB,eAAe,UAAU,WAAW,gBAAgB,+BAA+B,qBAAqB,0BAA0B,eAAe,UAAU,WAAW,+BAA+B,cAAc,8BAA8B,sCAAsC,cAAc,aAAa,sBAAsB,uBAAuB,uHAAuH,aAAa,kCAAkC,mCAAmC,UAAU,0BAA0B,WAAW,EACptI,CAGA,eACA,MACA,EAEA,OACA,IACA,YACA,UACA,uCACA,CAAG,CACH,OACA,SACA,MACA,CAAG,CACH,OACA,cACA,CAAG,CACH,KACA,OACA,CACA,CACA,CAGA,eACA,MACA,EACA,EAGA,OAFA,UAAyB,OAAS,eAAkB,EAEpD,CACA,IACA,2BACA,iBACA,CAAG,CACH,OACA,SACA,UACA,IACA,CAAG,CACH,KACA,IACA,oBACA,KACA,CAAG,CACH,KACA,oBACA,IACA,CAAG,CACH,KACA,QACA,OACA,CACA,CACA,CAGA,eACA,MAEA,OACA,IACA,oBACA,CAAG,CACH,OACA,QACA,CAAG,CACH,KACA,OACA,CACA,CACA,CAEA,mBACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,kBACA,aACA,cAEA,OACA,IACA,WACA,WACA,aACA,MACA,eACA,mCACA,MACA,SACA,MACA,cACA,SACA,MACA,SACA,iCACA,uBACA,6CACA,kCACA,wDACA,iDACA,gDACA,0BACA,4CACA,CAAG,CACH,OACA,SACA,OACA,OACA,eACA,OACA,OACA,OACA,eACA,OACA,OACA,eACA,OACA,eACA,KAEA,IACA,GACA,mBACA,kBACA,CAEA,KAEA,CAAG,CACH,SACA,KACA,iBAGA,KACA,EACA,UAEA,UACA,IACA,UAEK,IACL,OACA,QAGA,KACA,EACA,KACA,SAGA,SACA,IACA,QACA,UAEK,IArwHL,GACA,IACA,KACA,GACA,EAowHA,cACA,MACA,CAAK,EAnwHL,KACA,OAEA,OAqwHA,KAMK,IACL,OACA,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GA,mBACA,EAEA,EACA,EAEA,EACA,EALA,qBAGA,iBAIA,OACA,IACA,cACA,OACA,WACA,OACA,MACA,sBACA,kBACA,6BACA,CAAG,CACH,OACA,SACA,OACA,OACA,OACA,MACA,CAAG,CACH,IACA,KACA,OACA,CACA,CACA,CAwBA,mBACA,EAEA,EACA,EAFA,qBAIA,OACA,IACA,cACA,OACA,MACA,gBACA,kBACA,6BACA,CAAG,CACH,OACA,SACA,OACA,MACA,CAAG,CACH,IACA,KACA,OACA,CACA,CACA,CAGA,mBACA,EAEA,EACA,EAFA,qBAIA,OACA,IACA,cACA,OACA,MACA,mBACA,kBACA,6BACA,CAAG,CACH,OACA,SACA,OACA,MACA,CAAG,CACH,IACA,KACA,OACA,CACA,CACA,CAGA,eACA,IACA,EACA,EAMA,EACA,EATA,gCAIA,4BACA,KACA,GAKA,OACA,IACA,OACA,sBACA,OACA,aACA,CAAG,CACH,OACA,SACA,SACA,SACA,QACA,CAAG,CACH,OACA,sDAEA,yCACA,KACA,WACA,CAAG,CACH,KACA,QACA,QACA,QACA,OACA,CACA,CACA,CAGA,eACA,IACA,EACA,EAMA,EACA,EATA,qCAIA,iCACA,KACA,GAKA,OACA,IACA,OACA,iCACA,OACA,aACA,CAAG,CACH,OACA,SACA,SACA,SACA,QACA,CAAG,CACH,OACA,2DAEA,8CACA,KACA,WACA,CAAG,CACH,KACA,QACA,QACA,QACA,OACA,CACA,CACA,CAEA,mBACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GAGA,wBACA,QACA,cACA,CALA,WAAiC,EAOjC,aACA,aACA,QACA,MAEA,YAAiB,YAAyB,KAC1C,qBAGA,YACA,MAEA,YAAiB,YAAuB,KACxC,qBAGA,eACA,QACA,CAEA,QACA,mBACA,qBACA,oBAUA,eACA,QACA,CATA,eACA,6BAGA,UAAiC,SAA0B,EAC3D,0CAMA,QACA,wBACA,wBAGA,gBACA,0BAGA,UAAmC,SAA2B,EAC9D,uCACA,mBACA,gBAEA,OACA,IACA,WACA,WACA,cACA,WACA,MACA,WACA,kBACA,MACA,eACA,WAEA,CADA,WACA,+BACA,MACA,WACA,MACA,WACA,YACA,oBACA,MACA,cAEA,YAAmB,YAA0B,KAC7C,UAGA,MACA,WACA,YACA,sBACA,MACA,cAEA,YAAmB,YAAwB,KAC3C,UAGA,MACA,eACA,WACA,kBACA,MACA,kBACA,MACA,eACA,WACA,WACA,MACA,WACA,MACA,WAEA,CADA,YACA,sBACA,MACA,eACA,gBACA,oCACA,oDACA,4CACA,wDACA,4CACA,2CACA,0CACA,8CACA,4CACA,6CACA,4CACA,iCACA,6CACA,oDACA,4CACA,kDACA,6CACA,mCACA,2CACA,8BACA,qBACA,6CACA,qDACA,4CACA,wCACA,sBACA,mBACA,CAAG,CACH,OACA,SACA,OACA,OACA,OACA,OACA,OACA,aACA,OACA,OACA,OACA,OACA,OACA,iBACA,OACA,OACA,OACA,OACA,OAEA,YAAmB,YAA0B,KAC7C,OACA,gBAIA,mBACA,OACA,OACA,OACA,OACA,OAEA,YAAmB,YAAwB,KAC3C,OACA,gBAIA,qBACA,OACA,OACA,OACA,aACA,OACA,aACA,OACA,OACA,OACA,iBACA,OACA,iBACA,OACA,OACA,OACA,OACA,QACA,SACA,MAEA,KACA,IACA,mBACA,oBACA,oBACA,mBACA,oBACA,CAEA,MAEA,CAAG,CACH,OAaA,GAZA,oBACA,WAEA,YACA,iBAGA,OACA,eAIA,cAEA,EAEA,QAHA,QAGgB,YAAyB,MACzC,gBAEA,OACA,cAEA,YACA,UACA,gBAEA,CAEA,KAAW,YAA0B,KACrC,UAGA,qBAOA,GAJA,UACA,gBAGA,cAEA,EAEA,QAHA,QAGgB,YAAuB,MACvC,gBAEA,OACA,cAEA,YACA,UACA,gBAEA,CAEA,KAAW,YAAwB,KACnC,UAGA,qBAGA,UACA,kBAGA,QACA,mCACA,gCAEA,aACA,KACA,0BAjnJA,OAknJA,WAGA,UACA,QACA,qCACA,oCAEA,aACA,KACA,uBA5nJA,OA6nJA,WAGA,UAEA,KACA,GACA,WAEA,WACA,IACA,WAEK,KACL,QACA,SAGA,KAQK,KACL,QACA,SATA,GACA,WAGA,CADA,UACA,IACA,cAOA,gCACA,gBAEA,CAAG,CACH,KACA,KACA,oBACA,oBACA,oBAEA,OACA,KACA,kBAA0F,MAC1F,UACA,CAAI,EAEJ,MACA,CAAG,CACH,KACA,oBACA,oBACA,oBACA,kBAAyF,MACzF,UACA,KACA,CAAG,CACH,KACA,QACA,MAEA,IACA,OAGA,QACA,QACA,MACA,MACA,WACA,WACA,gBACA,MACA,KACA,CACA,CACA,CAEA,mBACA,IAGA,EACA,EAJA,sBAAO,GAAuB,EAC9B,WAAO,GAAY,EACnB,WAAS,+EAAuF,EAGhG,KACA,KACA,KACA,KAEA,GACA,oCACA,oBACA,gBACA,EAkBA,YACA,IACA,UACA,UACA,iBAEA,OACA,MACA,qBACA,6CAEA,CAAI,EAEJ,SACA,CAAI,SACJ,YAAW,GAAU,CAErB,4DACA,0EAEA,qDAGA,SACA,CACA,EAaA,OACA,cACA,cACA,UACA,4CACA,EA6BA,OALA,YACA,2DACA,oCACA,EAEA,CACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EApGA,IACA,qBACA,qCACA,yBACA,EAEA,KACA,UACA,kCACA,EAEA,IAEA,qBADA,eACA,EACA,EA0FA,EA7DA,KACA,IACA,YACA,IACA,EAEA,KACA,WACA,GACA,EAuDA,EACA,EA/CA,WACA,gBACA,OACA,MACA,EAEA,WACA,kBACA,OACA,MACA,EAEA,YAEA,IADA,IAEA,EAEA,YAEA,IADA,IAEA,EAiCA,CAEA,oBACA,eACA,QACA,mBAAuE,qCAAyC,YAChH,CACA,CAEA,WAAsB,GAAO,CAE7B,GAAiB,QAAU,EAC3B,MAAW,QAAU,cACrB,MAAW,QAAU,aACrB,CAAC,EACD,GAAkB,OAAS,aAC3B,GAAe,OAAS,SAAS,IAAe,EAChD,GAAc,QAAU,EACxB,MAAW,QAAU,cACrB,QAAa,QAAU,EACvB,CAAC,EACD,GAAe,OAAS,aACxB,GAA6B,QAAU,EACvC,aACA,UACA,UACA,aAAkB,UAAY,uBAC9B,mBAAwB,MAAQ,GAChC,iCAAsC,QAAU,GAChD,iBAAsB,QAAU,EAChC,CAAC,EACD,MACW,QAAQ,OAInB,aACA,MACA,YACA,KACA,OAEA,CACA,eAIA,OAHA,QAAmB,OAAI,oBACvB,YACA,CAAK,EACM,OAAc,IACzB,EAEA,WACA,4BACA,cACA,OACA,CACA,CACA,sCACA,0CAGA,+CACA,kBAA0D,YAAc,CACxE,uBACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IACA,iCACA,4BACA,MACA,kCAA8C,GAAuB,kBAUrE,OARA,iBACA,QACA,SACA,OACA,uBACA,WACA,CACA,CAAK,CAEL,EAytBA,QACA,iBAAgB,WAAgB,cAChC,cACA,SACA,iCACA,CAAS,CACT,qBACA,cACA,QACA,SACA,QACA,CAAS,CACT,CAAK,iBACL,qBACA,eACA,cAEA,gBACK,EACL,CAAC","sources":["webpack://_N_E/../../node_modules/@web3-onboard/hw-common/dist/index.js"],"sourcesContent":["import { Subject, take, firstValueFrom } from 'rxjs';\nimport Joi from 'joi';\nimport { chainValidation, validate } from '@web3-onboard/common';\n\nfunction noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n    return style.sheet;\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    if (node.parentNode) {\n        node.parentNode.removeChild(node);\n    }\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    text.data = data;\n}\nfunction set_style(node, key, value, important) {\n    if (value == null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value, mounting) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    if (!mounting || value !== undefined) {\n        select.selectedIndex = -1; // no option should be selected\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked');\n    return selected_option && selected_option.__value;\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { ownerNode } = info.stylesheet;\n            // there is no ownerNode if it runs on jsdom.\n            if (ownerNode)\n                detach(ownerNode);\n        });\n        managed_styles.clear();\n    });\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\n\nconst dirty_components = [];\nconst binding_callbacks = [];\nlet render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = /* @__PURE__ */ Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    // Do not reenter flush while dirty components are updated, as this can\n    // result in an infinite loop. Instead, let the inner flush handle it.\n    // Reentrancy is ok afterwards for bindings etc.\n    if (flushidx !== 0) {\n        return;\n    }\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        try {\n            while (flushidx < dirty_components.length) {\n                const component = dirty_components[flushidx];\n                flushidx++;\n                set_current_component(component);\n                update(component.$$);\n            }\n        }\n        catch (e) {\n            // reset dirty state to not end up in a deadlocked state and then rethrow\n            dirty_components.length = 0;\n            flushidx = 0;\n            throw e;\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n/**\n * Useful for example to execute remaining `afterUpdate` callbacks before executing `destroy`.\n */\nfunction flush_render_callbacks(fns) {\n    const filtered = [];\n    const targets = [];\n    render_callbacks.forEach((c) => fns.indexOf(c) === -1 ? filtered.push(c) : targets.push(c));\n    targets.forEach((c) => c());\n    render_callbacks = filtered;\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n    else if (callback) {\n        callback();\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    const options = { direction: 'both' };\n    let config = fn(node, params, options);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config(options);\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n            // if the component was destroyed immediately\n            // it will update the `$$.on_destroy` reference to `null`.\n            // the destructured on_destroy may still reference to the old array\n            if (component.$$.on_destroy) {\n                component.$$.on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        flush_render_callbacks($$.after_update);\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: [],\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        flush();\n    }\n    set_current_component(parent_component);\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        if (!is_function(callback)) {\n            return noop;\n        }\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction fade(node, { delay = 0, duration = 400, easing = identity } = {}) {\n    const o = +getComputedStyle(node).opacity;\n    return {\n        delay,\n        duration,\n        easing,\n        css: t => `opacity: ${t * o}`\n    };\n}\n\nvar closeIcon = `\n  <svg width=\"100%\" height=\"100%\" viewBox=\"0 0 12 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M11.6569 1.75736L7.41429 6L11.6569 10.2426L10.2427 11.6569L6.00008 7.41421L1.75744 11.6569L0.343227 10.2426L4.58587 6L0.343227 1.75736L1.75744 0.343146L6.00008 4.58579L10.2427 0.343146L11.6569 1.75736Z\" fill=\"currentColor\"/>\n  </svg>\n`;\n\n/* src/elements/CloseButton.svelte generated by Svelte v3.59.2 */\n\nfunction add_css$6(target) {\n\tappend_styles(target, \"svelte-1jp3yas\", \".close-button.svelte-1jp3yas.svelte-1jp3yas{position:relative;overflow:hidden;display:flex;align-items:center;justify-content:center;height:2rem;width:2rem;border-radius:2rem;cursor:pointer;color:var(--onboard-close-button-color, inherit)}.close-button.svelte-1jp3yas.svelte-1jp3yas:hover::before{opacity:0.2}.close-button.svelte-1jp3yas:hover .svg-box.svelte-1jp3yas{opacity:1}.close-button.svelte-1jp3yas.svelte-1jp3yas::before{content:'';position:absolute;height:inherit;width:inherit;opacity:0.1;background:currentColor;transition:300ms ease-in-out opacity}.svg-box.svelte-1jp3yas.svelte-1jp3yas{display:flex;position:absolute;height:14px;width:14px;opacity:0.6;transition:300ms ease-in-out opacity}\");\n}\n\nfunction create_fragment$6(ctx) {\n\tlet div2;\n\tlet div1;\n\tlet div0;\n\n\treturn {\n\t\tc() {\n\t\t\tdiv2 = element(\"div\");\n\t\t\tdiv1 = element(\"div\");\n\t\t\tdiv0 = element(\"div\");\n\t\t\tattr(div0, \"class\", \"svg-box svelte-1jp3yas\");\n\t\t\tattr(div1, \"class\", \"close-button svelte-1jp3yas\");\n\t\t\tattr(div2, \"class\", \"close-button-container\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, div2, anchor);\n\t\t\tappend(div2, div1);\n\t\t\tappend(div1, div0);\n\t\t\tdiv0.innerHTML = closeIcon;\n\t\t},\n\t\tp: noop,\n\t\ti: noop,\n\t\to: noop,\n\t\td(detaching) {\n\t\t\tif (detaching) detach(div2);\n\t\t}\n\t};\n}\n\nclass CloseButton extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, null, create_fragment$6, safe_not_equal, {}, add_css$6);\n\t}\n}\n\n/*\r\n *      bignumber.js v9.1.2\r\n *      A JavaScript library for arbitrary-precision arithmetic.\r\n *      https://github.com/MikeMcl/bignumber.js\r\n *      Copyright (c) 2022 Michael Mclaughlin <M8ch88l@gmail.com>\r\n *      MIT Licensed.\r\n *\r\n *      BigNumber.prototype methods     |  BigNumber methods\r\n *                                      |\r\n *      absoluteValue            abs    |  clone\r\n *      comparedTo                      |  config               set\r\n *      decimalPlaces            dp     |      DECIMAL_PLACES\r\n *      dividedBy                div    |      ROUNDING_MODE\r\n *      dividedToIntegerBy       idiv   |      EXPONENTIAL_AT\r\n *      exponentiatedBy          pow    |      RANGE\r\n *      integerValue                    |      CRYPTO\r\n *      isEqualTo                eq     |      MODULO_MODE\r\n *      isFinite                        |      POW_PRECISION\r\n *      isGreaterThan            gt     |      FORMAT\r\n *      isGreaterThanOrEqualTo   gte    |      ALPHABET\r\n *      isInteger                       |  isBigNumber\r\n *      isLessThan               lt     |  maximum              max\r\n *      isLessThanOrEqualTo      lte    |  minimum              min\r\n *      isNaN                           |  random\r\n *      isNegative                      |  sum\r\n *      isPositive                      |\r\n *      isZero                          |\r\n *      minus                           |\r\n *      modulo                   mod    |\r\n *      multipliedBy             times  |\r\n *      negated                         |\r\n *      plus                            |\r\n *      precision                sd     |\r\n *      shiftedBy                       |\r\n *      squareRoot               sqrt   |\r\n *      toExponential                   |\r\n *      toFixed                         |\r\n *      toFormat                        |\r\n *      toFraction                      |\r\n *      toJSON                          |\r\n *      toNumber                        |\r\n *      toPrecision                     |\r\n *      toString                        |\r\n *      valueOf                         |\r\n *\r\n */\r\n\r\n\r\nvar\r\n  isNumeric = /^-?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?$/i,\r\n  mathceil = Math.ceil,\r\n  mathfloor = Math.floor,\r\n\r\n  bignumberError = '[BigNumber Error] ',\r\n  tooManyDigits = bignumberError + 'Number primitive has more than 15 significant digits: ',\r\n\r\n  BASE = 1e14,\r\n  LOG_BASE = 14,\r\n  MAX_SAFE_INTEGER = 0x1fffffffffffff,         // 2^53 - 1\r\n  // MAX_INT32 = 0x7fffffff,                   // 2^31 - 1\r\n  POWS_TEN = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13],\r\n  SQRT_BASE = 1e7,\r\n\r\n  // EDITABLE\r\n  // The limit on the value of DECIMAL_PLACES, TO_EXP_NEG, TO_EXP_POS, MIN_EXP, MAX_EXP, and\r\n  // the arguments to toExponential, toFixed, toFormat, and toPrecision.\r\n  MAX = 1E9;                                   // 0 to MAX_INT32\r\n\r\n\r\n/*\r\n * Create and return a BigNumber constructor.\r\n */\r\nfunction clone(configObject) {\r\n  var div, convertBase, parseNumeric,\r\n    P = BigNumber.prototype = { constructor: BigNumber, toString: null, valueOf: null },\r\n    ONE = new BigNumber(1),\r\n\r\n\r\n    //----------------------------- EDITABLE CONFIG DEFAULTS -------------------------------\r\n\r\n\r\n    // The default values below must be integers within the inclusive ranges stated.\r\n    // The values can also be changed at run-time using BigNumber.set.\r\n\r\n    // The maximum number of decimal places for operations involving division.\r\n    DECIMAL_PLACES = 20,                     // 0 to MAX\r\n\r\n    // The rounding mode used when rounding to the above decimal places, and when using\r\n    // toExponential, toFixed, toFormat and toPrecision, and round (default value).\r\n    // UP         0 Away from zero.\r\n    // DOWN       1 Towards zero.\r\n    // CEIL       2 Towards +Infinity.\r\n    // FLOOR      3 Towards -Infinity.\r\n    // HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n    // HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n    // HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n    // HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n    // HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n    ROUNDING_MODE = 4,                       // 0 to 8\r\n\r\n    // EXPONENTIAL_AT : [TO_EXP_NEG , TO_EXP_POS]\r\n\r\n    // The exponent value at and beneath which toString returns exponential notation.\r\n    // Number type: -7\r\n    TO_EXP_NEG = -7,                         // 0 to -MAX\r\n\r\n    // The exponent value at and above which toString returns exponential notation.\r\n    // Number type: 21\r\n    TO_EXP_POS = 21,                         // 0 to MAX\r\n\r\n    // RANGE : [MIN_EXP, MAX_EXP]\r\n\r\n    // The minimum exponent value, beneath which underflow to zero occurs.\r\n    // Number type: -324  (5e-324)\r\n    MIN_EXP = -1e7,                          // -1 to -MAX\r\n\r\n    // The maximum exponent value, above which overflow to Infinity occurs.\r\n    // Number type:  308  (1.7976931348623157e+308)\r\n    // For MAX_EXP > 1e7, e.g. new BigNumber('1e100000000').plus(1) may be slow.\r\n    MAX_EXP = 1e7,                           // 1 to MAX\r\n\r\n    // Whether to use cryptographically-secure random number generation, if available.\r\n    CRYPTO = false,                          // true or false\r\n\r\n    // The modulo mode used when calculating the modulus: a mod n.\r\n    // The quotient (q = a / n) is calculated according to the corresponding rounding mode.\r\n    // The remainder (r) is calculated as: r = a - n * q.\r\n    //\r\n    // UP        0 The remainder is positive if the dividend is negative, else is negative.\r\n    // DOWN      1 The remainder has the same sign as the dividend.\r\n    //             This modulo mode is commonly known as 'truncated division' and is\r\n    //             equivalent to (a % n) in JavaScript.\r\n    // FLOOR     3 The remainder has the same sign as the divisor (Python %).\r\n    // HALF_EVEN 6 This modulo mode implements the IEEE 754 remainder function.\r\n    // EUCLID    9 Euclidian division. q = sign(n) * floor(a / abs(n)).\r\n    //             The remainder is always positive.\r\n    //\r\n    // The truncated division, floored division, Euclidian division and IEEE 754 remainder\r\n    // modes are commonly used for the modulus operation.\r\n    // Although the other rounding modes can also be used, they may not give useful results.\r\n    MODULO_MODE = 1,                         // 0 to 9\r\n\r\n    // The maximum number of significant digits of the result of the exponentiatedBy operation.\r\n    // If POW_PRECISION is 0, there will be unlimited significant digits.\r\n    POW_PRECISION = 0,                       // 0 to MAX\r\n\r\n    // The format specification used by the BigNumber.prototype.toFormat method.\r\n    FORMAT = {\r\n      prefix: '',\r\n      groupSize: 3,\r\n      secondaryGroupSize: 0,\r\n      groupSeparator: ',',\r\n      decimalSeparator: '.',\r\n      fractionGroupSize: 0,\r\n      fractionGroupSeparator: '\\xA0',        // non-breaking space\r\n      suffix: ''\r\n    },\r\n\r\n    // The alphabet used for base conversion. It must be at least 2 characters long, with no '+',\r\n    // '-', '.', whitespace, or repeated character.\r\n    // '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_'\r\n    ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyz',\r\n    alphabetHasNormalDecimalDigits = true;\r\n\r\n\r\n  //------------------------------------------------------------------------------------------\r\n\r\n\r\n  // CONSTRUCTOR\r\n\r\n\r\n  /*\r\n   * The BigNumber constructor and exported function.\r\n   * Create and return a new instance of a BigNumber object.\r\n   *\r\n   * v {number|string|BigNumber} A numeric value.\r\n   * [b] {number} The base of v. Integer, 2 to ALPHABET.length inclusive.\r\n   */\r\n  function BigNumber(v, b) {\r\n    var alphabet, c, caseChanged, e, i, isNum, len, str,\r\n      x = this;\r\n\r\n    // Enable constructor call without `new`.\r\n    if (!(x instanceof BigNumber)) return new BigNumber(v, b);\r\n\r\n    if (b == null) {\r\n\r\n      if (v && v._isBigNumber === true) {\r\n        x.s = v.s;\r\n\r\n        if (!v.c || v.e > MAX_EXP) {\r\n          x.c = x.e = null;\r\n        } else if (v.e < MIN_EXP) {\r\n          x.c = [x.e = 0];\r\n        } else {\r\n          x.e = v.e;\r\n          x.c = v.c.slice();\r\n        }\r\n\r\n        return;\r\n      }\r\n\r\n      if ((isNum = typeof v == 'number') && v * 0 == 0) {\r\n\r\n        // Use `1 / n` to handle minus zero also.\r\n        x.s = 1 / v < 0 ? (v = -v, -1) : 1;\r\n\r\n        // Fast path for integers, where n < 2147483648 (2**31).\r\n        if (v === ~~v) {\r\n          for (e = 0, i = v; i >= 10; i /= 10, e++);\r\n\r\n          if (e > MAX_EXP) {\r\n            x.c = x.e = null;\r\n          } else {\r\n            x.e = e;\r\n            x.c = [v];\r\n          }\r\n\r\n          return;\r\n        }\r\n\r\n        str = String(v);\r\n      } else {\r\n\r\n        if (!isNumeric.test(str = String(v))) return parseNumeric(x, str, isNum);\r\n\r\n        x.s = str.charCodeAt(0) == 45 ? (str = str.slice(1), -1) : 1;\r\n      }\r\n\r\n      // Decimal point?\r\n      if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n\r\n      // Exponential form?\r\n      if ((i = str.search(/e/i)) > 0) {\r\n\r\n        // Determine exponent.\r\n        if (e < 0) e = i;\r\n        e += +str.slice(i + 1);\r\n        str = str.substring(0, i);\r\n      } else if (e < 0) {\r\n\r\n        // Integer.\r\n        e = str.length;\r\n      }\r\n\r\n    } else {\r\n\r\n      // '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n      intCheck(b, 2, ALPHABET.length, 'Base');\r\n\r\n      // Allow exponential notation to be used with base 10 argument, while\r\n      // also rounding to DECIMAL_PLACES as with other bases.\r\n      if (b == 10 && alphabetHasNormalDecimalDigits) {\r\n        x = new BigNumber(v);\r\n        return round(x, DECIMAL_PLACES + x.e + 1, ROUNDING_MODE);\r\n      }\r\n\r\n      str = String(v);\r\n\r\n      if (isNum = typeof v == 'number') {\r\n\r\n        // Avoid potential interpretation of Infinity and NaN as base 44+ values.\r\n        if (v * 0 != 0) return parseNumeric(x, str, isNum, b);\r\n\r\n        x.s = 1 / v < 0 ? (str = str.slice(1), -1) : 1;\r\n\r\n        // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n        if (BigNumber.DEBUG && str.replace(/^0\\.0*|\\./, '').length > 15) {\r\n          throw Error\r\n           (tooManyDigits + v);\r\n        }\r\n      } else {\r\n        x.s = str.charCodeAt(0) === 45 ? (str = str.slice(1), -1) : 1;\r\n      }\r\n\r\n      alphabet = ALPHABET.slice(0, b);\r\n      e = i = 0;\r\n\r\n      // Check that str is a valid base b number.\r\n      // Don't use RegExp, so alphabet can contain special characters.\r\n      for (len = str.length; i < len; i++) {\r\n        if (alphabet.indexOf(c = str.charAt(i)) < 0) {\r\n          if (c == '.') {\r\n\r\n            // If '.' is not the first character and it has not be found before.\r\n            if (i > e) {\r\n              e = len;\r\n              continue;\r\n            }\r\n          } else if (!caseChanged) {\r\n\r\n            // Allow e.g. hexadecimal 'FF' as well as 'ff'.\r\n            if (str == str.toUpperCase() && (str = str.toLowerCase()) ||\r\n                str == str.toLowerCase() && (str = str.toUpperCase())) {\r\n              caseChanged = true;\r\n              i = -1;\r\n              e = 0;\r\n              continue;\r\n            }\r\n          }\r\n\r\n          return parseNumeric(x, String(v), isNum, b);\r\n        }\r\n      }\r\n\r\n      // Prevent later check for length on converted number.\r\n      isNum = false;\r\n      str = convertBase(str, b, 10, x.s);\r\n\r\n      // Decimal point?\r\n      if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n      else e = str.length;\r\n    }\r\n\r\n    // Determine leading zeros.\r\n    for (i = 0; str.charCodeAt(i) === 48; i++);\r\n\r\n    // Determine trailing zeros.\r\n    for (len = str.length; str.charCodeAt(--len) === 48;);\r\n\r\n    if (str = str.slice(i, ++len)) {\r\n      len -= i;\r\n\r\n      // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n      if (isNum && BigNumber.DEBUG &&\r\n        len > 15 && (v > MAX_SAFE_INTEGER || v !== mathfloor(v))) {\r\n          throw Error\r\n           (tooManyDigits + (x.s * v));\r\n      }\r\n\r\n       // Overflow?\r\n      if ((e = e - i - 1) > MAX_EXP) {\r\n\r\n        // Infinity.\r\n        x.c = x.e = null;\r\n\r\n      // Underflow?\r\n      } else if (e < MIN_EXP) {\r\n\r\n        // Zero.\r\n        x.c = [x.e = 0];\r\n      } else {\r\n        x.e = e;\r\n        x.c = [];\r\n\r\n        // Transform base\r\n\r\n        // e is the base 10 exponent.\r\n        // i is where to slice str to get the first element of the coefficient array.\r\n        i = (e + 1) % LOG_BASE;\r\n        if (e < 0) i += LOG_BASE;  // i < 1\r\n\r\n        if (i < len) {\r\n          if (i) x.c.push(+str.slice(0, i));\r\n\r\n          for (len -= LOG_BASE; i < len;) {\r\n            x.c.push(+str.slice(i, i += LOG_BASE));\r\n          }\r\n\r\n          i = LOG_BASE - (str = str.slice(i)).length;\r\n        } else {\r\n          i -= len;\r\n        }\r\n\r\n        for (; i--; str += '0');\r\n        x.c.push(+str);\r\n      }\r\n    } else {\r\n\r\n      // Zero.\r\n      x.c = [x.e = 0];\r\n    }\r\n  }\r\n\r\n\r\n  // CONSTRUCTOR PROPERTIES\r\n\r\n\r\n  BigNumber.clone = clone;\r\n\r\n  BigNumber.ROUND_UP = 0;\r\n  BigNumber.ROUND_DOWN = 1;\r\n  BigNumber.ROUND_CEIL = 2;\r\n  BigNumber.ROUND_FLOOR = 3;\r\n  BigNumber.ROUND_HALF_UP = 4;\r\n  BigNumber.ROUND_HALF_DOWN = 5;\r\n  BigNumber.ROUND_HALF_EVEN = 6;\r\n  BigNumber.ROUND_HALF_CEIL = 7;\r\n  BigNumber.ROUND_HALF_FLOOR = 8;\r\n  BigNumber.EUCLID = 9;\r\n\r\n\r\n  /*\r\n   * Configure infrequently-changing library-wide settings.\r\n   *\r\n   * Accept an object with the following optional properties (if the value of a property is\r\n   * a number, it must be an integer within the inclusive range stated):\r\n   *\r\n   *   DECIMAL_PLACES   {number}           0 to MAX\r\n   *   ROUNDING_MODE    {number}           0 to 8\r\n   *   EXPONENTIAL_AT   {number|number[]}  -MAX to MAX  or  [-MAX to 0, 0 to MAX]\r\n   *   RANGE            {number|number[]}  -MAX to MAX (not zero)  or  [-MAX to -1, 1 to MAX]\r\n   *   CRYPTO           {boolean}          true or false\r\n   *   MODULO_MODE      {number}           0 to 9\r\n   *   POW_PRECISION       {number}           0 to MAX\r\n   *   ALPHABET         {string}           A string of two or more unique characters which does\r\n   *                                       not contain '.'.\r\n   *   FORMAT           {object}           An object with some of the following properties:\r\n   *     prefix                 {string}\r\n   *     groupSize              {number}\r\n   *     secondaryGroupSize     {number}\r\n   *     groupSeparator         {string}\r\n   *     decimalSeparator       {string}\r\n   *     fractionGroupSize      {number}\r\n   *     fractionGroupSeparator {string}\r\n   *     suffix                 {string}\r\n   *\r\n   * (The values assigned to the above FORMAT object properties are not checked for validity.)\r\n   *\r\n   * E.g.\r\n   * BigNumber.config({ DECIMAL_PLACES : 20, ROUNDING_MODE : 4 })\r\n   *\r\n   * Ignore properties/parameters set to null or undefined, except for ALPHABET.\r\n   *\r\n   * Return an object with the properties current values.\r\n   */\r\n  BigNumber.config = BigNumber.set = function (obj) {\r\n    var p, v;\r\n\r\n    if (obj != null) {\r\n\r\n      if (typeof obj == 'object') {\r\n\r\n        // DECIMAL_PLACES {number} Integer, 0 to MAX inclusive.\r\n        // '[BigNumber Error] DECIMAL_PLACES {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'DECIMAL_PLACES')) {\r\n          v = obj[p];\r\n          intCheck(v, 0, MAX, p);\r\n          DECIMAL_PLACES = v;\r\n        }\r\n\r\n        // ROUNDING_MODE {number} Integer, 0 to 8 inclusive.\r\n        // '[BigNumber Error] ROUNDING_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'ROUNDING_MODE')) {\r\n          v = obj[p];\r\n          intCheck(v, 0, 8, p);\r\n          ROUNDING_MODE = v;\r\n        }\r\n\r\n        // EXPONENTIAL_AT {number|number[]}\r\n        // Integer, -MAX to MAX inclusive or\r\n        // [integer -MAX to 0 inclusive, 0 to MAX inclusive].\r\n        // '[BigNumber Error] EXPONENTIAL_AT {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'EXPONENTIAL_AT')) {\r\n          v = obj[p];\r\n          if (v && v.pop) {\r\n            intCheck(v[0], -MAX, 0, p);\r\n            intCheck(v[1], 0, MAX, p);\r\n            TO_EXP_NEG = v[0];\r\n            TO_EXP_POS = v[1];\r\n          } else {\r\n            intCheck(v, -MAX, MAX, p);\r\n            TO_EXP_NEG = -(TO_EXP_POS = v < 0 ? -v : v);\r\n          }\r\n        }\r\n\r\n        // RANGE {number|number[]} Non-zero integer, -MAX to MAX inclusive or\r\n        // [integer -MAX to -1 inclusive, integer 1 to MAX inclusive].\r\n        // '[BigNumber Error] RANGE {not a primitive number|not an integer|out of range|cannot be zero}: {v}'\r\n        if (obj.hasOwnProperty(p = 'RANGE')) {\r\n          v = obj[p];\r\n          if (v && v.pop) {\r\n            intCheck(v[0], -MAX, -1, p);\r\n            intCheck(v[1], 1, MAX, p);\r\n            MIN_EXP = v[0];\r\n            MAX_EXP = v[1];\r\n          } else {\r\n            intCheck(v, -MAX, MAX, p);\r\n            if (v) {\r\n              MIN_EXP = -(MAX_EXP = v < 0 ? -v : v);\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' cannot be zero: ' + v);\r\n            }\r\n          }\r\n        }\r\n\r\n        // CRYPTO {boolean} true or false.\r\n        // '[BigNumber Error] CRYPTO not true or false: {v}'\r\n        // '[BigNumber Error] crypto unavailable'\r\n        if (obj.hasOwnProperty(p = 'CRYPTO')) {\r\n          v = obj[p];\r\n          if (v === !!v) {\r\n            if (v) {\r\n              if (typeof crypto != 'undefined' && crypto &&\r\n               (crypto.getRandomValues || crypto.randomBytes)) {\r\n                CRYPTO = v;\r\n              } else {\r\n                CRYPTO = !v;\r\n                throw Error\r\n                 (bignumberError + 'crypto unavailable');\r\n              }\r\n            } else {\r\n              CRYPTO = v;\r\n            }\r\n          } else {\r\n            throw Error\r\n             (bignumberError + p + ' not true or false: ' + v);\r\n          }\r\n        }\r\n\r\n        // MODULO_MODE {number} Integer, 0 to 9 inclusive.\r\n        // '[BigNumber Error] MODULO_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'MODULO_MODE')) {\r\n          v = obj[p];\r\n          intCheck(v, 0, 9, p);\r\n          MODULO_MODE = v;\r\n        }\r\n\r\n        // POW_PRECISION {number} Integer, 0 to MAX inclusive.\r\n        // '[BigNumber Error] POW_PRECISION {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'POW_PRECISION')) {\r\n          v = obj[p];\r\n          intCheck(v, 0, MAX, p);\r\n          POW_PRECISION = v;\r\n        }\r\n\r\n        // FORMAT {object}\r\n        // '[BigNumber Error] FORMAT not an object: {v}'\r\n        if (obj.hasOwnProperty(p = 'FORMAT')) {\r\n          v = obj[p];\r\n          if (typeof v == 'object') FORMAT = v;\r\n          else throw Error\r\n           (bignumberError + p + ' not an object: ' + v);\r\n        }\r\n\r\n        // ALPHABET {string}\r\n        // '[BigNumber Error] ALPHABET invalid: {v}'\r\n        if (obj.hasOwnProperty(p = 'ALPHABET')) {\r\n          v = obj[p];\r\n\r\n          // Disallow if less than two characters,\r\n          // or if it contains '+', '-', '.', whitespace, or a repeated character.\r\n          if (typeof v == 'string' && !/^.?$|[+\\-.\\s]|(.).*\\1/.test(v)) {\r\n            alphabetHasNormalDecimalDigits = v.slice(0, 10) == '0123456789';\r\n            ALPHABET = v;\r\n          } else {\r\n            throw Error\r\n             (bignumberError + p + ' invalid: ' + v);\r\n          }\r\n        }\r\n\r\n      } else {\r\n\r\n        // '[BigNumber Error] Object expected: {v}'\r\n        throw Error\r\n         (bignumberError + 'Object expected: ' + obj);\r\n      }\r\n    }\r\n\r\n    return {\r\n      DECIMAL_PLACES: DECIMAL_PLACES,\r\n      ROUNDING_MODE: ROUNDING_MODE,\r\n      EXPONENTIAL_AT: [TO_EXP_NEG, TO_EXP_POS],\r\n      RANGE: [MIN_EXP, MAX_EXP],\r\n      CRYPTO: CRYPTO,\r\n      MODULO_MODE: MODULO_MODE,\r\n      POW_PRECISION: POW_PRECISION,\r\n      FORMAT: FORMAT,\r\n      ALPHABET: ALPHABET\r\n    };\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if v is a BigNumber instance, otherwise return false.\r\n   *\r\n   * If BigNumber.DEBUG is true, throw if a BigNumber instance is not well-formed.\r\n   *\r\n   * v {any}\r\n   *\r\n   * '[BigNumber Error] Invalid BigNumber: {v}'\r\n   */\r\n  BigNumber.isBigNumber = function (v) {\r\n    if (!v || v._isBigNumber !== true) return false;\r\n    if (!BigNumber.DEBUG) return true;\r\n\r\n    var i, n,\r\n      c = v.c,\r\n      e = v.e,\r\n      s = v.s;\r\n\r\n    out: if ({}.toString.call(c) == '[object Array]') {\r\n\r\n      if ((s === 1 || s === -1) && e >= -MAX && e <= MAX && e === mathfloor(e)) {\r\n\r\n        // If the first element is zero, the BigNumber value must be zero.\r\n        if (c[0] === 0) {\r\n          if (e === 0 && c.length === 1) return true;\r\n          break out;\r\n        }\r\n\r\n        // Calculate number of digits that c[0] should have, based on the exponent.\r\n        i = (e + 1) % LOG_BASE;\r\n        if (i < 1) i += LOG_BASE;\r\n\r\n        // Calculate number of digits of c[0].\r\n        //if (Math.ceil(Math.log(c[0] + 1) / Math.LN10) == i) {\r\n        if (String(c[0]).length == i) {\r\n\r\n          for (i = 0; i < c.length; i++) {\r\n            n = c[i];\r\n            if (n < 0 || n >= BASE || n !== mathfloor(n)) break out;\r\n          }\r\n\r\n          // Last element cannot be zero, unless it is the only element.\r\n          if (n !== 0) return true;\r\n        }\r\n      }\r\n\r\n    // Infinity/NaN\r\n    } else if (c === null && e === null && (s === null || s === 1 || s === -1)) {\r\n      return true;\r\n    }\r\n\r\n    throw Error\r\n      (bignumberError + 'Invalid BigNumber: ' + v);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the maximum of the arguments.\r\n   *\r\n   * arguments {number|string|BigNumber}\r\n   */\r\n  BigNumber.maximum = BigNumber.max = function () {\r\n    return maxOrMin(arguments, -1);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the minimum of the arguments.\r\n   *\r\n   * arguments {number|string|BigNumber}\r\n   */\r\n  BigNumber.minimum = BigNumber.min = function () {\r\n    return maxOrMin(arguments, 1);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber with a random value equal to or greater than 0 and less than 1,\r\n   * and with dp, or DECIMAL_PLACES if dp is omitted, decimal places (or less if trailing\r\n   * zeros are produced).\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp}'\r\n   * '[BigNumber Error] crypto unavailable'\r\n   */\r\n  BigNumber.random = (function () {\r\n    var pow2_53 = 0x20000000000000;\r\n\r\n    // Return a 53 bit integer n, where 0 <= n < 9007199254740992.\r\n    // Check if Math.random() produces more than 32 bits of randomness.\r\n    // If it does, assume at least 53 bits are produced, otherwise assume at least 30 bits.\r\n    // 0x40000000 is 2^30, 0x800000 is 2^23, 0x1fffff is 2^21 - 1.\r\n    var random53bitInt = (Math.random() * pow2_53) & 0x1fffff\r\n     ? function () { return mathfloor(Math.random() * pow2_53); }\r\n     : function () { return ((Math.random() * 0x40000000 | 0) * 0x800000) +\r\n       (Math.random() * 0x800000 | 0); };\r\n\r\n    return function (dp) {\r\n      var a, b, e, k, v,\r\n        i = 0,\r\n        c = [],\r\n        rand = new BigNumber(ONE);\r\n\r\n      if (dp == null) dp = DECIMAL_PLACES;\r\n      else intCheck(dp, 0, MAX);\r\n\r\n      k = mathceil(dp / LOG_BASE);\r\n\r\n      if (CRYPTO) {\r\n\r\n        // Browsers supporting crypto.getRandomValues.\r\n        if (crypto.getRandomValues) {\r\n\r\n          a = crypto.getRandomValues(new Uint32Array(k *= 2));\r\n\r\n          for (; i < k;) {\r\n\r\n            // 53 bits:\r\n            // ((Math.pow(2, 32) - 1) * Math.pow(2, 21)).toString(2)\r\n            // 11111 11111111 11111111 11111111 11100000 00000000 00000000\r\n            // ((Math.pow(2, 32) - 1) >>> 11).toString(2)\r\n            //                                     11111 11111111 11111111\r\n            // 0x20000 is 2^21.\r\n            v = a[i] * 0x20000 + (a[i + 1] >>> 11);\r\n\r\n            // Rejection sampling:\r\n            // 0 <= v < 9007199254740992\r\n            // Probability that v >= 9e15, is\r\n            // 7199254740992 / 9007199254740992 ~= 0.0008, i.e. 1 in 1251\r\n            if (v >= 9e15) {\r\n              b = crypto.getRandomValues(new Uint32Array(2));\r\n              a[i] = b[0];\r\n              a[i + 1] = b[1];\r\n            } else {\r\n\r\n              // 0 <= v <= 8999999999999999\r\n              // 0 <= (v % 1e14) <= 99999999999999\r\n              c.push(v % 1e14);\r\n              i += 2;\r\n            }\r\n          }\r\n          i = k / 2;\r\n\r\n        // Node.js supporting crypto.randomBytes.\r\n        } else if (crypto.randomBytes) {\r\n\r\n          // buffer\r\n          a = crypto.randomBytes(k *= 7);\r\n\r\n          for (; i < k;) {\r\n\r\n            // 0x1000000000000 is 2^48, 0x10000000000 is 2^40\r\n            // 0x100000000 is 2^32, 0x1000000 is 2^24\r\n            // 11111 11111111 11111111 11111111 11111111 11111111 11111111\r\n            // 0 <= v < 9007199254740992\r\n            v = ((a[i] & 31) * 0x1000000000000) + (a[i + 1] * 0x10000000000) +\r\n               (a[i + 2] * 0x100000000) + (a[i + 3] * 0x1000000) +\r\n               (a[i + 4] << 16) + (a[i + 5] << 8) + a[i + 6];\r\n\r\n            if (v >= 9e15) {\r\n              crypto.randomBytes(7).copy(a, i);\r\n            } else {\r\n\r\n              // 0 <= (v % 1e14) <= 99999999999999\r\n              c.push(v % 1e14);\r\n              i += 7;\r\n            }\r\n          }\r\n          i = k / 7;\r\n        } else {\r\n          CRYPTO = false;\r\n          throw Error\r\n           (bignumberError + 'crypto unavailable');\r\n        }\r\n      }\r\n\r\n      // Use Math.random.\r\n      if (!CRYPTO) {\r\n\r\n        for (; i < k;) {\r\n          v = random53bitInt();\r\n          if (v < 9e15) c[i++] = v % 1e14;\r\n        }\r\n      }\r\n\r\n      k = c[--i];\r\n      dp %= LOG_BASE;\r\n\r\n      // Convert trailing digits to zeros according to dp.\r\n      if (k && dp) {\r\n        v = POWS_TEN[LOG_BASE - dp];\r\n        c[i] = mathfloor(k / v) * v;\r\n      }\r\n\r\n      // Remove trailing elements which are zero.\r\n      for (; c[i] === 0; c.pop(), i--);\r\n\r\n      // Zero?\r\n      if (i < 0) {\r\n        c = [e = 0];\r\n      } else {\r\n\r\n        // Remove leading elements which are zero and adjust exponent accordingly.\r\n        for (e = -1 ; c[0] === 0; c.splice(0, 1), e -= LOG_BASE);\r\n\r\n        // Count the digits of the first element of c to determine leading zeros, and...\r\n        for (i = 1, v = c[0]; v >= 10; v /= 10, i++);\r\n\r\n        // adjust the exponent accordingly.\r\n        if (i < LOG_BASE) e -= LOG_BASE - i;\r\n      }\r\n\r\n      rand.e = e;\r\n      rand.c = c;\r\n      return rand;\r\n    };\r\n  })();\r\n\r\n\r\n   /*\r\n   * Return a BigNumber whose value is the sum of the arguments.\r\n   *\r\n   * arguments {number|string|BigNumber}\r\n   */\r\n  BigNumber.sum = function () {\r\n    var i = 1,\r\n      args = arguments,\r\n      sum = new BigNumber(args[0]);\r\n    for (; i < args.length;) sum = sum.plus(args[i++]);\r\n    return sum;\r\n  };\r\n\r\n\r\n  // PRIVATE FUNCTIONS\r\n\r\n\r\n  // Called by BigNumber and BigNumber.prototype.toString.\r\n  convertBase = (function () {\r\n    var decimal = '0123456789';\r\n\r\n    /*\r\n     * Convert string of baseIn to an array of numbers of baseOut.\r\n     * Eg. toBaseOut('255', 10, 16) returns [15, 15].\r\n     * Eg. toBaseOut('ff', 16, 10) returns [2, 5, 5].\r\n     */\r\n    function toBaseOut(str, baseIn, baseOut, alphabet) {\r\n      var j,\r\n        arr = [0],\r\n        arrL,\r\n        i = 0,\r\n        len = str.length;\r\n\r\n      for (; i < len;) {\r\n        for (arrL = arr.length; arrL--; arr[arrL] *= baseIn);\r\n\r\n        arr[0] += alphabet.indexOf(str.charAt(i++));\r\n\r\n        for (j = 0; j < arr.length; j++) {\r\n\r\n          if (arr[j] > baseOut - 1) {\r\n            if (arr[j + 1] == null) arr[j + 1] = 0;\r\n            arr[j + 1] += arr[j] / baseOut | 0;\r\n            arr[j] %= baseOut;\r\n          }\r\n        }\r\n      }\r\n\r\n      return arr.reverse();\r\n    }\r\n\r\n    // Convert a numeric string of baseIn to a numeric string of baseOut.\r\n    // If the caller is toString, we are converting from base 10 to baseOut.\r\n    // If the caller is BigNumber, we are converting from baseIn to base 10.\r\n    return function (str, baseIn, baseOut, sign, callerIsToString) {\r\n      var alphabet, d, e, k, r, x, xc, y,\r\n        i = str.indexOf('.'),\r\n        dp = DECIMAL_PLACES,\r\n        rm = ROUNDING_MODE;\r\n\r\n      // Non-integer.\r\n      if (i >= 0) {\r\n        k = POW_PRECISION;\r\n\r\n        // Unlimited precision.\r\n        POW_PRECISION = 0;\r\n        str = str.replace('.', '');\r\n        y = new BigNumber(baseIn);\r\n        x = y.pow(str.length - i);\r\n        POW_PRECISION = k;\r\n\r\n        // Convert str as if an integer, then restore the fraction part by dividing the\r\n        // result by its base raised to a power.\r\n\r\n        y.c = toBaseOut(toFixedPoint(coeffToString(x.c), x.e, '0'),\r\n         10, baseOut, decimal);\r\n        y.e = y.c.length;\r\n      }\r\n\r\n      // Convert the number as integer.\r\n\r\n      xc = toBaseOut(str, baseIn, baseOut, callerIsToString\r\n       ? (alphabet = ALPHABET, decimal)\r\n       : (alphabet = decimal, ALPHABET));\r\n\r\n      // xc now represents str as an integer and converted to baseOut. e is the exponent.\r\n      e = k = xc.length;\r\n\r\n      // Remove trailing zeros.\r\n      for (; xc[--k] == 0; xc.pop());\r\n\r\n      // Zero?\r\n      if (!xc[0]) return alphabet.charAt(0);\r\n\r\n      // Does str represent an integer? If so, no need for the division.\r\n      if (i < 0) {\r\n        --e;\r\n      } else {\r\n        x.c = xc;\r\n        x.e = e;\r\n\r\n        // The sign is needed for correct rounding.\r\n        x.s = sign;\r\n        x = div(x, y, dp, rm, baseOut);\r\n        xc = x.c;\r\n        r = x.r;\r\n        e = x.e;\r\n      }\r\n\r\n      // xc now represents str converted to baseOut.\r\n\r\n      // THe index of the rounding digit.\r\n      d = e + dp + 1;\r\n\r\n      // The rounding digit: the digit to the right of the digit that may be rounded up.\r\n      i = xc[d];\r\n\r\n      // Look at the rounding digits and mode to determine whether to round up.\r\n\r\n      k = baseOut / 2;\r\n      r = r || d < 0 || xc[d + 1] != null;\r\n\r\n      r = rm < 4 ? (i != null || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n            : i > k || i == k &&(rm == 4 || r || rm == 6 && xc[d - 1] & 1 ||\r\n             rm == (x.s < 0 ? 8 : 7));\r\n\r\n      // If the index of the rounding digit is not greater than zero, or xc represents\r\n      // zero, then the result of the base conversion is zero or, if rounding up, a value\r\n      // such as 0.00001.\r\n      if (d < 1 || !xc[0]) {\r\n\r\n        // 1^-dp or 0\r\n        str = r ? toFixedPoint(alphabet.charAt(1), -dp, alphabet.charAt(0)) : alphabet.charAt(0);\r\n      } else {\r\n\r\n        // Truncate xc to the required number of decimal places.\r\n        xc.length = d;\r\n\r\n        // Round up?\r\n        if (r) {\r\n\r\n          // Rounding up may mean the previous digit has to be rounded up and so on.\r\n          for (--baseOut; ++xc[--d] > baseOut;) {\r\n            xc[d] = 0;\r\n\r\n            if (!d) {\r\n              ++e;\r\n              xc = [1].concat(xc);\r\n            }\r\n          }\r\n        }\r\n\r\n        // Determine trailing zeros.\r\n        for (k = xc.length; !xc[--k];);\r\n\r\n        // E.g. [4, 11, 15] becomes 4bf.\r\n        for (i = 0, str = ''; i <= k; str += alphabet.charAt(xc[i++]));\r\n\r\n        // Add leading zeros, decimal point and trailing zeros as required.\r\n        str = toFixedPoint(str, e, alphabet.charAt(0));\r\n      }\r\n\r\n      // The caller will add the sign.\r\n      return str;\r\n    };\r\n  })();\r\n\r\n\r\n  // Perform division in the specified base. Called by div and convertBase.\r\n  div = (function () {\r\n\r\n    // Assume non-zero x and k.\r\n    function multiply(x, k, base) {\r\n      var m, temp, xlo, xhi,\r\n        carry = 0,\r\n        i = x.length,\r\n        klo = k % SQRT_BASE,\r\n        khi = k / SQRT_BASE | 0;\r\n\r\n      for (x = x.slice(); i--;) {\r\n        xlo = x[i] % SQRT_BASE;\r\n        xhi = x[i] / SQRT_BASE | 0;\r\n        m = khi * xlo + xhi * klo;\r\n        temp = klo * xlo + ((m % SQRT_BASE) * SQRT_BASE) + carry;\r\n        carry = (temp / base | 0) + (m / SQRT_BASE | 0) + khi * xhi;\r\n        x[i] = temp % base;\r\n      }\r\n\r\n      if (carry) x = [carry].concat(x);\r\n\r\n      return x;\r\n    }\r\n\r\n    function compare(a, b, aL, bL) {\r\n      var i, cmp;\r\n\r\n      if (aL != bL) {\r\n        cmp = aL > bL ? 1 : -1;\r\n      } else {\r\n\r\n        for (i = cmp = 0; i < aL; i++) {\r\n\r\n          if (a[i] != b[i]) {\r\n            cmp = a[i] > b[i] ? 1 : -1;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      return cmp;\r\n    }\r\n\r\n    function subtract(a, b, aL, base) {\r\n      var i = 0;\r\n\r\n      // Subtract b from a.\r\n      for (; aL--;) {\r\n        a[aL] -= i;\r\n        i = a[aL] < b[aL] ? 1 : 0;\r\n        a[aL] = i * base + a[aL] - b[aL];\r\n      }\r\n\r\n      // Remove leading zeros.\r\n      for (; !a[0] && a.length > 1; a.splice(0, 1));\r\n    }\r\n\r\n    // x: dividend, y: divisor.\r\n    return function (x, y, dp, rm, base) {\r\n      var cmp, e, i, more, n, prod, prodL, q, qc, rem, remL, rem0, xi, xL, yc0,\r\n        yL, yz,\r\n        s = x.s == y.s ? 1 : -1,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      // Either NaN, Infinity or 0?\r\n      if (!xc || !xc[0] || !yc || !yc[0]) {\r\n\r\n        return new BigNumber(\r\n\r\n         // Return NaN if either NaN, or both Infinity or 0.\r\n         !x.s || !y.s || (xc ? yc && xc[0] == yc[0] : !yc) ? NaN :\r\n\r\n          // Return ±0 if x is ±0 or y is ±Infinity, or return ±Infinity as y is ±0.\r\n          xc && xc[0] == 0 || !yc ? s * 0 : s / 0\r\n       );\r\n      }\r\n\r\n      q = new BigNumber(s);\r\n      qc = q.c = [];\r\n      e = x.e - y.e;\r\n      s = dp + e + 1;\r\n\r\n      if (!base) {\r\n        base = BASE;\r\n        e = bitFloor(x.e / LOG_BASE) - bitFloor(y.e / LOG_BASE);\r\n        s = s / LOG_BASE | 0;\r\n      }\r\n\r\n      // Result exponent may be one less then the current value of e.\r\n      // The coefficients of the BigNumbers from convertBase may have trailing zeros.\r\n      for (i = 0; yc[i] == (xc[i] || 0); i++);\r\n\r\n      if (yc[i] > (xc[i] || 0)) e--;\r\n\r\n      if (s < 0) {\r\n        qc.push(1);\r\n        more = true;\r\n      } else {\r\n        xL = xc.length;\r\n        yL = yc.length;\r\n        i = 0;\r\n        s += 2;\r\n\r\n        // Normalise xc and yc so highest order digit of yc is >= base / 2.\r\n\r\n        n = mathfloor(base / (yc[0] + 1));\r\n\r\n        // Not necessary, but to handle odd bases where yc[0] == (base / 2) - 1.\r\n        // if (n > 1 || n++ == 1 && yc[0] < base / 2) {\r\n        if (n > 1) {\r\n          yc = multiply(yc, n, base);\r\n          xc = multiply(xc, n, base);\r\n          yL = yc.length;\r\n          xL = xc.length;\r\n        }\r\n\r\n        xi = yL;\r\n        rem = xc.slice(0, yL);\r\n        remL = rem.length;\r\n\r\n        // Add zeros to make remainder as long as divisor.\r\n        for (; remL < yL; rem[remL++] = 0);\r\n        yz = yc.slice();\r\n        yz = [0].concat(yz);\r\n        yc0 = yc[0];\r\n        if (yc[1] >= base / 2) yc0++;\r\n        // Not necessary, but to prevent trial digit n > base, when using base 3.\r\n        // else if (base == 3 && yc0 == 1) yc0 = 1 + 1e-15;\r\n\r\n        do {\r\n          n = 0;\r\n\r\n          // Compare divisor and remainder.\r\n          cmp = compare(yc, rem, yL, remL);\r\n\r\n          // If divisor < remainder.\r\n          if (cmp < 0) {\r\n\r\n            // Calculate trial digit, n.\r\n\r\n            rem0 = rem[0];\r\n            if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);\r\n\r\n            // n is how many times the divisor goes into the current remainder.\r\n            n = mathfloor(rem0 / yc0);\r\n\r\n            //  Algorithm:\r\n            //  product = divisor multiplied by trial digit (n).\r\n            //  Compare product and remainder.\r\n            //  If product is greater than remainder:\r\n            //    Subtract divisor from product, decrement trial digit.\r\n            //  Subtract product from remainder.\r\n            //  If product was less than remainder at the last compare:\r\n            //    Compare new remainder and divisor.\r\n            //    If remainder is greater than divisor:\r\n            //      Subtract divisor from remainder, increment trial digit.\r\n\r\n            if (n > 1) {\r\n\r\n              // n may be > base only when base is 3.\r\n              if (n >= base) n = base - 1;\r\n\r\n              // product = divisor * trial digit.\r\n              prod = multiply(yc, n, base);\r\n              prodL = prod.length;\r\n              remL = rem.length;\r\n\r\n              // Compare product and remainder.\r\n              // If product > remainder then trial digit n too high.\r\n              // n is 1 too high about 5% of the time, and is not known to have\r\n              // ever been more than 1 too high.\r\n              while (compare(prod, rem, prodL, remL) == 1) {\r\n                n--;\r\n\r\n                // Subtract divisor from product.\r\n                subtract(prod, yL < prodL ? yz : yc, prodL, base);\r\n                prodL = prod.length;\r\n                cmp = 1;\r\n              }\r\n            } else {\r\n\r\n              // n is 0 or 1, cmp is -1.\r\n              // If n is 0, there is no need to compare yc and rem again below,\r\n              // so change cmp to 1 to avoid it.\r\n              // If n is 1, leave cmp as -1, so yc and rem are compared again.\r\n              if (n == 0) {\r\n\r\n                // divisor < remainder, so n must be at least 1.\r\n                cmp = n = 1;\r\n              }\r\n\r\n              // product = divisor\r\n              prod = yc.slice();\r\n              prodL = prod.length;\r\n            }\r\n\r\n            if (prodL < remL) prod = [0].concat(prod);\r\n\r\n            // Subtract product from remainder.\r\n            subtract(rem, prod, remL, base);\r\n            remL = rem.length;\r\n\r\n             // If product was < remainder.\r\n            if (cmp == -1) {\r\n\r\n              // Compare divisor and new remainder.\r\n              // If divisor < new remainder, subtract divisor from remainder.\r\n              // Trial digit n too low.\r\n              // n is 1 too low about 5% of the time, and very rarely 2 too low.\r\n              while (compare(yc, rem, yL, remL) < 1) {\r\n                n++;\r\n\r\n                // Subtract divisor from remainder.\r\n                subtract(rem, yL < remL ? yz : yc, remL, base);\r\n                remL = rem.length;\r\n              }\r\n            }\r\n          } else if (cmp === 0) {\r\n            n++;\r\n            rem = [0];\r\n          } // else cmp === 1 and n will be 0\r\n\r\n          // Add the next digit, n, to the result array.\r\n          qc[i++] = n;\r\n\r\n          // Update the remainder.\r\n          if (rem[0]) {\r\n            rem[remL++] = xc[xi] || 0;\r\n          } else {\r\n            rem = [xc[xi]];\r\n            remL = 1;\r\n          }\r\n        } while ((xi++ < xL || rem[0] != null) && s--);\r\n\r\n        more = rem[0] != null;\r\n\r\n        // Leading zero?\r\n        if (!qc[0]) qc.splice(0, 1);\r\n      }\r\n\r\n      if (base == BASE) {\r\n\r\n        // To calculate q.e, first get the number of digits of qc[0].\r\n        for (i = 1, s = qc[0]; s >= 10; s /= 10, i++);\r\n\r\n        round(q, dp + (q.e = i + e * LOG_BASE - 1) + 1, rm, more);\r\n\r\n      // Caller is convertBase.\r\n      } else {\r\n        q.e = e;\r\n        q.r = +more;\r\n      }\r\n\r\n      return q;\r\n    };\r\n  })();\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of BigNumber n in fixed-point or exponential\r\n   * notation rounded to the specified decimal places or significant digits.\r\n   *\r\n   * n: a BigNumber.\r\n   * i: the index of the last digit required (i.e. the digit that may be rounded up).\r\n   * rm: the rounding mode.\r\n   * id: 1 (toExponential) or 2 (toPrecision).\r\n   */\r\n  function format(n, i, rm, id) {\r\n    var c0, e, ne, len, str;\r\n\r\n    if (rm == null) rm = ROUNDING_MODE;\r\n    else intCheck(rm, 0, 8);\r\n\r\n    if (!n.c) return n.toString();\r\n\r\n    c0 = n.c[0];\r\n    ne = n.e;\r\n\r\n    if (i == null) {\r\n      str = coeffToString(n.c);\r\n      str = id == 1 || id == 2 && (ne <= TO_EXP_NEG || ne >= TO_EXP_POS)\r\n       ? toExponential(str, ne)\r\n       : toFixedPoint(str, ne, '0');\r\n    } else {\r\n      n = round(new BigNumber(n), i, rm);\r\n\r\n      // n.e may have changed if the value was rounded up.\r\n      e = n.e;\r\n\r\n      str = coeffToString(n.c);\r\n      len = str.length;\r\n\r\n      // toPrecision returns exponential notation if the number of significant digits\r\n      // specified is less than the number of digits necessary to represent the integer\r\n      // part of the value in fixed-point notation.\r\n\r\n      // Exponential notation.\r\n      if (id == 1 || id == 2 && (i <= e || e <= TO_EXP_NEG)) {\r\n\r\n        // Append zeros?\r\n        for (; len < i; str += '0', len++);\r\n        str = toExponential(str, e);\r\n\r\n      // Fixed-point notation.\r\n      } else {\r\n        i -= ne;\r\n        str = toFixedPoint(str, e, '0');\r\n\r\n        // Append zeros?\r\n        if (e + 1 > len) {\r\n          if (--i > 0) for (str += '.'; i--; str += '0');\r\n        } else {\r\n          i += e - len;\r\n          if (i > 0) {\r\n            if (e + 1 == len) str += '.';\r\n            for (; i--; str += '0');\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return n.s < 0 && c0 ? '-' + str : str;\r\n  }\r\n\r\n\r\n  // Handle BigNumber.max and BigNumber.min.\r\n  // If any number is NaN, return NaN.\r\n  function maxOrMin(args, n) {\r\n    var k, y,\r\n      i = 1,\r\n      x = new BigNumber(args[0]);\r\n\r\n    for (; i < args.length; i++) {\r\n      y = new BigNumber(args[i]);\r\n      if (!y.s || (k = compare(x, y)) === n || k === 0 && x.s === n) {\r\n        x = y;\r\n      }\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Strip trailing zeros, calculate base 10 exponent and check against MIN_EXP and MAX_EXP.\r\n   * Called by minus, plus and times.\r\n   */\r\n  function normalise(n, c, e) {\r\n    var i = 1,\r\n      j = c.length;\r\n\r\n     // Remove trailing zeros.\r\n    for (; !c[--j]; c.pop());\r\n\r\n    // Calculate the base 10 exponent. First get the number of digits of c[0].\r\n    for (j = c[0]; j >= 10; j /= 10, i++);\r\n\r\n    // Overflow?\r\n    if ((e = i + e * LOG_BASE - 1) > MAX_EXP) {\r\n\r\n      // Infinity.\r\n      n.c = n.e = null;\r\n\r\n    // Underflow?\r\n    } else if (e < MIN_EXP) {\r\n\r\n      // Zero.\r\n      n.c = [n.e = 0];\r\n    } else {\r\n      n.e = e;\r\n      n.c = c;\r\n    }\r\n\r\n    return n;\r\n  }\r\n\r\n\r\n  // Handle values that fail the validity test in BigNumber.\r\n  parseNumeric = (function () {\r\n    var basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i,\r\n      dotAfter = /^([^.]+)\\.$/,\r\n      dotBefore = /^\\.([^.]+)$/,\r\n      isInfinityOrNaN = /^-?(Infinity|NaN)$/,\r\n      whitespaceOrPlus = /^\\s*\\+(?=[\\w.])|^\\s+|\\s+$/g;\r\n\r\n    return function (x, str, isNum, b) {\r\n      var base,\r\n        s = isNum ? str : str.replace(whitespaceOrPlus, '');\r\n\r\n      // No exception on ±Infinity or NaN.\r\n      if (isInfinityOrNaN.test(s)) {\r\n        x.s = isNaN(s) ? null : s < 0 ? -1 : 1;\r\n      } else {\r\n        if (!isNum) {\r\n\r\n          // basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i\r\n          s = s.replace(basePrefix, function (m, p1, p2) {\r\n            base = (p2 = p2.toLowerCase()) == 'x' ? 16 : p2 == 'b' ? 2 : 8;\r\n            return !b || b == base ? p1 : m;\r\n          });\r\n\r\n          if (b) {\r\n            base = b;\r\n\r\n            // E.g. '1.' to '1', '.1' to '0.1'\r\n            s = s.replace(dotAfter, '$1').replace(dotBefore, '0.$1');\r\n          }\r\n\r\n          if (str != s) return new BigNumber(s, base);\r\n        }\r\n\r\n        // '[BigNumber Error] Not a number: {n}'\r\n        // '[BigNumber Error] Not a base {b} number: {n}'\r\n        if (BigNumber.DEBUG) {\r\n          throw Error\r\n            (bignumberError + 'Not a' + (b ? ' base ' + b : '') + ' number: ' + str);\r\n        }\r\n\r\n        // NaN\r\n        x.s = null;\r\n      }\r\n\r\n      x.c = x.e = null;\r\n    }\r\n  })();\r\n\r\n\r\n  /*\r\n   * Round x to sd significant digits using rounding mode rm. Check for over/under-flow.\r\n   * If r is truthy, it is known that there are more digits after the rounding digit.\r\n   */\r\n  function round(x, sd, rm, r) {\r\n    var d, i, j, k, n, ni, rd,\r\n      xc = x.c,\r\n      pows10 = POWS_TEN;\r\n\r\n    // if x is not Infinity or NaN...\r\n    if (xc) {\r\n\r\n      // rd is the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n      // n is a base 1e14 number, the value of the element of array x.c containing rd.\r\n      // ni is the index of n within x.c.\r\n      // d is the number of digits of n.\r\n      // i is the index of rd within n including leading zeros.\r\n      // j is the actual index of rd within n (if < 0, rd is a leading zero).\r\n      out: {\r\n\r\n        // Get the number of digits of the first element of xc.\r\n        for (d = 1, k = xc[0]; k >= 10; k /= 10, d++);\r\n        i = sd - d;\r\n\r\n        // If the rounding digit is in the first element of xc...\r\n        if (i < 0) {\r\n          i += LOG_BASE;\r\n          j = sd;\r\n          n = xc[ni = 0];\r\n\r\n          // Get the rounding digit at index j of n.\r\n          rd = mathfloor(n / pows10[d - j - 1] % 10);\r\n        } else {\r\n          ni = mathceil((i + 1) / LOG_BASE);\r\n\r\n          if (ni >= xc.length) {\r\n\r\n            if (r) {\r\n\r\n              // Needed by sqrt.\r\n              for (; xc.length <= ni; xc.push(0));\r\n              n = rd = 0;\r\n              d = 1;\r\n              i %= LOG_BASE;\r\n              j = i - LOG_BASE + 1;\r\n            } else {\r\n              break out;\r\n            }\r\n          } else {\r\n            n = k = xc[ni];\r\n\r\n            // Get the number of digits of n.\r\n            for (d = 1; k >= 10; k /= 10, d++);\r\n\r\n            // Get the index of rd within n.\r\n            i %= LOG_BASE;\r\n\r\n            // Get the index of rd within n, adjusted for leading zeros.\r\n            // The number of leading zeros of n is given by LOG_BASE - d.\r\n            j = i - LOG_BASE + d;\r\n\r\n            // Get the rounding digit at index j of n.\r\n            rd = j < 0 ? 0 : mathfloor(n / pows10[d - j - 1] % 10);\r\n          }\r\n        }\r\n\r\n        r = r || sd < 0 ||\r\n\r\n        // Are there any non-zero digits after the rounding digit?\r\n        // The expression  n % pows10[d - j - 1]  returns all digits of n to the right\r\n        // of the digit at j, e.g. if n is 908714 and j is 2, the expression gives 714.\r\n         xc[ni + 1] != null || (j < 0 ? n : n % pows10[d - j - 1]);\r\n\r\n        r = rm < 4\r\n         ? (rd || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n         : rd > 5 || rd == 5 && (rm == 4 || r || rm == 6 &&\r\n\r\n          // Check whether the digit to the left of the rounding digit is odd.\r\n          ((i > 0 ? j > 0 ? n / pows10[d - j] : 0 : xc[ni - 1]) % 10) & 1 ||\r\n           rm == (x.s < 0 ? 8 : 7));\r\n\r\n        if (sd < 1 || !xc[0]) {\r\n          xc.length = 0;\r\n\r\n          if (r) {\r\n\r\n            // Convert sd to decimal places.\r\n            sd -= x.e + 1;\r\n\r\n            // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n            xc[0] = pows10[(LOG_BASE - sd % LOG_BASE) % LOG_BASE];\r\n            x.e = -sd || 0;\r\n          } else {\r\n\r\n            // Zero.\r\n            xc[0] = x.e = 0;\r\n          }\r\n\r\n          return x;\r\n        }\r\n\r\n        // Remove excess digits.\r\n        if (i == 0) {\r\n          xc.length = ni;\r\n          k = 1;\r\n          ni--;\r\n        } else {\r\n          xc.length = ni + 1;\r\n          k = pows10[LOG_BASE - i];\r\n\r\n          // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n          // j > 0 means i > number of leading zeros of n.\r\n          xc[ni] = j > 0 ? mathfloor(n / pows10[d - j] % pows10[j]) * k : 0;\r\n        }\r\n\r\n        // Round up?\r\n        if (r) {\r\n\r\n          for (; ;) {\r\n\r\n            // If the digit to be rounded up is in the first element of xc...\r\n            if (ni == 0) {\r\n\r\n              // i will be the length of xc[0] before k is added.\r\n              for (i = 1, j = xc[0]; j >= 10; j /= 10, i++);\r\n              j = xc[0] += k;\r\n              for (k = 1; j >= 10; j /= 10, k++);\r\n\r\n              // if i != k the length has increased.\r\n              if (i != k) {\r\n                x.e++;\r\n                if (xc[0] == BASE) xc[0] = 1;\r\n              }\r\n\r\n              break;\r\n            } else {\r\n              xc[ni] += k;\r\n              if (xc[ni] != BASE) break;\r\n              xc[ni--] = 0;\r\n              k = 1;\r\n            }\r\n          }\r\n        }\r\n\r\n        // Remove trailing zeros.\r\n        for (i = xc.length; xc[--i] === 0; xc.pop());\r\n      }\r\n\r\n      // Overflow? Infinity.\r\n      if (x.e > MAX_EXP) {\r\n        x.c = x.e = null;\r\n\r\n      // Underflow? Zero.\r\n      } else if (x.e < MIN_EXP) {\r\n        x.c = [x.e = 0];\r\n      }\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  function valueOf(n) {\r\n    var str,\r\n      e = n.e;\r\n\r\n    if (e === null) return n.toString();\r\n\r\n    str = coeffToString(n.c);\r\n\r\n    str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n      ? toExponential(str, e)\r\n      : toFixedPoint(str, e, '0');\r\n\r\n    return n.s < 0 ? '-' + str : str;\r\n  }\r\n\r\n\r\n  // PROTOTYPE/INSTANCE METHODS\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the absolute value of this BigNumber.\r\n   */\r\n  P.absoluteValue = P.abs = function () {\r\n    var x = new BigNumber(this);\r\n    if (x.s < 0) x.s = 1;\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return\r\n   *   1 if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n   *   -1 if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n   *   0 if they have the same value,\r\n   *   or null if the value of either is NaN.\r\n   */\r\n  P.comparedTo = function (y, b) {\r\n    return compare(this, new BigNumber(y, b));\r\n  };\r\n\r\n\r\n  /*\r\n   * If dp is undefined or null or true or false, return the number of decimal places of the\r\n   * value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n   *\r\n   * Otherwise, if dp is a number, return a new BigNumber whose value is the value of this\r\n   * BigNumber rounded to a maximum of dp decimal places using rounding mode rm, or\r\n   * ROUNDING_MODE if rm is omitted.\r\n   *\r\n   * [dp] {number} Decimal places: integer, 0 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n   */\r\n  P.decimalPlaces = P.dp = function (dp, rm) {\r\n    var c, n, v,\r\n      x = this;\r\n\r\n    if (dp != null) {\r\n      intCheck(dp, 0, MAX);\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n\r\n      return round(new BigNumber(x), dp + x.e + 1, rm);\r\n    }\r\n\r\n    if (!(c = x.c)) return null;\r\n    n = ((v = c.length - 1) - bitFloor(this.e / LOG_BASE)) * LOG_BASE;\r\n\r\n    // Subtract the number of trailing zeros of the last number.\r\n    if (v = c[v]) for (; v % 10 == 0; v /= 10, n--);\r\n    if (n < 0) n = 0;\r\n\r\n    return n;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n / 0 = I\r\n   *  n / N = N\r\n   *  n / I = 0\r\n   *  0 / n = 0\r\n   *  0 / 0 = N\r\n   *  0 / N = N\r\n   *  0 / I = 0\r\n   *  N / n = N\r\n   *  N / 0 = N\r\n   *  N / N = N\r\n   *  N / I = N\r\n   *  I / n = I\r\n   *  I / 0 = I\r\n   *  I / N = N\r\n   *  I / I = N\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber divided by the value of\r\n   * BigNumber(y, b), rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n   */\r\n  P.dividedBy = P.div = function (y, b) {\r\n    return div(this, new BigNumber(y, b), DECIMAL_PLACES, ROUNDING_MODE);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the integer part of dividing the value of this\r\n   * BigNumber by the value of BigNumber(y, b).\r\n   */\r\n  P.dividedToIntegerBy = P.idiv = function (y, b) {\r\n    return div(this, new BigNumber(y, b), 0, 1);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a BigNumber whose value is the value of this BigNumber exponentiated by n.\r\n   *\r\n   * If m is present, return the result modulo m.\r\n   * If n is negative round according to DECIMAL_PLACES and ROUNDING_MODE.\r\n   * If POW_PRECISION is non-zero and m is not present, round to POW_PRECISION using ROUNDING_MODE.\r\n   *\r\n   * The modular power operation works efficiently when x, n, and m are integers, otherwise it\r\n   * is equivalent to calculating x.exponentiatedBy(n).modulo(m) with a POW_PRECISION of 0.\r\n   *\r\n   * n {number|string|BigNumber} The exponent. An integer.\r\n   * [m] {number|string|BigNumber} The modulus.\r\n   *\r\n   * '[BigNumber Error] Exponent not an integer: {n}'\r\n   */\r\n  P.exponentiatedBy = P.pow = function (n, m) {\r\n    var half, isModExp, i, k, more, nIsBig, nIsNeg, nIsOdd, y,\r\n      x = this;\r\n\r\n    n = new BigNumber(n);\r\n\r\n    // Allow NaN and ±Infinity, but not other non-integers.\r\n    if (n.c && !n.isInteger()) {\r\n      throw Error\r\n        (bignumberError + 'Exponent not an integer: ' + valueOf(n));\r\n    }\r\n\r\n    if (m != null) m = new BigNumber(m);\r\n\r\n    // Exponent of MAX_SAFE_INTEGER is 15.\r\n    nIsBig = n.e > 14;\r\n\r\n    // If x is NaN, ±Infinity, ±0 or ±1, or n is ±Infinity, NaN or ±0.\r\n    if (!x.c || !x.c[0] || x.c[0] == 1 && !x.e && x.c.length == 1 || !n.c || !n.c[0]) {\r\n\r\n      // The sign of the result of pow when x is negative depends on the evenness of n.\r\n      // If +n overflows to ±Infinity, the evenness of n would be not be known.\r\n      y = new BigNumber(Math.pow(+valueOf(x), nIsBig ? n.s * (2 - isOdd(n)) : +valueOf(n)));\r\n      return m ? y.mod(m) : y;\r\n    }\r\n\r\n    nIsNeg = n.s < 0;\r\n\r\n    if (m) {\r\n\r\n      // x % m returns NaN if abs(m) is zero, or m is NaN.\r\n      if (m.c ? !m.c[0] : !m.s) return new BigNumber(NaN);\r\n\r\n      isModExp = !nIsNeg && x.isInteger() && m.isInteger();\r\n\r\n      if (isModExp) x = x.mod(m);\r\n\r\n    // Overflow to ±Infinity: >=2**1e10 or >=1.0000024**1e15.\r\n    // Underflow to ±0: <=0.79**1e10 or <=0.9999975**1e15.\r\n    } else if (n.e > 9 && (x.e > 0 || x.e < -1 || (x.e == 0\r\n      // [1, 240000000]\r\n      ? x.c[0] > 1 || nIsBig && x.c[1] >= 24e7\r\n      // [80000000000000]  [99999750000000]\r\n      : x.c[0] < 8e13 || nIsBig && x.c[0] <= 9999975e7))) {\r\n\r\n      // If x is negative and n is odd, k = -0, else k = 0.\r\n      k = x.s < 0 && isOdd(n) ? -0 : 0;\r\n\r\n      // If x >= 1, k = ±Infinity.\r\n      if (x.e > -1) k = 1 / k;\r\n\r\n      // If n is negative return ±0, else return ±Infinity.\r\n      return new BigNumber(nIsNeg ? 1 / k : k);\r\n\r\n    } else if (POW_PRECISION) {\r\n\r\n      // Truncating each coefficient array to a length of k after each multiplication\r\n      // equates to truncating significant digits to POW_PRECISION + [28, 41],\r\n      // i.e. there will be a minimum of 28 guard digits retained.\r\n      k = mathceil(POW_PRECISION / LOG_BASE + 2);\r\n    }\r\n\r\n    if (nIsBig) {\r\n      half = new BigNumber(0.5);\r\n      if (nIsNeg) n.s = 1;\r\n      nIsOdd = isOdd(n);\r\n    } else {\r\n      i = Math.abs(+valueOf(n));\r\n      nIsOdd = i % 2;\r\n    }\r\n\r\n    y = new BigNumber(ONE);\r\n\r\n    // Performs 54 loop iterations for n of 9007199254740991.\r\n    for (; ;) {\r\n\r\n      if (nIsOdd) {\r\n        y = y.times(x);\r\n        if (!y.c) break;\r\n\r\n        if (k) {\r\n          if (y.c.length > k) y.c.length = k;\r\n        } else if (isModExp) {\r\n          y = y.mod(m);    //y = y.minus(div(y, m, 0, MODULO_MODE).times(m));\r\n        }\r\n      }\r\n\r\n      if (i) {\r\n        i = mathfloor(i / 2);\r\n        if (i === 0) break;\r\n        nIsOdd = i % 2;\r\n      } else {\r\n        n = n.times(half);\r\n        round(n, n.e + 1, 1);\r\n\r\n        if (n.e > 14) {\r\n          nIsOdd = isOdd(n);\r\n        } else {\r\n          i = +valueOf(n);\r\n          if (i === 0) break;\r\n          nIsOdd = i % 2;\r\n        }\r\n      }\r\n\r\n      x = x.times(x);\r\n\r\n      if (k) {\r\n        if (x.c && x.c.length > k) x.c.length = k;\r\n      } else if (isModExp) {\r\n        x = x.mod(m);    //x = x.minus(div(x, m, 0, MODULO_MODE).times(m));\r\n      }\r\n    }\r\n\r\n    if (isModExp) return y;\r\n    if (nIsNeg) y = ONE.div(y);\r\n\r\n    return m ? y.mod(m) : k ? round(y, POW_PRECISION, ROUNDING_MODE, more) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the value of this BigNumber rounded to an integer\r\n   * using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n   *\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {rm}'\r\n   */\r\n  P.integerValue = function (rm) {\r\n    var n = new BigNumber(this);\r\n    if (rm == null) rm = ROUNDING_MODE;\r\n    else intCheck(rm, 0, 8);\r\n    return round(n, n.e + 1, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is equal to the value of BigNumber(y, b),\r\n   * otherwise return false.\r\n   */\r\n  P.isEqualTo = P.eq = function (y, b) {\r\n    return compare(this, new BigNumber(y, b)) === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is a finite number, otherwise return false.\r\n   */\r\n  P.isFinite = function () {\r\n    return !!this.c;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n   * otherwise return false.\r\n   */\r\n  P.isGreaterThan = P.gt = function (y, b) {\r\n    return compare(this, new BigNumber(y, b)) > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is greater than or equal to the value of\r\n   * BigNumber(y, b), otherwise return false.\r\n   */\r\n  P.isGreaterThanOrEqualTo = P.gte = function (y, b) {\r\n    return (b = compare(this, new BigNumber(y, b))) === 1 || b === 0;\r\n\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is an integer, otherwise return false.\r\n   */\r\n  P.isInteger = function () {\r\n    return !!this.c && bitFloor(this.e / LOG_BASE) > this.c.length - 2;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n   * otherwise return false.\r\n   */\r\n  P.isLessThan = P.lt = function (y, b) {\r\n    return compare(this, new BigNumber(y, b)) < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is less than or equal to the value of\r\n   * BigNumber(y, b), otherwise return false.\r\n   */\r\n  P.isLessThanOrEqualTo = P.lte = function (y, b) {\r\n    return (b = compare(this, new BigNumber(y, b))) === -1 || b === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is NaN, otherwise return false.\r\n   */\r\n  P.isNaN = function () {\r\n    return !this.s;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is negative, otherwise return false.\r\n   */\r\n  P.isNegative = function () {\r\n    return this.s < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is positive, otherwise return false.\r\n   */\r\n  P.isPositive = function () {\r\n    return this.s > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is 0 or -0, otherwise return false.\r\n   */\r\n  P.isZero = function () {\r\n    return !!this.c && this.c[0] == 0;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n - 0 = n\r\n   *  n - N = N\r\n   *  n - I = -I\r\n   *  0 - n = -n\r\n   *  0 - 0 = 0\r\n   *  0 - N = N\r\n   *  0 - I = -I\r\n   *  N - n = N\r\n   *  N - 0 = N\r\n   *  N - N = N\r\n   *  N - I = N\r\n   *  I - n = I\r\n   *  I - 0 = I\r\n   *  I - N = N\r\n   *  I - I = N\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber minus the value of\r\n   * BigNumber(y, b).\r\n   */\r\n  P.minus = function (y, b) {\r\n    var i, j, t, xLTy,\r\n      x = this,\r\n      a = x.s;\r\n\r\n    y = new BigNumber(y, b);\r\n    b = y.s;\r\n\r\n    // Either NaN?\r\n    if (!a || !b) return new BigNumber(NaN);\r\n\r\n    // Signs differ?\r\n    if (a != b) {\r\n      y.s = -b;\r\n      return x.plus(y);\r\n    }\r\n\r\n    var xe = x.e / LOG_BASE,\r\n      ye = y.e / LOG_BASE,\r\n      xc = x.c,\r\n      yc = y.c;\r\n\r\n    if (!xe || !ye) {\r\n\r\n      // Either Infinity?\r\n      if (!xc || !yc) return xc ? (y.s = -b, y) : new BigNumber(yc ? x : NaN);\r\n\r\n      // Either zero?\r\n      if (!xc[0] || !yc[0]) {\r\n\r\n        // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n        return yc[0] ? (y.s = -b, y) : new BigNumber(xc[0] ? x :\r\n\r\n         // IEEE 754 (2008) 6.3: n - n = -0 when rounding to -Infinity\r\n         ROUNDING_MODE == 3 ? -0 : 0);\r\n      }\r\n    }\r\n\r\n    xe = bitFloor(xe);\r\n    ye = bitFloor(ye);\r\n    xc = xc.slice();\r\n\r\n    // Determine which is the bigger number.\r\n    if (a = xe - ye) {\r\n\r\n      if (xLTy = a < 0) {\r\n        a = -a;\r\n        t = xc;\r\n      } else {\r\n        ye = xe;\r\n        t = yc;\r\n      }\r\n\r\n      t.reverse();\r\n\r\n      // Prepend zeros to equalise exponents.\r\n      for (b = a; b--; t.push(0));\r\n      t.reverse();\r\n    } else {\r\n\r\n      // Exponents equal. Check digit by digit.\r\n      j = (xLTy = (a = xc.length) < (b = yc.length)) ? a : b;\r\n\r\n      for (a = b = 0; b < j; b++) {\r\n\r\n        if (xc[b] != yc[b]) {\r\n          xLTy = xc[b] < yc[b];\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    // x < y? Point xc to the array of the bigger number.\r\n    if (xLTy) {\r\n      t = xc;\r\n      xc = yc;\r\n      yc = t;\r\n      y.s = -y.s;\r\n    }\r\n\r\n    b = (j = yc.length) - (i = xc.length);\r\n\r\n    // Append zeros to xc if shorter.\r\n    // No need to add zeros to yc if shorter as subtract only needs to start at yc.length.\r\n    if (b > 0) for (; b--; xc[i++] = 0);\r\n    b = BASE - 1;\r\n\r\n    // Subtract yc from xc.\r\n    for (; j > a;) {\r\n\r\n      if (xc[--j] < yc[j]) {\r\n        for (i = j; i && !xc[--i]; xc[i] = b);\r\n        --xc[i];\r\n        xc[j] += BASE;\r\n      }\r\n\r\n      xc[j] -= yc[j];\r\n    }\r\n\r\n    // Remove leading zeros and adjust exponent accordingly.\r\n    for (; xc[0] == 0; xc.splice(0, 1), --ye);\r\n\r\n    // Zero?\r\n    if (!xc[0]) {\r\n\r\n      // Following IEEE 754 (2008) 6.3,\r\n      // n - n = +0  but  n - n = -0  when rounding towards -Infinity.\r\n      y.s = ROUNDING_MODE == 3 ? -1 : 1;\r\n      y.c = [y.e = 0];\r\n      return y;\r\n    }\r\n\r\n    // No need to check for Infinity as +x - +y != Infinity && -x - -y != Infinity\r\n    // for finite x and y.\r\n    return normalise(y, xc, ye);\r\n  };\r\n\r\n\r\n  /*\r\n   *   n % 0 =  N\r\n   *   n % N =  N\r\n   *   n % I =  n\r\n   *   0 % n =  0\r\n   *  -0 % n = -0\r\n   *   0 % 0 =  N\r\n   *   0 % N =  N\r\n   *   0 % I =  0\r\n   *   N % n =  N\r\n   *   N % 0 =  N\r\n   *   N % N =  N\r\n   *   N % I =  N\r\n   *   I % n =  N\r\n   *   I % 0 =  N\r\n   *   I % N =  N\r\n   *   I % I =  N\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber modulo the value of\r\n   * BigNumber(y, b). The result depends on the value of MODULO_MODE.\r\n   */\r\n  P.modulo = P.mod = function (y, b) {\r\n    var q, s,\r\n      x = this;\r\n\r\n    y = new BigNumber(y, b);\r\n\r\n    // Return NaN if x is Infinity or NaN, or y is NaN or zero.\r\n    if (!x.c || !y.s || y.c && !y.c[0]) {\r\n      return new BigNumber(NaN);\r\n\r\n    // Return x if y is Infinity or x is zero.\r\n    } else if (!y.c || x.c && !x.c[0]) {\r\n      return new BigNumber(x);\r\n    }\r\n\r\n    if (MODULO_MODE == 9) {\r\n\r\n      // Euclidian division: q = sign(y) * floor(x / abs(y))\r\n      // r = x - qy    where  0 <= r < abs(y)\r\n      s = y.s;\r\n      y.s = 1;\r\n      q = div(x, y, 0, 3);\r\n      y.s = s;\r\n      q.s *= s;\r\n    } else {\r\n      q = div(x, y, 0, MODULO_MODE);\r\n    }\r\n\r\n    y = x.minus(q.times(y));\r\n\r\n    // To match JavaScript %, ensure sign of zero is sign of dividend.\r\n    if (!y.c[0] && MODULO_MODE == 1) y.s = x.s;\r\n\r\n    return y;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n * 0 = 0\r\n   *  n * N = N\r\n   *  n * I = I\r\n   *  0 * n = 0\r\n   *  0 * 0 = 0\r\n   *  0 * N = N\r\n   *  0 * I = N\r\n   *  N * n = N\r\n   *  N * 0 = N\r\n   *  N * N = N\r\n   *  N * I = N\r\n   *  I * n = I\r\n   *  I * 0 = N\r\n   *  I * N = N\r\n   *  I * I = I\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber multiplied by the value\r\n   * of BigNumber(y, b).\r\n   */\r\n  P.multipliedBy = P.times = function (y, b) {\r\n    var c, e, i, j, k, m, xcL, xlo, xhi, ycL, ylo, yhi, zc,\r\n      base, sqrtBase,\r\n      x = this,\r\n      xc = x.c,\r\n      yc = (y = new BigNumber(y, b)).c;\r\n\r\n    // Either NaN, ±Infinity or ±0?\r\n    if (!xc || !yc || !xc[0] || !yc[0]) {\r\n\r\n      // Return NaN if either is NaN, or one is 0 and the other is Infinity.\r\n      if (!x.s || !y.s || xc && !xc[0] && !yc || yc && !yc[0] && !xc) {\r\n        y.c = y.e = y.s = null;\r\n      } else {\r\n        y.s *= x.s;\r\n\r\n        // Return ±Infinity if either is ±Infinity.\r\n        if (!xc || !yc) {\r\n          y.c = y.e = null;\r\n\r\n        // Return ±0 if either is ±0.\r\n        } else {\r\n          y.c = [0];\r\n          y.e = 0;\r\n        }\r\n      }\r\n\r\n      return y;\r\n    }\r\n\r\n    e = bitFloor(x.e / LOG_BASE) + bitFloor(y.e / LOG_BASE);\r\n    y.s *= x.s;\r\n    xcL = xc.length;\r\n    ycL = yc.length;\r\n\r\n    // Ensure xc points to longer array and xcL to its length.\r\n    if (xcL < ycL) {\r\n      zc = xc;\r\n      xc = yc;\r\n      yc = zc;\r\n      i = xcL;\r\n      xcL = ycL;\r\n      ycL = i;\r\n    }\r\n\r\n    // Initialise the result array with zeros.\r\n    for (i = xcL + ycL, zc = []; i--; zc.push(0));\r\n\r\n    base = BASE;\r\n    sqrtBase = SQRT_BASE;\r\n\r\n    for (i = ycL; --i >= 0;) {\r\n      c = 0;\r\n      ylo = yc[i] % sqrtBase;\r\n      yhi = yc[i] / sqrtBase | 0;\r\n\r\n      for (k = xcL, j = i + k; j > i;) {\r\n        xlo = xc[--k] % sqrtBase;\r\n        xhi = xc[k] / sqrtBase | 0;\r\n        m = yhi * xlo + xhi * ylo;\r\n        xlo = ylo * xlo + ((m % sqrtBase) * sqrtBase) + zc[j] + c;\r\n        c = (xlo / base | 0) + (m / sqrtBase | 0) + yhi * xhi;\r\n        zc[j--] = xlo % base;\r\n      }\r\n\r\n      zc[j] = c;\r\n    }\r\n\r\n    if (c) {\r\n      ++e;\r\n    } else {\r\n      zc.splice(0, 1);\r\n    }\r\n\r\n    return normalise(y, zc, e);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the value of this BigNumber negated,\r\n   * i.e. multiplied by -1.\r\n   */\r\n  P.negated = function () {\r\n    var x = new BigNumber(this);\r\n    x.s = -x.s || null;\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n + 0 = n\r\n   *  n + N = N\r\n   *  n + I = I\r\n   *  0 + n = n\r\n   *  0 + 0 = 0\r\n   *  0 + N = N\r\n   *  0 + I = I\r\n   *  N + n = N\r\n   *  N + 0 = N\r\n   *  N + N = N\r\n   *  N + I = N\r\n   *  I + n = I\r\n   *  I + 0 = I\r\n   *  I + N = N\r\n   *  I + I = I\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber plus the value of\r\n   * BigNumber(y, b).\r\n   */\r\n  P.plus = function (y, b) {\r\n    var t,\r\n      x = this,\r\n      a = x.s;\r\n\r\n    y = new BigNumber(y, b);\r\n    b = y.s;\r\n\r\n    // Either NaN?\r\n    if (!a || !b) return new BigNumber(NaN);\r\n\r\n    // Signs differ?\r\n     if (a != b) {\r\n      y.s = -b;\r\n      return x.minus(y);\r\n    }\r\n\r\n    var xe = x.e / LOG_BASE,\r\n      ye = y.e / LOG_BASE,\r\n      xc = x.c,\r\n      yc = y.c;\r\n\r\n    if (!xe || !ye) {\r\n\r\n      // Return ±Infinity if either ±Infinity.\r\n      if (!xc || !yc) return new BigNumber(a / 0);\r\n\r\n      // Either zero?\r\n      // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n      if (!xc[0] || !yc[0]) return yc[0] ? y : new BigNumber(xc[0] ? x : a * 0);\r\n    }\r\n\r\n    xe = bitFloor(xe);\r\n    ye = bitFloor(ye);\r\n    xc = xc.slice();\r\n\r\n    // Prepend zeros to equalise exponents. Faster to use reverse then do unshifts.\r\n    if (a = xe - ye) {\r\n      if (a > 0) {\r\n        ye = xe;\r\n        t = yc;\r\n      } else {\r\n        a = -a;\r\n        t = xc;\r\n      }\r\n\r\n      t.reverse();\r\n      for (; a--; t.push(0));\r\n      t.reverse();\r\n    }\r\n\r\n    a = xc.length;\r\n    b = yc.length;\r\n\r\n    // Point xc to the longer array, and b to the shorter length.\r\n    if (a - b < 0) {\r\n      t = yc;\r\n      yc = xc;\r\n      xc = t;\r\n      b = a;\r\n    }\r\n\r\n    // Only start adding at yc.length - 1 as the further digits of xc can be ignored.\r\n    for (a = 0; b;) {\r\n      a = (xc[--b] = xc[b] + yc[b] + a) / BASE | 0;\r\n      xc[b] = BASE === xc[b] ? 0 : xc[b] % BASE;\r\n    }\r\n\r\n    if (a) {\r\n      xc = [a].concat(xc);\r\n      ++ye;\r\n    }\r\n\r\n    // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n    // ye = MAX_EXP + 1 possible\r\n    return normalise(y, xc, ye);\r\n  };\r\n\r\n\r\n  /*\r\n   * If sd is undefined or null or true or false, return the number of significant digits of\r\n   * the value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n   * If sd is true include integer-part trailing zeros in the count.\r\n   *\r\n   * Otherwise, if sd is a number, return a new BigNumber whose value is the value of this\r\n   * BigNumber rounded to a maximum of sd significant digits using rounding mode rm, or\r\n   * ROUNDING_MODE if rm is omitted.\r\n   *\r\n   * sd {number|boolean} number: significant digits: integer, 1 to MAX inclusive.\r\n   *                     boolean: whether to count integer-part trailing zeros: true or false.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n   */\r\n  P.precision = P.sd = function (sd, rm) {\r\n    var c, n, v,\r\n      x = this;\r\n\r\n    if (sd != null && sd !== !!sd) {\r\n      intCheck(sd, 1, MAX);\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n\r\n      return round(new BigNumber(x), sd, rm);\r\n    }\r\n\r\n    if (!(c = x.c)) return null;\r\n    v = c.length - 1;\r\n    n = v * LOG_BASE + 1;\r\n\r\n    if (v = c[v]) {\r\n\r\n      // Subtract the number of trailing zeros of the last element.\r\n      for (; v % 10 == 0; v /= 10, n--);\r\n\r\n      // Add the number of digits of the first element.\r\n      for (v = c[0]; v >= 10; v /= 10, n++);\r\n    }\r\n\r\n    if (sd && x.e + 1 > n) n = x.e + 1;\r\n\r\n    return n;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the value of this BigNumber shifted by k places\r\n   * (powers of 10). Shift to the right if n > 0, and to the left if n < 0.\r\n   *\r\n   * k {number} Integer, -MAX_SAFE_INTEGER to MAX_SAFE_INTEGER inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {k}'\r\n   */\r\n  P.shiftedBy = function (k) {\r\n    intCheck(k, -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);\r\n    return this.times('1e' + k);\r\n  };\r\n\r\n\r\n  /*\r\n   *  sqrt(-n) =  N\r\n   *  sqrt(N) =  N\r\n   *  sqrt(-I) =  N\r\n   *  sqrt(I) =  I\r\n   *  sqrt(0) =  0\r\n   *  sqrt(-0) = -0\r\n   *\r\n   * Return a new BigNumber whose value is the square root of the value of this BigNumber,\r\n   * rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n   */\r\n  P.squareRoot = P.sqrt = function () {\r\n    var m, n, r, rep, t,\r\n      x = this,\r\n      c = x.c,\r\n      s = x.s,\r\n      e = x.e,\r\n      dp = DECIMAL_PLACES + 4,\r\n      half = new BigNumber('0.5');\r\n\r\n    // Negative/NaN/Infinity/zero?\r\n    if (s !== 1 || !c || !c[0]) {\r\n      return new BigNumber(!s || s < 0 && (!c || c[0]) ? NaN : c ? x : 1 / 0);\r\n    }\r\n\r\n    // Initial estimate.\r\n    s = Math.sqrt(+valueOf(x));\r\n\r\n    // Math.sqrt underflow/overflow?\r\n    // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n    if (s == 0 || s == 1 / 0) {\r\n      n = coeffToString(c);\r\n      if ((n.length + e) % 2 == 0) n += '0';\r\n      s = Math.sqrt(+n);\r\n      e = bitFloor((e + 1) / 2) - (e < 0 || e % 2);\r\n\r\n      if (s == 1 / 0) {\r\n        n = '5e' + e;\r\n      } else {\r\n        n = s.toExponential();\r\n        n = n.slice(0, n.indexOf('e') + 1) + e;\r\n      }\r\n\r\n      r = new BigNumber(n);\r\n    } else {\r\n      r = new BigNumber(s + '');\r\n    }\r\n\r\n    // Check for zero.\r\n    // r could be zero if MIN_EXP is changed after the this value was created.\r\n    // This would cause a division by zero (x/t) and hence Infinity below, which would cause\r\n    // coeffToString to throw.\r\n    if (r.c[0]) {\r\n      e = r.e;\r\n      s = e + dp;\r\n      if (s < 3) s = 0;\r\n\r\n      // Newton-Raphson iteration.\r\n      for (; ;) {\r\n        t = r;\r\n        r = half.times(t.plus(div(x, t, dp, 1)));\r\n\r\n        if (coeffToString(t.c).slice(0, s) === (n = coeffToString(r.c)).slice(0, s)) {\r\n\r\n          // The exponent of r may here be one less than the final result exponent,\r\n          // e.g 0.0009999 (e-4) --> 0.001 (e-3), so adjust s so the rounding digits\r\n          // are indexed correctly.\r\n          if (r.e < e) --s;\r\n          n = n.slice(s - 3, s + 1);\r\n\r\n          // The 4th rounding digit may be in error by -1 so if the 4 rounding digits\r\n          // are 9999 or 4999 (i.e. approaching a rounding boundary) continue the\r\n          // iteration.\r\n          if (n == '9999' || !rep && n == '4999') {\r\n\r\n            // On the first iteration only, check to see if rounding up gives the\r\n            // exact result as the nines may infinitely repeat.\r\n            if (!rep) {\r\n              round(t, t.e + DECIMAL_PLACES + 2, 0);\r\n\r\n              if (t.times(t).eq(x)) {\r\n                r = t;\r\n                break;\r\n              }\r\n            }\r\n\r\n            dp += 4;\r\n            s += 4;\r\n            rep = 1;\r\n          } else {\r\n\r\n            // If rounding digits are null, 0{0,4} or 50{0,3}, check for exact\r\n            // result. If not, then there are further digits and m will be truthy.\r\n            if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n              // Truncate to the first rounding digit.\r\n              round(r, r.e + DECIMAL_PLACES + 2, 1);\r\n              m = !r.times(r).eq(x);\r\n            }\r\n\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return round(r, r.e + DECIMAL_PLACES + 1, ROUNDING_MODE, m);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber in exponential notation and\r\n   * rounded using ROUNDING_MODE to dp fixed decimal places.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n   */\r\n  P.toExponential = function (dp, rm) {\r\n    if (dp != null) {\r\n      intCheck(dp, 0, MAX);\r\n      dp++;\r\n    }\r\n    return format(this, dp, rm, 1);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber in fixed-point notation rounding\r\n   * to dp fixed decimal places using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n   *\r\n   * Note: as with JavaScript's number type, (-0).toFixed(0) is '0',\r\n   * but e.g. (-0.00001).toFixed(0) is '-0'.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n   */\r\n  P.toFixed = function (dp, rm) {\r\n    if (dp != null) {\r\n      intCheck(dp, 0, MAX);\r\n      dp = dp + this.e + 1;\r\n    }\r\n    return format(this, dp, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber in fixed-point notation rounded\r\n   * using rm or ROUNDING_MODE to dp decimal places, and formatted according to the properties\r\n   * of the format or FORMAT object (see BigNumber.set).\r\n   *\r\n   * The formatting object may contain some or all of the properties shown below.\r\n   *\r\n   * FORMAT = {\r\n   *   prefix: '',\r\n   *   groupSize: 3,\r\n   *   secondaryGroupSize: 0,\r\n   *   groupSeparator: ',',\r\n   *   decimalSeparator: '.',\r\n   *   fractionGroupSize: 0,\r\n   *   fractionGroupSeparator: '\\xA0',      // non-breaking space\r\n   *   suffix: ''\r\n   * };\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   * [format] {object} Formatting options. See FORMAT pbject above.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n   * '[BigNumber Error] Argument not an object: {format}'\r\n   */\r\n  P.toFormat = function (dp, rm, format) {\r\n    var str,\r\n      x = this;\r\n\r\n    if (format == null) {\r\n      if (dp != null && rm && typeof rm == 'object') {\r\n        format = rm;\r\n        rm = null;\r\n      } else if (dp && typeof dp == 'object') {\r\n        format = dp;\r\n        dp = rm = null;\r\n      } else {\r\n        format = FORMAT;\r\n      }\r\n    } else if (typeof format != 'object') {\r\n      throw Error\r\n        (bignumberError + 'Argument not an object: ' + format);\r\n    }\r\n\r\n    str = x.toFixed(dp, rm);\r\n\r\n    if (x.c) {\r\n      var i,\r\n        arr = str.split('.'),\r\n        g1 = +format.groupSize,\r\n        g2 = +format.secondaryGroupSize,\r\n        groupSeparator = format.groupSeparator || '',\r\n        intPart = arr[0],\r\n        fractionPart = arr[1],\r\n        isNeg = x.s < 0,\r\n        intDigits = isNeg ? intPart.slice(1) : intPart,\r\n        len = intDigits.length;\r\n\r\n      if (g2) {\r\n        i = g1;\r\n        g1 = g2;\r\n        g2 = i;\r\n        len -= i;\r\n      }\r\n\r\n      if (g1 > 0 && len > 0) {\r\n        i = len % g1 || g1;\r\n        intPart = intDigits.substr(0, i);\r\n        for (; i < len; i += g1) intPart += groupSeparator + intDigits.substr(i, g1);\r\n        if (g2 > 0) intPart += groupSeparator + intDigits.slice(i);\r\n        if (isNeg) intPart = '-' + intPart;\r\n      }\r\n\r\n      str = fractionPart\r\n       ? intPart + (format.decimalSeparator || '') + ((g2 = +format.fractionGroupSize)\r\n        ? fractionPart.replace(new RegExp('\\\\d{' + g2 + '}\\\\B', 'g'),\r\n         '$&' + (format.fractionGroupSeparator || ''))\r\n        : fractionPart)\r\n       : intPart;\r\n    }\r\n\r\n    return (format.prefix || '') + str + (format.suffix || '');\r\n  };\r\n\r\n\r\n  /*\r\n   * Return an array of two BigNumbers representing the value of this BigNumber as a simple\r\n   * fraction with an integer numerator and an integer denominator.\r\n   * The denominator will be a positive non-zero value less than or equal to the specified\r\n   * maximum denominator. If a maximum denominator is not specified, the denominator will be\r\n   * the lowest value necessary to represent the number exactly.\r\n   *\r\n   * [md] {number|string|BigNumber} Integer >= 1, or Infinity. The maximum denominator.\r\n   *\r\n   * '[BigNumber Error] Argument {not an integer|out of range} : {md}'\r\n   */\r\n  P.toFraction = function (md) {\r\n    var d, d0, d1, d2, e, exp, n, n0, n1, q, r, s,\r\n      x = this,\r\n      xc = x.c;\r\n\r\n    if (md != null) {\r\n      n = new BigNumber(md);\r\n\r\n      // Throw if md is less than one or is not an integer, unless it is Infinity.\r\n      if (!n.isInteger() && (n.c || n.s !== 1) || n.lt(ONE)) {\r\n        throw Error\r\n          (bignumberError + 'Argument ' +\r\n            (n.isInteger() ? 'out of range: ' : 'not an integer: ') + valueOf(n));\r\n      }\r\n    }\r\n\r\n    if (!xc) return new BigNumber(x);\r\n\r\n    d = new BigNumber(ONE);\r\n    n1 = d0 = new BigNumber(ONE);\r\n    d1 = n0 = new BigNumber(ONE);\r\n    s = coeffToString(xc);\r\n\r\n    // Determine initial denominator.\r\n    // d is a power of 10 and the minimum max denominator that specifies the value exactly.\r\n    e = d.e = s.length - x.e - 1;\r\n    d.c[0] = POWS_TEN[(exp = e % LOG_BASE) < 0 ? LOG_BASE + exp : exp];\r\n    md = !md || n.comparedTo(d) > 0 ? (e > 0 ? d : n1) : n;\r\n\r\n    exp = MAX_EXP;\r\n    MAX_EXP = 1 / 0;\r\n    n = new BigNumber(s);\r\n\r\n    // n0 = d1 = 0\r\n    n0.c[0] = 0;\r\n\r\n    for (; ;)  {\r\n      q = div(n, d, 0, 1);\r\n      d2 = d0.plus(q.times(d1));\r\n      if (d2.comparedTo(md) == 1) break;\r\n      d0 = d1;\r\n      d1 = d2;\r\n      n1 = n0.plus(q.times(d2 = n1));\r\n      n0 = d2;\r\n      d = n.minus(q.times(d2 = d));\r\n      n = d2;\r\n    }\r\n\r\n    d2 = div(md.minus(d0), d1, 0, 1);\r\n    n0 = n0.plus(d2.times(n1));\r\n    d0 = d0.plus(d2.times(d1));\r\n    n0.s = n1.s = x.s;\r\n    e = e * 2;\r\n\r\n    // Determine which fraction is closer to x, n0/d0 or n1/d1\r\n    r = div(n1, d1, e, ROUNDING_MODE).minus(x).abs().comparedTo(\r\n        div(n0, d0, e, ROUNDING_MODE).minus(x).abs()) < 1 ? [n1, d1] : [n0, d0];\r\n\r\n    MAX_EXP = exp;\r\n\r\n    return r;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the value of this BigNumber converted to a number primitive.\r\n   */\r\n  P.toNumber = function () {\r\n    return +valueOf(this);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber rounded to sd significant digits\r\n   * using rounding mode rm or ROUNDING_MODE. If sd is less than the number of digits\r\n   * necessary to represent the integer part of the value in fixed-point notation, then use\r\n   * exponential notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n   */\r\n  P.toPrecision = function (sd, rm) {\r\n    if (sd != null) intCheck(sd, 1, MAX);\r\n    return format(this, sd, rm, 2);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber in base b, or base 10 if b is\r\n   * omitted. If a base is specified, including base 10, round according to DECIMAL_PLACES and\r\n   * ROUNDING_MODE. If a base is not specified, and this BigNumber has a positive exponent\r\n   * that is equal to or greater than TO_EXP_POS, or a negative exponent equal to or less than\r\n   * TO_EXP_NEG, return exponential notation.\r\n   *\r\n   * [b] {number} Integer, 2 to ALPHABET.length inclusive.\r\n   *\r\n   * '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n   */\r\n  P.toString = function (b) {\r\n    var str,\r\n      n = this,\r\n      s = n.s,\r\n      e = n.e;\r\n\r\n    // Infinity or NaN?\r\n    if (e === null) {\r\n      if (s) {\r\n        str = 'Infinity';\r\n        if (s < 0) str = '-' + str;\r\n      } else {\r\n        str = 'NaN';\r\n      }\r\n    } else {\r\n      if (b == null) {\r\n        str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n         ? toExponential(coeffToString(n.c), e)\r\n         : toFixedPoint(coeffToString(n.c), e, '0');\r\n      } else if (b === 10 && alphabetHasNormalDecimalDigits) {\r\n        n = round(new BigNumber(n), DECIMAL_PLACES + e + 1, ROUNDING_MODE);\r\n        str = toFixedPoint(coeffToString(n.c), n.e, '0');\r\n      } else {\r\n        intCheck(b, 2, ALPHABET.length, 'Base');\r\n        str = convertBase(toFixedPoint(coeffToString(n.c), e, '0'), 10, b, s, true);\r\n      }\r\n\r\n      if (s < 0 && n.c[0]) str = '-' + str;\r\n    }\r\n\r\n    return str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return as toString, but do not accept a base argument, and include the minus sign for\r\n   * negative zero.\r\n   */\r\n  P.valueOf = P.toJSON = function () {\r\n    return valueOf(this);\r\n  };\r\n\r\n\r\n  P._isBigNumber = true;\r\n\r\n  P[Symbol.toStringTag] = 'BigNumber';\r\n\r\n  // Node.js v10.12.0+\r\n  P[Symbol.for('nodejs.util.inspect.custom')] = P.valueOf;\r\n\r\n  if (configObject != null) BigNumber.set(configObject);\r\n\r\n  return BigNumber;\r\n}\r\n\r\n\r\n// PRIVATE HELPER FUNCTIONS\r\n\r\n// These functions don't need access to variables,\r\n// e.g. DECIMAL_PLACES, in the scope of the `clone` function above.\r\n\r\n\r\nfunction bitFloor(n) {\r\n  var i = n | 0;\r\n  return n > 0 || n === i ? i : i - 1;\r\n}\r\n\r\n\r\n// Return a coefficient array as a string of base 10 digits.\r\nfunction coeffToString(a) {\r\n  var s, z,\r\n    i = 1,\r\n    j = a.length,\r\n    r = a[0] + '';\r\n\r\n  for (; i < j;) {\r\n    s = a[i++] + '';\r\n    z = LOG_BASE - s.length;\r\n    for (; z--; s = '0' + s);\r\n    r += s;\r\n  }\r\n\r\n  // Determine trailing zeros.\r\n  for (j = r.length; r.charCodeAt(--j) === 48;);\r\n\r\n  return r.slice(0, j + 1 || 1);\r\n}\r\n\r\n\r\n// Compare the value of BigNumbers x and y.\r\nfunction compare(x, y) {\r\n  var a, b,\r\n    xc = x.c,\r\n    yc = y.c,\r\n    i = x.s,\r\n    j = y.s,\r\n    k = x.e,\r\n    l = y.e;\r\n\r\n  // Either NaN?\r\n  if (!i || !j) return null;\r\n\r\n  a = xc && !xc[0];\r\n  b = yc && !yc[0];\r\n\r\n  // Either zero?\r\n  if (a || b) return a ? b ? 0 : -j : i;\r\n\r\n  // Signs differ?\r\n  if (i != j) return i;\r\n\r\n  a = i < 0;\r\n  b = k == l;\r\n\r\n  // Either Infinity?\r\n  if (!xc || !yc) return b ? 0 : !xc ^ a ? 1 : -1;\r\n\r\n  // Compare exponents.\r\n  if (!b) return k > l ^ a ? 1 : -1;\r\n\r\n  j = (k = xc.length) < (l = yc.length) ? k : l;\r\n\r\n  // Compare digit by digit.\r\n  for (i = 0; i < j; i++) if (xc[i] != yc[i]) return xc[i] > yc[i] ^ a ? 1 : -1;\r\n\r\n  // Compare lengths.\r\n  return k == l ? 0 : k > l ^ a ? 1 : -1;\r\n}\r\n\r\n\r\n/*\r\n * Check that n is a primitive number, an integer, and in range, otherwise throw.\r\n */\r\nfunction intCheck(n, min, max, name) {\r\n  if (n < min || n > max || n !== mathfloor(n)) {\r\n    throw Error\r\n     (bignumberError + (name || 'Argument') + (typeof n == 'number'\r\n       ? n < min || n > max ? ' out of range: ' : ' not an integer: '\r\n       : ' not a primitive number: ') + String(n));\r\n  }\r\n}\r\n\r\n\r\n// Assumes finite n.\r\nfunction isOdd(n) {\r\n  var k = n.c.length - 1;\r\n  return bitFloor(n.e / LOG_BASE) == k && n.c[k] % 2 != 0;\r\n}\r\n\r\n\r\nfunction toExponential(str, e) {\r\n  return (str.length > 1 ? str.charAt(0) + '.' + str.slice(1) : str) +\r\n   (e < 0 ? 'e' : 'e+') + e;\r\n}\r\n\r\n\r\nfunction toFixedPoint(str, e, z) {\r\n  var len, zs;\r\n\r\n  // Negative exponent?\r\n  if (e < 0) {\r\n\r\n    // Prepend zeros.\r\n    for (zs = z + '.'; ++e; zs += z);\r\n    str = zs + str;\r\n\r\n  // Positive exponent\r\n  } else {\r\n    len = str.length;\r\n\r\n    // Append zeros.\r\n    if (++e > len) {\r\n      for (zs = z, e -= len; --e; zs += z);\r\n      str += zs;\r\n    } else if (e < len) {\r\n      str = str.slice(0, e) + '.' + str.slice(e);\r\n    }\r\n  }\r\n\r\n  return str;\r\n}\r\n\r\n\r\n// EXPORT\r\n\r\n\r\nvar BigNumber = clone();\n\nfunction weiToEth(wei) {\n    return new BigNumber(wei).div(1e18).toString(10);\n}\n\n/* src/elements/AddressTable.svelte generated by Svelte v3.59.2 */\n\nfunction add_css$5(target) {\n\tappend_styles(target, \"svelte-1u0a3bu\", \"table.svelte-1u0a3bu.svelte-1u0a3bu{border-spacing:0px}table.svelte-1u0a3bu thead.svelte-1u0a3bu{box-shadow:0px 1px 0px rgba(0, 0, 0, 0.1);background:var(--account-select-background-color, var(--foreground-color))}th.svelte-1u0a3bu.svelte-1u0a3bu,td.svelte-1u0a3bu.svelte-1u0a3bu{text-align:left;padding:0.4rem 0.5rem}td.svelte-1u0a3bu.svelte-1u0a3bu{font-size:var(\\n      --account-select-font-size-6,\\n      var(--onboard-font-size-6, var(--font-size-6))\\n    );line-height:var(\\n      --account-select-font-line-height-1,\\n      var(--onboard-font-line-height-1, var(--font-line-height-1))\\n    )}tbody.svelte-1u0a3bu tr.svelte-1u0a3bu{box-shadow:0px 1px 0px rgba(0, 0, 0, 0.1)}tbody.svelte-1u0a3bu tr.svelte-1u0a3bu:hover{background:var(\\n      --account-select-primary-100,\\n      var(--onboard-primary-100, var(--primary-100))\\n    );color:var(--account-select-text-color, var(--onboard-black, var(--black)))}.address-table.svelte-1u0a3bu.svelte-1u0a3bu{min-height:4.5rem;max-height:14rem;overflow:auto}.selected-row.svelte-1u0a3bu.svelte-1u0a3bu,.selected-row.svelte-1u0a3bu.svelte-1u0a3bu:hover{background:var(\\n      --account-select-primary-500,\\n      var(--onboard-primary-500, var(--primary-500))\\n    );color:var(\\n      --account-select-primary-100,\\n      var(--onboard-primary-100, var(--primary-100))\\n    )}.asset-td.svelte-1u0a3bu.svelte-1u0a3bu{font-weight:bold}.w-100.svelte-1u0a3bu.svelte-1u0a3bu{width:100%}.pointer.svelte-1u0a3bu.svelte-1u0a3bu{cursor:pointer}@media all and (min-width: 768px){.address-table.svelte-1u0a3bu.svelte-1u0a3bu{max-height:27rem}td.svelte-1u0a3bu.svelte-1u0a3bu{font-size:var(\\n        --account-select-font-size-5,\\n        var(--onboard-font-size-5, var(--font-size-5))\\n      )}th.svelte-1u0a3bu.svelte-1u0a3bu,td.svelte-1u0a3bu.svelte-1u0a3bu{padding:0.5rem 0.5rem}}\");\n}\n\nfunction get_each_context$1(ctx, list, i) {\n\tconst child_ctx = ctx.slice();\n\tchild_ctx[6] = list[i];\n\treturn child_ctx;\n}\n\n// (115:6) {#if accounts && accounts.length}\nfunction create_if_block$4(ctx) {\n\tlet each_1_anchor;\n\tlet each_value = /*accounts*/ ctx[1];\n\tlet each_blocks = [];\n\n\tfor (let i = 0; i < each_value.length; i += 1) {\n\t\teach_blocks[i] = create_each_block$1(get_each_context$1(ctx, each_value, i));\n\t}\n\n\treturn {\n\t\tc() {\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\teach_blocks[i].c();\n\t\t\t}\n\n\t\t\teach_1_anchor = empty();\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\tif (each_blocks[i]) {\n\t\t\t\t\teach_blocks[i].m(target, anchor);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tinsert(target, each_1_anchor, anchor);\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tif (dirty & /*accountSelected, accounts, handleSelectedRow, weiToEth*/ 7) {\n\t\t\t\teach_value = /*accounts*/ ctx[1];\n\t\t\t\tlet i;\n\n\t\t\t\tfor (i = 0; i < each_value.length; i += 1) {\n\t\t\t\t\tconst child_ctx = get_each_context$1(ctx, each_value, i);\n\n\t\t\t\t\tif (each_blocks[i]) {\n\t\t\t\t\t\teach_blocks[i].p(child_ctx, dirty);\n\t\t\t\t\t} else {\n\t\t\t\t\t\teach_blocks[i] = create_each_block$1(child_ctx);\n\t\t\t\t\t\teach_blocks[i].c();\n\t\t\t\t\t\teach_blocks[i].m(each_1_anchor.parentNode, each_1_anchor);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfor (; i < each_blocks.length; i += 1) {\n\t\t\t\t\teach_blocks[i].d(1);\n\t\t\t\t}\n\n\t\t\t\teach_blocks.length = each_value.length;\n\t\t\t}\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_each(each_blocks, detaching);\n\t\t\tif (detaching) detach(each_1_anchor);\n\t\t}\n\t};\n}\n\n// (116:8) {#each accounts as account}\nfunction create_each_block$1(ctx) {\n\tlet tr;\n\tlet td0;\n\tlet t0_value = /*account*/ ctx[6].address + \"\";\n\tlet t0;\n\tlet t1;\n\tlet td1;\n\tlet t2_value = /*account*/ ctx[6].derivationPath + \"\";\n\tlet t2;\n\tlet t3;\n\tlet td2;\n\tlet t4_value = weiToEth(/*account*/ ctx[6].balance.value.toString()) + \"\";\n\tlet t4;\n\tlet t5;\n\tlet t6_value = /*account*/ ctx[6].balance.asset + \"\";\n\tlet t6;\n\tlet t7;\n\tlet mounted;\n\tlet dispose;\n\n\tfunction click_handler() {\n\t\treturn /*click_handler*/ ctx[5](/*account*/ ctx[6]);\n\t}\n\n\treturn {\n\t\tc() {\n\t\t\ttr = element(\"tr\");\n\t\t\ttd0 = element(\"td\");\n\t\t\tt0 = text(t0_value);\n\t\t\tt1 = space();\n\t\t\ttd1 = element(\"td\");\n\t\t\tt2 = text(t2_value);\n\t\t\tt3 = space();\n\t\t\ttd2 = element(\"td\");\n\t\t\tt4 = text(t4_value);\n\t\t\tt5 = space();\n\t\t\tt6 = text(t6_value);\n\t\t\tt7 = space();\n\t\t\tset_style(td0, \"font-family\", \"'Courier New', Courier, monospace\");\n\t\t\tattr(td0, \"class\", \"svelte-1u0a3bu\");\n\t\t\tattr(td1, \"class\", \"svelte-1u0a3bu\");\n\t\t\tattr(td2, \"class\", \"asset-td svelte-1u0a3bu\");\n\t\t\tattr(tr, \"class\", \"pointer svelte-1u0a3bu\");\n\t\t\ttoggle_class(tr, \"selected-row\", /*accountSelected*/ ctx[0] && /*accountSelected*/ ctx[0].address === /*account*/ ctx[6].address);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, tr, anchor);\n\t\t\tappend(tr, td0);\n\t\t\tappend(td0, t0);\n\t\t\tappend(tr, t1);\n\t\t\tappend(tr, td1);\n\t\t\tappend(td1, t2);\n\t\t\tappend(tr, t3);\n\t\t\tappend(tr, td2);\n\t\t\tappend(td2, t4);\n\t\t\tappend(td2, t5);\n\t\t\tappend(td2, t6);\n\t\t\tappend(tr, t7);\n\n\t\t\tif (!mounted) {\n\t\t\t\tdispose = listen(tr, \"click\", click_handler);\n\t\t\t\tmounted = true;\n\t\t\t}\n\t\t},\n\t\tp(new_ctx, dirty) {\n\t\t\tctx = new_ctx;\n\t\t\tif (dirty & /*accounts*/ 2 && t0_value !== (t0_value = /*account*/ ctx[6].address + \"\")) set_data(t0, t0_value);\n\t\t\tif (dirty & /*accounts*/ 2 && t2_value !== (t2_value = /*account*/ ctx[6].derivationPath + \"\")) set_data(t2, t2_value);\n\t\t\tif (dirty & /*accounts*/ 2 && t4_value !== (t4_value = weiToEth(/*account*/ ctx[6].balance.value.toString()) + \"\")) set_data(t4, t4_value);\n\t\t\tif (dirty & /*accounts*/ 2 && t6_value !== (t6_value = /*account*/ ctx[6].balance.asset + \"\")) set_data(t6, t6_value);\n\n\t\t\tif (dirty & /*accountSelected, accounts*/ 3) {\n\t\t\t\ttoggle_class(tr, \"selected-row\", /*accountSelected*/ ctx[0] && /*accountSelected*/ ctx[0].address === /*account*/ ctx[6].address);\n\t\t\t}\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(tr);\n\t\t\tmounted = false;\n\t\t\tdispose();\n\t\t}\n\t};\n}\n\nfunction create_fragment$5(ctx) {\n\tlet div;\n\tlet table;\n\tlet colgroup;\n\tlet t2;\n\tlet thead;\n\tlet t8;\n\tlet tbody;\n\tlet if_block = /*accounts*/ ctx[1] && /*accounts*/ ctx[1].length && create_if_block$4(ctx);\n\n\treturn {\n\t\tc() {\n\t\t\tdiv = element(\"div\");\n\t\t\ttable = element(\"table\");\n\t\t\tcolgroup = element(\"colgroup\");\n\n\t\t\tcolgroup.innerHTML = `<col style=\"width: 50%;\"/> \n      <col style=\"width: 28%;\"/> \n      <col style=\"width: 22%;\"/>`;\n\n\t\t\tt2 = space();\n\t\t\tthead = element(\"thead\");\n\n\t\t\tthead.innerHTML = `<tr><th class=\"svelte-1u0a3bu\">Address</th> \n        <th class=\"svelte-1u0a3bu\">DPATH</th> \n        <th class=\"svelte-1u0a3bu\">Asset</th></tr>`;\n\n\t\t\tt8 = space();\n\t\t\ttbody = element(\"tbody\");\n\t\t\tif (if_block) if_block.c();\n\t\t\tattr(thead, \"class\", \" svelte-1u0a3bu\");\n\t\t\tattr(tbody, \"class\", \"svelte-1u0a3bu\");\n\t\t\tattr(table, \"class\", \"w-100 svelte-1u0a3bu\");\n\t\t\tattr(div, \"class\", \"address-table svelte-1u0a3bu\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, div, anchor);\n\t\t\tappend(div, table);\n\t\t\tappend(table, colgroup);\n\t\t\tappend(table, t2);\n\t\t\tappend(table, thead);\n\t\t\tappend(table, t8);\n\t\t\tappend(table, tbody);\n\t\t\tif (if_block) if_block.m(tbody, null);\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tif (/*accounts*/ ctx[1] && /*accounts*/ ctx[1].length) {\n\t\t\t\tif (if_block) {\n\t\t\t\t\tif_block.p(ctx, dirty);\n\t\t\t\t} else {\n\t\t\t\t\tif_block = create_if_block$4(ctx);\n\t\t\t\t\tif_block.c();\n\t\t\t\t\tif_block.m(tbody, null);\n\t\t\t\t}\n\t\t\t} else if (if_block) {\n\t\t\t\tif_block.d(1);\n\t\t\t\tif_block = null;\n\t\t\t}\n\t\t},\n\t\ti: noop,\n\t\to: noop,\n\t\td(detaching) {\n\t\t\tif (detaching) detach(div);\n\t\t\tif (if_block) if_block.d();\n\t\t}\n\t};\n}\n\nfunction instance$5($$self, $$props, $$invalidate) {\n\tlet accounts;\n\tlet { accountsListObject } = $$props;\n\tlet { accountSelected = undefined } = $$props;\n\tlet { showEmptyAddresses } = $$props;\n\n\tconst handleSelectedRow = accountClicked => {\n\t\t$$invalidate(0, accountSelected = accountClicked);\n\t};\n\n\tconst click_handler = account => handleSelectedRow(account);\n\n\t$$self.$$set = $$props => {\n\t\tif ('accountsListObject' in $$props) $$invalidate(3, accountsListObject = $$props.accountsListObject);\n\t\tif ('accountSelected' in $$props) $$invalidate(0, accountSelected = $$props.accountSelected);\n\t\tif ('showEmptyAddresses' in $$props) $$invalidate(4, showEmptyAddresses = $$props.showEmptyAddresses);\n\t};\n\n\t$$self.$$.update = () => {\n\t\tif ($$self.$$.dirty & /*showEmptyAddresses, accountsListObject*/ 24) {\n\t\t\t$$invalidate(1, accounts = showEmptyAddresses\n\t\t\t? accountsListObject && accountsListObject.all\n\t\t\t: accountsListObject && accountsListObject.filtered);\n\t\t}\n\t};\n\n\treturn [\n\t\taccountSelected,\n\t\taccounts,\n\t\thandleSelectedRow,\n\t\taccountsListObject,\n\t\tshowEmptyAddresses,\n\t\tclick_handler\n\t];\n}\n\nclass AddressTable extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\n\t\tinit(\n\t\t\tthis,\n\t\t\toptions,\n\t\t\tinstance$5,\n\t\t\tcreate_fragment$5,\n\t\t\tsafe_not_equal,\n\t\t\t{\n\t\t\t\taccountsListObject: 3,\n\t\t\t\taccountSelected: 0,\n\t\t\t\tshowEmptyAddresses: 4\n\t\t\t},\n\t\t\tadd_css$5\n\t\t);\n\t}\n}\n\n/* src/elements/Spinner.svelte generated by Svelte v3.59.2 */\n\nfunction add_css$4(target) {\n\tappend_styles(target, \"svelte-14p0oc3\", \".loading-container.svelte-14p0oc3.svelte-14p0oc3{display:flex;flex-direction:column;align-items:center;justify-content:center;font-family:inherit;font-size:inherit;color:inherit;margin-left:auto}span.svelte-14p0oc3.svelte-14p0oc3{font-family:inherit;font-size:0.889em;margin-top:1rem}.loading.svelte-14p0oc3.svelte-14p0oc3{display:inline-block;position:relative}.loading.svelte-14p0oc3 div.svelte-14p0oc3{box-sizing:border-box;font-size:inherit;display:block;position:absolute;border:3px solid;border-radius:50%;animation:svelte-14p0oc3-bn-loading 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;border-color:currentColor transparent transparent transparent}.loading.svelte-14p0oc3 .loading-first.svelte-14p0oc3{animation-delay:-0.45s}.loading.svelte-14p0oc3 .loading-second.svelte-14p0oc3{animation-delay:-0.3s}.loading.svelte-14p0oc3 .loading-third.svelte-14p0oc3{animation-delay:-0.15s}@keyframes svelte-14p0oc3-bn-loading{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}\");\n}\n\n// (68:2) {#if description}\nfunction create_if_block$3(ctx) {\n\tlet span;\n\tlet t;\n\n\treturn {\n\t\tc() {\n\t\t\tspan = element(\"span\");\n\t\t\tt = text(/*description*/ ctx[0]);\n\t\t\tattr(span, \"class\", \"svelte-14p0oc3\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, span, anchor);\n\t\t\tappend(span, t);\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tif (dirty & /*description*/ 1) set_data(t, /*description*/ ctx[0]);\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(span);\n\t\t}\n\t};\n}\n\nfunction create_fragment$4(ctx) {\n\tlet div4;\n\tlet div3;\n\tlet div0;\n\tlet div0_style_value;\n\tlet t0;\n\tlet div1;\n\tlet div1_style_value;\n\tlet t1;\n\tlet div2;\n\tlet div2_style_value;\n\tlet div3_style_value;\n\tlet t2;\n\tlet if_block = /*description*/ ctx[0] && create_if_block$3(ctx);\n\n\treturn {\n\t\tc() {\n\t\t\tdiv4 = element(\"div\");\n\t\t\tdiv3 = element(\"div\");\n\t\t\tdiv0 = element(\"div\");\n\t\t\tt0 = space();\n\t\t\tdiv1 = element(\"div\");\n\t\t\tt1 = space();\n\t\t\tdiv2 = element(\"div\");\n\t\t\tt2 = space();\n\t\t\tif (if_block) if_block.c();\n\t\t\tattr(div0, \"class\", \"loading-first svelte-14p0oc3\");\n\t\t\tattr(div0, \"style\", div0_style_value = `height: ${/*size*/ ctx[1]}; width: ${/*size*/ ctx[1]};`);\n\t\t\tattr(div1, \"class\", \"loading-second svelte-14p0oc3\");\n\t\t\tattr(div1, \"style\", div1_style_value = `height: ${/*size*/ ctx[1]}; width: ${/*size*/ ctx[1]};`);\n\t\t\tattr(div2, \"class\", \"loading-third svelte-14p0oc3\");\n\t\t\tattr(div2, \"style\", div2_style_value = `height: ${/*size*/ ctx[1]}; width: ${/*size*/ ctx[1]};`);\n\t\t\tattr(div3, \"class\", \"loading svelte-14p0oc3\");\n\t\t\tattr(div3, \"style\", div3_style_value = `height: ${/*size*/ ctx[1]}; width: ${/*size*/ ctx[1]};`);\n\t\t\tattr(div4, \"class\", \"loading-container svelte-14p0oc3\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, div4, anchor);\n\t\t\tappend(div4, div3);\n\t\t\tappend(div3, div0);\n\t\t\tappend(div3, t0);\n\t\t\tappend(div3, div1);\n\t\t\tappend(div3, t1);\n\t\t\tappend(div3, div2);\n\t\t\tappend(div4, t2);\n\t\t\tif (if_block) if_block.m(div4, null);\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tif (dirty & /*size*/ 2 && div0_style_value !== (div0_style_value = `height: ${/*size*/ ctx[1]}; width: ${/*size*/ ctx[1]};`)) {\n\t\t\t\tattr(div0, \"style\", div0_style_value);\n\t\t\t}\n\n\t\t\tif (dirty & /*size*/ 2 && div1_style_value !== (div1_style_value = `height: ${/*size*/ ctx[1]}; width: ${/*size*/ ctx[1]};`)) {\n\t\t\t\tattr(div1, \"style\", div1_style_value);\n\t\t\t}\n\n\t\t\tif (dirty & /*size*/ 2 && div2_style_value !== (div2_style_value = `height: ${/*size*/ ctx[1]}; width: ${/*size*/ ctx[1]};`)) {\n\t\t\t\tattr(div2, \"style\", div2_style_value);\n\t\t\t}\n\n\t\t\tif (dirty & /*size*/ 2 && div3_style_value !== (div3_style_value = `height: ${/*size*/ ctx[1]}; width: ${/*size*/ ctx[1]};`)) {\n\t\t\t\tattr(div3, \"style\", div3_style_value);\n\t\t\t}\n\n\t\t\tif (/*description*/ ctx[0]) {\n\t\t\t\tif (if_block) {\n\t\t\t\t\tif_block.p(ctx, dirty);\n\t\t\t\t} else {\n\t\t\t\t\tif_block = create_if_block$3(ctx);\n\t\t\t\t\tif_block.c();\n\t\t\t\t\tif_block.m(div4, null);\n\t\t\t\t}\n\t\t\t} else if (if_block) {\n\t\t\t\tif_block.d(1);\n\t\t\t\tif_block = null;\n\t\t\t}\n\t\t},\n\t\ti: noop,\n\t\to: noop,\n\t\td(detaching) {\n\t\t\tif (detaching) detach(div4);\n\t\t\tif (if_block) if_block.d();\n\t\t}\n\t};\n}\n\nfunction instance$4($$self, $$props, $$invalidate) {\n\tlet { description = '' } = $$props;\n\tlet { size = '2rem' } = $$props;\n\n\t$$self.$$set = $$props => {\n\t\tif ('description' in $$props) $$invalidate(0, description = $$props.description);\n\t\tif ('size' in $$props) $$invalidate(1, size = $$props.size);\n\t};\n\n\treturn [description, size];\n}\n\nclass Spinner extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, instance$4, create_fragment$4, safe_not_equal, { description: 0, size: 1 }, add_css$4);\n\t}\n}\n\n/* src/elements/TableHeader.svelte generated by Svelte v3.59.2 */\n\nfunction add_css$3(target) {\n\tappend_styles(target, \"svelte-1t799sf\", \"button.svelte-1t799sf{align-items:center;padding:0.5rem 0.5rem;color:var(--account-select-white, var(--onboard-white, var(--white)));border-radius:1.5rem;font-family:var(\\n      --account-select-font-family-normal,\\n      var(--font-family-normal, var(--font-family-normal))\\n    );font-style:normal;font-weight:bold;font-size:var(\\n      --account-select-font-size-6,\\n      var(--onboard-font-size-6, var(--font-size-6))\\n    );line-height:var(\\n      --account-select-font-line-height-1,\\n      var(--onboard-line-height-1, var(--line-height-1))\\n    );border:none;width:8rem}.scan-accounts-btn.svelte-1t799sf{background:var(--account-select-gray-500, var(--action-color));color:var(--account-select-primary-100, inherit);display:flex;justify-content:center;align-items:center;cursor:pointer}input.svelte-1t799sf:hover{border-color:var(\\n      --account-select-primary-500,\\n      var(--onboard-primary-300, var(--primary-300))\\n    )}input.svelte-1t799sf:focus{border-color:var(\\n      --account-select-primary-500,\\n      var(--onboard-primary-500, var(--primary-500))\\n    );box-shadow:0 0 1px 1px\\n      var(\\n        --account-select-primary-500,\\n        var(--onboard-primary-500, var(--primary-500))\\n      );box-shadow:0 0 0 1px -moz-mac-focusring;outline:none}input.svelte-1t799sf:disabled{background:var(\\n      --account-select-accent-background-color,\\n      var(--onboard-gray-100, var(--gray-100))\\n    )}input[type='checkbox'].svelte-1t799sf{-webkit-appearance:none;width:auto;background:var(--account-select-background-color, var(--onboard-white, var(--white)));border:1px solid\\n      var(--account-select-gray-300, var(--onboard-gray-300, var(--gray-300)));padding:0.5em;border-radius:3px;display:flex;justify-content:center;align-items:center;position:relative;cursor:pointer;height:0.5rem;width:0.5rem}input[type='checkbox'].svelte-1t799sf:hover{border-color:var(\\n      --account-select-primary-500,\\n      var(--onboard-primary-500, var(--primary-500))\\n    )}input[type='checkbox'].svelte-1t799sf:checked{background:var(\\n      --account-select-primary-500,\\n      var(--onboard-primary-500, var(--primary-500))\\n    );border-color:var(\\n      --account-select-primary-500,\\n      var(--onboard-primary-500, var(--primary-500))\\n    );color:var(--account-select-white, var(--onboard-white, var(--white)))}input[type='checkbox'].svelte-1t799sf:checked:after{content:url(\\\"data:image/svg+xml,%3Csvg width='0.885em' height='0.6em' viewBox='0 0 14 11' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath fill-rule='evenodd' clip-rule='evenodd' d='M0 6L5 11L14 2L12.59 0.58L5 8.17L1.41 4.59L0 6Z' fill='white'/%3E%3C/svg%3E\\\");font-size:var(\\n      --account-select-font-size-7,\\n      var(--onboard-font-size-7, var(--font-size-7))\\n    );position:absolute;color:var(--account-select-white, var(--onboard-white, var(--white)))}.checkbox-container.svelte-1t799sf{display:flex;align-items:center;position:absolute;top:238px;left:14px;font-size:14px}.checkbox-input.svelte-1t799sf{margin-right:0.5rem}.error-msg.svelte-1t799sf{color:var(\\n      --account-select-danger-500,\\n      var(--onboard-danger-500, var(--danger-500))\\n    );font-size:var(--account-select-font-size-7, var(--font-size-7));max-width:15rem;line-height:1;position:absolute;top:260px;left:18px}.table-controls.svelte-1t799sf{display:flex;flex-direction:row;justify-content:center;align-items:center;padding:0.5rem;border-radius:0.4rem 0.4rem 0 0;background:var(--account-select-accent-background-color, var(--border-color))}.cursor-pointer.svelte-1t799sf{cursor:pointer}@media all and (min-width: 768px){.checkbox-container.svelte-1t799sf{display:flex;align-items:center;position:unset;top:unset;left:unset;font-size:unset}.checkbox-input.svelte-1t799sf{margin-right:0.75rem}.error-msg.svelte-1t799sf{position:unset;top:unset;left:unset}.table-controls.svelte-1t799sf{height:3.5rem;justify-content:space-between}input[type='checkbox'].svelte-1t799sf{height:1.5rem;width:1.5rem}button.svelte-1t799sf{padding:0.75rem 1.5rem;font-size:var(\\n        --account-select-font-size-5,\\n        var(--onboard-font-size-5, var(--font-size-5))\\n      );width:unset}}@media all and (max-width: 326px){.checkbox-container.svelte-1t799sf{top:328px}.error-msg.svelte-1t799sf{top:350px}}\");\n}\n\n// (218:2) {#if errorFromScan}\nfunction create_if_block_2$1(ctx) {\n\tlet span;\n\tlet t;\n\n\treturn {\n\t\tc() {\n\t\t\tspan = element(\"span\");\n\t\t\tt = text(/*errorFromScan*/ ctx[3]);\n\t\t\tattr(span, \"class\", \"error-msg svelte-1t799sf\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, span, anchor);\n\t\t\tappend(span, t);\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tif (dirty & /*errorFromScan*/ 8) set_data(t, /*errorFromScan*/ ctx[3]);\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(span);\n\t\t}\n\t};\n}\n\n// (226:4) {#if loadingAccounts}\nfunction create_if_block_1$1(ctx) {\n\tlet t;\n\tlet spinner;\n\tlet current;\n\tspinner = new Spinner({ props: { size: \"1.5rem\" } });\n\n\treturn {\n\t\tc() {\n\t\t\tt = text(\"Scanning...\\n      \");\n\t\t\tcreate_component(spinner.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, t, anchor);\n\t\t\tmount_component(spinner, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(spinner.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(spinner.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(t);\n\t\t\tdestroy_component(spinner, detaching);\n\t\t}\n\t};\n}\n\n// (230:4) {#if !loadingAccounts}\nfunction create_if_block$2(ctx) {\n\tlet t;\n\n\treturn {\n\t\tc() {\n\t\t\tt = text(\"Scan Accounts\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, t, anchor);\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(t);\n\t\t}\n\t};\n}\n\nfunction create_fragment$3(ctx) {\n\tlet div1;\n\tlet div0;\n\tlet input;\n\tlet t0;\n\tlet label;\n\tlet t2;\n\tlet t3;\n\tlet button;\n\tlet t4;\n\tlet current;\n\tlet mounted;\n\tlet dispose;\n\tlet if_block0 = /*errorFromScan*/ ctx[3] && create_if_block_2$1(ctx);\n\tlet if_block1 = /*loadingAccounts*/ ctx[2] && create_if_block_1$1();\n\tlet if_block2 = !/*loadingAccounts*/ ctx[2] && create_if_block$2();\n\n\treturn {\n\t\tc() {\n\t\t\tdiv1 = element(\"div\");\n\t\t\tdiv0 = element(\"div\");\n\t\t\tinput = element(\"input\");\n\t\t\tt0 = space();\n\t\t\tlabel = element(\"label\");\n\t\t\tlabel.textContent = \"Show Empty Addresses\";\n\t\t\tt2 = space();\n\t\t\tif (if_block0) if_block0.c();\n\t\t\tt3 = space();\n\t\t\tbutton = element(\"button\");\n\t\t\tif (if_block1) if_block1.c();\n\t\t\tt4 = space();\n\t\t\tif (if_block2) if_block2.c();\n\t\t\tattr(input, \"id\", \"show-empty-addresses\");\n\t\t\tattr(input, \"type\", \"checkbox\");\n\t\t\tattr(input, \"class\", \"checkbox-input svelte-1t799sf\");\n\t\t\tattr(label, \"for\", \"show-empty-addresses\");\n\t\t\tattr(label, \"class\", \"ml2 cursor-pointer font-5 svelte-1t799sf\");\n\t\t\tattr(div0, \"class\", \"checkbox-container svelte-1t799sf\");\n\t\t\tattr(button, \"class\", \"scan-accounts-btn svelte-1t799sf\");\n\t\t\tattr(button, \"id\", \"scan-accounts\");\n\t\t\tattr(div1, \"class\", \"table-controls svelte-1t799sf\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, div1, anchor);\n\t\t\tappend(div1, div0);\n\t\t\tappend(div0, input);\n\t\t\tinput.checked = /*showEmptyAddresses*/ ctx[0];\n\t\t\tappend(div0, t0);\n\t\t\tappend(div0, label);\n\t\t\tappend(div1, t2);\n\t\t\tif (if_block0) if_block0.m(div1, null);\n\t\t\tappend(div1, t3);\n\t\t\tappend(div1, button);\n\t\t\tif (if_block1) if_block1.m(button, null);\n\t\t\tappend(button, t4);\n\t\t\tif (if_block2) if_block2.m(button, null);\n\t\t\tcurrent = true;\n\n\t\t\tif (!mounted) {\n\t\t\t\tdispose = [\n\t\t\t\t\tlisten(input, \"change\", /*input_change_handler*/ ctx[4]),\n\t\t\t\t\tlisten(button, \"click\", /*click_handler*/ ctx[5])\n\t\t\t\t];\n\n\t\t\t\tmounted = true;\n\t\t\t}\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tif (dirty & /*showEmptyAddresses*/ 1) {\n\t\t\t\tinput.checked = /*showEmptyAddresses*/ ctx[0];\n\t\t\t}\n\n\t\t\tif (/*errorFromScan*/ ctx[3]) {\n\t\t\t\tif (if_block0) {\n\t\t\t\t\tif_block0.p(ctx, dirty);\n\t\t\t\t} else {\n\t\t\t\t\tif_block0 = create_if_block_2$1(ctx);\n\t\t\t\t\tif_block0.c();\n\t\t\t\t\tif_block0.m(div1, t3);\n\t\t\t\t}\n\t\t\t} else if (if_block0) {\n\t\t\t\tif_block0.d(1);\n\t\t\t\tif_block0 = null;\n\t\t\t}\n\n\t\t\tif (/*loadingAccounts*/ ctx[2]) {\n\t\t\t\tif (if_block1) {\n\t\t\t\t\tif (dirty & /*loadingAccounts*/ 4) {\n\t\t\t\t\t\ttransition_in(if_block1, 1);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif_block1 = create_if_block_1$1();\n\t\t\t\t\tif_block1.c();\n\t\t\t\t\ttransition_in(if_block1, 1);\n\t\t\t\t\tif_block1.m(button, t4);\n\t\t\t\t}\n\t\t\t} else if (if_block1) {\n\t\t\t\tgroup_outros();\n\n\t\t\t\ttransition_out(if_block1, 1, 1, () => {\n\t\t\t\t\tif_block1 = null;\n\t\t\t\t});\n\n\t\t\t\tcheck_outros();\n\t\t\t}\n\n\t\t\tif (!/*loadingAccounts*/ ctx[2]) {\n\t\t\t\tif (if_block2) ; else {\n\t\t\t\t\tif_block2 = create_if_block$2();\n\t\t\t\t\tif_block2.c();\n\t\t\t\t\tif_block2.m(button, null);\n\t\t\t\t}\n\t\t\t} else if (if_block2) {\n\t\t\t\tif_block2.d(1);\n\t\t\t\tif_block2 = null;\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(if_block1);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(if_block1);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(div1);\n\t\t\tif (if_block0) if_block0.d();\n\t\t\tif (if_block1) if_block1.d();\n\t\t\tif (if_block2) if_block2.d();\n\t\t\tmounted = false;\n\t\t\trun_all(dispose);\n\t\t}\n\t};\n}\n\nfunction instance$3($$self, $$props, $$invalidate) {\n\tlet { scanAccounts } = $$props;\n\tlet { loadingAccounts } = $$props;\n\tlet { showEmptyAddresses } = $$props;\n\tlet { errorFromScan } = $$props;\n\n\tfunction input_change_handler() {\n\t\tshowEmptyAddresses = this.checked;\n\t\t$$invalidate(0, showEmptyAddresses);\n\t}\n\n\tconst click_handler = async () => await scanAccounts();\n\n\t$$self.$$set = $$props => {\n\t\tif ('scanAccounts' in $$props) $$invalidate(1, scanAccounts = $$props.scanAccounts);\n\t\tif ('loadingAccounts' in $$props) $$invalidate(2, loadingAccounts = $$props.loadingAccounts);\n\t\tif ('showEmptyAddresses' in $$props) $$invalidate(0, showEmptyAddresses = $$props.showEmptyAddresses);\n\t\tif ('errorFromScan' in $$props) $$invalidate(3, errorFromScan = $$props.errorFromScan);\n\t};\n\n\treturn [\n\t\tshowEmptyAddresses,\n\t\tscanAccounts,\n\t\tloadingAccounts,\n\t\terrorFromScan,\n\t\tinput_change_handler,\n\t\tclick_handler\n\t];\n}\n\nclass TableHeader extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\n\t\tinit(\n\t\t\tthis,\n\t\t\toptions,\n\t\t\tinstance$3,\n\t\t\tcreate_fragment$3,\n\t\t\tsafe_not_equal,\n\t\t\t{\n\t\t\t\tscanAccounts: 1,\n\t\t\t\tloadingAccounts: 2,\n\t\t\t\tshowEmptyAddresses: 0,\n\t\t\t\terrorFromScan: 3\n\t\t\t},\n\t\t\tadd_css$3\n\t\t);\n\t}\n}\n\n/* src/views/AccountSelect.svelte generated by Svelte v3.59.2 */\n\nfunction add_css$2(target) {\n\tappend_styles(target, \"svelte-1vabcrr\", \"select.svelte-1vabcrr{display:block;margin:0;-moz-appearance:none;-webkit-appearance:none;appearance:none;font-family:inherit;background-image:url('data:image/svg+xml;charset=US-ASCII,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%22292.4%22%20height%3D%22292.4%22%3E%3Cpath%20fill%3D%22%23242835%22%20d%3D%22M287%2069.4a17.6%2017.6%200%200%200-13-5.4H18.4c-5%200-9.3%201.8-12.9%205.4A17.6%2017.6%200%200%200%200%2082.2c0%205%201.8%209.3%205.4%2012.9l128%20127.9c3.6%203.6%207.8%205.4%2012.8%205.4s9.2-1.8%2012.8-5.4L287%2095c3.5-3.5%205.4-7.8%205.4-12.8%200-5-1.9-9.2-5.5-12.8z%22%2F%3E%3C%2Fsvg%3E'),\\n      linear-gradient(to bottom, transparent 0%, transparent 100%);background-repeat:no-repeat, repeat;background-position:right 1rem top 1rem, 0 0;background-size:0.65em auto, 100%;scrollbar-width:none;width:100%;padding:0.5rem 1.8rem 0.5rem 1rem;border-radius:8px;font-size:var(\\n      --account-select-font-size-5,\\n      var(--onboard-font-size-5, var(--font-size-5))\\n    );transition:all 200ms ease-in-out;border:2px solid var(--account-select-gray-200, var(--border-color));box-sizing:border-box;height:3rem;-ms-overflow-style:none}select.svelte-1vabcrr::-webkit-scrollbar,input.svelte-1vabcrr::-webkit-scrollbar{display:none}select.svelte-1vabcrr::-ms-expand,input.svelte-1vabcrr::-ms-expand{display:none}input[type='text'].svelte-1vabcrr{display:block;margin:0;-moz-appearance:none;-webkit-appearance:none;appearance:none;scrollbar-width:none;width:100%;padding:0.5rem 2.6rem 0.5rem 1rem;border-radius:8px;font-size:var(\\n      --account-select-font-size-5,\\n      var(--onboard-font-size-5, var(--font-size-5))\\n    );line-height:var(\\n      --account-select-font-line-height-1,\\n      var(--onboard-font-line-height-1, var(--font-line-height-1))\\n    );color:var(\\n      --account-select-gray-600,\\n      var(--onboard-gray-600, var(--gray-600))\\n    );transition:all 200ms ease-in-out;border:2px solid\\n      var(--account-select-gray-200, var(--onboard-gray-200, var(--gray-200)));box-sizing:border-box;height:3rem;-ms-overflow-style:none}button.svelte-1vabcrr{align-items:center;padding:0.75rem 1.5rem;color:var(--account-select-white, var(--onboard-white, var(--white)));border-radius:1.5rem;font-family:var(\\n      --account-select-font-family-normal,\\n      var(--onboard-font-family-normal, var(--font-family-normal))\\n    );font-style:normal;font-weight:bold;font-size:var(\\n      --account-select-font-size-5,\\n      var(--onboard-font-size-5, var(--font-size-5))\\n    );line-height:var(\\n      --account-select-font-line-height-1,\\n      var(--onboard-line-height-1, var(--line-height-1))\\n    );border:none}.connect-btn.svelte-1vabcrr:disabled{background:var(\\n      --account-select-primary-300,\\n      var(--onboard-primary-300, var(--primary-300))\\n    );cursor:default}.connect-btn.svelte-1vabcrr{background:var(\\n      --account-select-primary-500,\\n      var(--onboard-primary-500, var(--primary-500))\\n    );cursor:pointer}.dismiss-action.svelte-1vabcrr{color:var(\\n      --account-select-primary-500,\\n      var(--onboard-primary-500, var(--primary-500))\\n    );cursor:pointer;margin-left:var(\\n      --account-select-margin-4,\\n      var(--onboard-margin-4, var(--margin-4))\\n    )}select.svelte-1vabcrr:hover,input.svelte-1vabcrr:hover{border-color:var(\\n      --account-select-primary-300,\\n      var(--onboard-primary-300, var(--primary-300))\\n    )}select.svelte-1vabcrr:focus,input.svelte-1vabcrr:focus{border-color:var(\\n      --account-select-primary-500,\\n      var(--onboard-primary-500, var(--primary-500))\\n    );box-shadow:0 0 1px 1px\\n      var(\\n        --account-select-primary-500,\\n        var(--onboard-primary-500, var(--primary-500))\\n      );box-shadow:0 0 0 1px -moz-mac-focusring;outline:none}select.svelte-1vabcrr:disabled{background:var(\\n      --account-select-accent-background-color,\\n      var(--onboard-gray-100, var(--gray-100))\\n    )}option.svelte-1vabcrr{font-weight:300}.close.svelte-1vabcrr{cursor:pointer;padding:0.5rem}.container.svelte-1vabcrr{font-family:var(--onboard-font-family-normal, var(--font-family-normal));color:var(--account-select-text-color, var(--text-color));position:fixed;top:0;right:0;z-index:var(\\n      --onboard-account-select-modal-z-index,\\n      var(--account-select-modal-z-index)\\n    );display:flex;align-items:center;justify-content:center;backdrop-filter:blur(4px);background:var(--account-select-background-color, rgba(0, 0, 0, 0.2))}.fixed.svelte-1vabcrr{position:fixed}.h-w-100.svelte-1vabcrr{width:100vw;height:100vh}.hardware-connect-modal.svelte-1vabcrr{width:100%;flex-flow:column;display:flex;max-height:51.75rem;background:var(--account-select-background-color, var(--background-color));box-shadow:var(\\n      --account-select-shadow,\\n      var(--onboard-shadow-1, var(--shadow-1))\\n    );border-radius:1.5rem}.account-select-modal-position.svelte-1vabcrr{position:absolute;top:var(\\n      --onboard-account-select-modal-top,\\n      var(--account-select-modal-top)\\n    );bottom:var(\\n      --onboard-account-select-modal-bottom,\\n      var(--account-select-modal-bottom)\\n    );left:var(\\n      --onboard-account-select-modal-left,\\n      var(--account-select-modal-left)\\n    );right:var(\\n      --onboard-account-select-modal-right,\\n      var(--account-select-modal-right)\\n    );max-height:100vh;overflow:scroll;scrollbar-width:none;-ms-overflow-style:none}.account-select-modal-position.svelte-1vabcrr::-webkit-scrollbar{display:none}.connect-wallet-header.svelte-1vabcrr{position:relative;border-bottom:1px solid var(--border-color, transparent);border-radius:1.5rem 1.5rem 0 0;display:flex;justify-content:space-between;align-items:center;width:100%}.modal-controls.svelte-1vabcrr{display:flex;flex-wrap:wrap;justify-content:space-between;align-items:center;padding:1rem;padding-top:0}.control-label.svelte-1vabcrr{font-style:normal;font-weight:bold;font-size:var(\\n      --account-select-font-size-5,\\n      var(--onboard-font-size-5, var(--font-size-5))\\n    );line-height:var(\\n      --account-select-font-line-height-1,\\n      var(--onboard-font-line-height-1, var(--font-line-height-1))\\n    );margin-top:var(\\n      --account-select-margin-5,\\n      var(--onboard-margin-5, var(--margin-5))\\n    );margin-bottom:var(\\n      --account-select-margin-5,\\n      var(--onboard-margin-5, var(--margin-5))\\n    );color:var(--account-select-gray-700, inherit)}.asset-select.svelte-1vabcrr{width:6rem}.network-select.svelte-1vabcrr{min-width:12rem}.w-100.svelte-1vabcrr{width:100%}.base-path-container.svelte-1vabcrr{position:relative;margin-right:var(\\n      --account-select-margin-5,\\n      var(--onboard-margin-5, var(--margin-5))\\n    )}.hidden-input-select.svelte-1vabcrr{position:absolute;top:2.7rem;right:0.2rem;width:2.5rem;height:2.5rem;background:transparent;cursor:pointer}.asset-container.svelte-1vabcrr{margin-right:var(\\n      --account-select-margin-5,\\n      var(--onboard-margin-5, var(--margin-5))\\n    )}.table-section.svelte-1vabcrr{max-height:31.8rem;padding:1rem;margin-top:2rem}.table-container.svelte-1vabcrr{border:2px solid var(--account-select-gray-200, var(--border-color));box-sizing:border-box;border-radius:0.5rem}.address-found-count.svelte-1vabcrr{padding:0 2rem}@media all and (min-width: 768px){.hardware-connect-modal.svelte-1vabcrr{width:50rem;display:table;flex-flow:unset}.modal-controls.svelte-1vabcrr{flex-wrap:nowrap}.base-path-select.svelte-1vabcrr{min-width:20rem}.table-section.svelte-1vabcrr{margin-top:unset}.account-select-modal-position.svelte-1vabcrr{max-height:unset;overflow:unset}}\");\n}\n\nfunction get_each_context(ctx, list, i) {\n\tconst child_ctx = ctx.slice();\n\tchild_ctx[26] = list[i];\n\treturn child_ctx;\n}\n\nfunction get_each_context_1(ctx, list, i) {\n\tconst child_ctx = ctx.slice();\n\tchild_ctx[29] = list[i];\n\treturn child_ctx;\n}\n\nfunction get_each_context_2(ctx, list, i) {\n\tconst child_ctx = ctx.slice();\n\tchild_ctx[32] = list[i];\n\treturn child_ctx;\n}\n\n// (450:40) \nfunction create_if_block_3(ctx) {\n\tlet select;\n\tlet each_1_anchor;\n\tlet mounted;\n\tlet dispose;\n\tlet each_value_2 = /*basePaths*/ ctx[7];\n\tlet each_blocks = [];\n\n\tfor (let i = 0; i < each_value_2.length; i += 1) {\n\t\teach_blocks[i] = create_each_block_2(get_each_context_2(ctx, each_value_2, i));\n\t}\n\n\tlet if_block = /*supportsCustomPath*/ ctx[10] && create_if_block_4();\n\n\treturn {\n\t\tc() {\n\t\t\tselect = element(\"select\");\n\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\teach_blocks[i].c();\n\t\t\t}\n\n\t\t\teach_1_anchor = empty();\n\t\t\tif (if_block) if_block.c();\n\t\t\tattr(select, \"class\", \"base-path-select svelte-1vabcrr\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, select, anchor);\n\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\tif (each_blocks[i]) {\n\t\t\t\t\teach_blocks[i].m(select, null);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tappend(select, each_1_anchor);\n\t\t\tif (if_block) if_block.m(select, null);\n\n\t\t\tif (!mounted) {\n\t\t\t\tdispose = listen(select, \"change\", /*handleDerivationPathSelect*/ ctx[12]);\n\t\t\t\tmounted = true;\n\t\t\t}\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tif (dirty[0] & /*basePaths*/ 128) {\n\t\t\t\teach_value_2 = /*basePaths*/ ctx[7];\n\t\t\t\tlet i;\n\n\t\t\t\tfor (i = 0; i < each_value_2.length; i += 1) {\n\t\t\t\t\tconst child_ctx = get_each_context_2(ctx, each_value_2, i);\n\n\t\t\t\t\tif (each_blocks[i]) {\n\t\t\t\t\t\teach_blocks[i].p(child_ctx, dirty);\n\t\t\t\t\t} else {\n\t\t\t\t\t\teach_blocks[i] = create_each_block_2(child_ctx);\n\t\t\t\t\t\teach_blocks[i].c();\n\t\t\t\t\t\teach_blocks[i].m(select, each_1_anchor);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfor (; i < each_blocks.length; i += 1) {\n\t\t\t\t\teach_blocks[i].d(1);\n\t\t\t\t}\n\n\t\t\t\teach_blocks.length = each_value_2.length;\n\t\t\t}\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(select);\n\t\t\tdestroy_each(each_blocks, detaching);\n\t\t\tif (if_block) if_block.d();\n\t\t\tmounted = false;\n\t\t\tdispose();\n\t\t}\n\t};\n}\n\n// (439:8) {#if customDerivationPath}\nfunction create_if_block_2(ctx) {\n\tlet input;\n\tlet t;\n\tlet span;\n\tlet mounted;\n\tlet dispose;\n\n\treturn {\n\t\tc() {\n\t\t\tinput = element(\"input\");\n\t\t\tt = space();\n\t\t\tspan = element(\"span\");\n\t\t\tattr(input, \"type\", \"text\");\n\t\t\tattr(input, \"class\", \"base-path-select svelte-1vabcrr\");\n\t\t\tattr(input, \"placeholder\", \"type/your/custom/path...\");\n\t\t\tattr(span, \"class\", \"hidden-input-select svelte-1vabcrr\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, input, anchor);\n\t\t\tinsert(target, t, anchor);\n\t\t\tinsert(target, span, anchor);\n\n\t\t\tif (!mounted) {\n\t\t\t\tdispose = [\n\t\t\t\t\tlisten(input, \"change\", /*handleCustomPath*/ ctx[14]),\n\t\t\t\t\tlisten(span, \"click\", /*toggleDerivationPathToDropdown*/ ctx[13])\n\t\t\t\t];\n\n\t\t\t\tmounted = true;\n\t\t\t}\n\t\t},\n\t\tp: noop,\n\t\td(detaching) {\n\t\t\tif (detaching) detach(input);\n\t\t\tif (detaching) detach(t);\n\t\t\tif (detaching) detach(span);\n\t\t\tmounted = false;\n\t\t\trun_all(dispose);\n\t\t}\n\t};\n}\n\n// (455:12) {#each basePaths as path}\nfunction create_each_block_2(ctx) {\n\tlet option;\n\tlet t0_value = /*path*/ ctx[32].label + \"\";\n\tlet t0;\n\tlet t1;\n\tlet t2_value = /*path*/ ctx[32].value + \"\";\n\tlet t2;\n\tlet t3;\n\n\treturn {\n\t\tc() {\n\t\t\toption = element(\"option\");\n\t\t\tt0 = text(t0_value);\n\t\t\tt1 = text(\" - \");\n\t\t\tt2 = text(t2_value);\n\t\t\tt3 = space();\n\t\t\toption.__value = /*path*/ ctx[32].value;\n\t\t\toption.value = option.__value;\n\t\t\tattr(option, \"class\", \"svelte-1vabcrr\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, option, anchor);\n\t\t\tappend(option, t0);\n\t\t\tappend(option, t1);\n\t\t\tappend(option, t2);\n\t\t\tappend(option, t3);\n\t\t},\n\t\tp: noop,\n\t\td(detaching) {\n\t\t\tif (detaching) detach(option);\n\t\t}\n\t};\n}\n\n// (460:12) {#if supportsCustomPath}\nfunction create_if_block_4(ctx) {\n\tlet option;\n\n\treturn {\n\t\tc() {\n\t\t\toption = element(\"option\");\n\t\t\toption.textContent = \"Custom Derivation Path\";\n\t\t\toption.__value = \"customPath\";\n\t\t\toption.value = option.__value;\n\t\t\tattr(option, \"class\", \"svelte-1vabcrr\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, option, anchor);\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(option);\n\t\t}\n\t};\n}\n\n// (470:10) {#each assets as asset}\nfunction create_each_block_1(ctx) {\n\tlet option;\n\tlet t0_value = /*asset*/ ctx[29].label + \"\";\n\tlet t0;\n\tlet t1;\n\n\treturn {\n\t\tc() {\n\t\t\toption = element(\"option\");\n\t\t\tt0 = text(t0_value);\n\t\t\tt1 = space();\n\t\t\toption.__value = /*asset*/ ctx[29];\n\t\t\toption.value = option.__value;\n\t\t\tattr(option, \"class\", \"svelte-1vabcrr\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, option, anchor);\n\t\t\tappend(option, t0);\n\t\t\tappend(option, t1);\n\t\t},\n\t\tp: noop,\n\t\td(detaching) {\n\t\t\tif (detaching) detach(option);\n\t\t}\n\t};\n}\n\n// (484:10) {#each chains as chain}\nfunction create_each_block(ctx) {\n\tlet option;\n\tlet t0_value = /*chain*/ ctx[26].label + \"\";\n\tlet t0;\n\tlet t1;\n\n\treturn {\n\t\tc() {\n\t\t\toption = element(\"option\");\n\t\t\tt0 = text(t0_value);\n\t\t\tt1 = space();\n\t\t\toption.__value = /*chain*/ ctx[26].id;\n\t\t\toption.value = option.__value;\n\t\t\tattr(option, \"class\", \"svelte-1vabcrr\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, option, anchor);\n\t\t\tappend(option, t0);\n\t\t\tappend(option, t1);\n\t\t},\n\t\tp: noop,\n\t\td(detaching) {\n\t\t\tif (detaching) detach(option);\n\t\t}\n\t};\n}\n\n// (510:8) {#if showEmptyAddresses}\nfunction create_if_block_1(ctx) {\n\tlet t0_value = (/*accountsListObject*/ ctx[0] && /*accountsListObject*/ ctx[0].all.length || 0) + \"\";\n\tlet t0;\n\tlet t1;\n\n\tlet t2_value = (/*accountsListObject*/ ctx[0] && /*accountsListObject*/ ctx[0].all.length !== 1\n\t? 'es'\n\t: '') + \"\";\n\n\tlet t2;\n\tlet t3;\n\n\treturn {\n\t\tc() {\n\t\t\tt0 = text(t0_value);\n\t\t\tt1 = text(\" total address\");\n\t\t\tt2 = text(t2_value);\n\t\t\tt3 = text(\" found\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, t0, anchor);\n\t\t\tinsert(target, t1, anchor);\n\t\t\tinsert(target, t2, anchor);\n\t\t\tinsert(target, t3, anchor);\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tif (dirty[0] & /*accountsListObject*/ 1 && t0_value !== (t0_value = (/*accountsListObject*/ ctx[0] && /*accountsListObject*/ ctx[0].all.length || 0) + \"\")) set_data(t0, t0_value);\n\n\t\t\tif (dirty[0] & /*accountsListObject*/ 1 && t2_value !== (t2_value = (/*accountsListObject*/ ctx[0] && /*accountsListObject*/ ctx[0].all.length !== 1\n\t\t\t? 'es'\n\t\t\t: '') + \"\")) set_data(t2, t2_value);\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(t0);\n\t\t\tif (detaching) detach(t1);\n\t\t\tif (detaching) detach(t2);\n\t\t\tif (detaching) detach(t3);\n\t\t}\n\t};\n}\n\n// (516:8) {#if !showEmptyAddresses}\nfunction create_if_block$1(ctx) {\n\tlet t0_value = (/*accountsListObject*/ ctx[0] && /*accountsListObject*/ ctx[0].filtered.length || 0) + \"\";\n\tlet t0;\n\tlet t1;\n\n\tlet t2_value = (/*accountsListObject*/ ctx[0] && /*accountsListObject*/ ctx[0].filtered.length !== 1\n\t? 'es'\n\t: '') + \"\";\n\n\tlet t2;\n\tlet t3;\n\n\treturn {\n\t\tc() {\n\t\t\tt0 = text(t0_value);\n\t\t\tt1 = text(\" total\\n          address\");\n\t\t\tt2 = text(t2_value);\n\t\t\tt3 = text(\" found\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, t0, anchor);\n\t\t\tinsert(target, t1, anchor);\n\t\t\tinsert(target, t2, anchor);\n\t\t\tinsert(target, t3, anchor);\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tif (dirty[0] & /*accountsListObject*/ 1 && t0_value !== (t0_value = (/*accountsListObject*/ ctx[0] && /*accountsListObject*/ ctx[0].filtered.length || 0) + \"\")) set_data(t0, t0_value);\n\n\t\t\tif (dirty[0] & /*accountsListObject*/ 1 && t2_value !== (t2_value = (/*accountsListObject*/ ctx[0] && /*accountsListObject*/ ctx[0].filtered.length !== 1\n\t\t\t? 'es'\n\t\t\t: '') + \"\")) set_data(t2, t2_value);\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(t0);\n\t\t\tif (detaching) detach(t1);\n\t\t\tif (detaching) detach(t2);\n\t\t\tif (detaching) detach(t3);\n\t\t}\n\t};\n}\n\nfunction create_fragment$2(ctx) {\n\tlet div10;\n\tlet div9;\n\tlet header;\n\tlet div0;\n\tlet t0;\n\tlet div1;\n\tlet closebutton;\n\tlet t1;\n\tlet section0;\n\tlet div2;\n\tlet h40;\n\tlet t3;\n\tlet t4;\n\tlet div3;\n\tlet h41;\n\tlet t6;\n\tlet select0;\n\tlet t7;\n\tlet div4;\n\tlet h42;\n\tlet t9;\n\tlet select1;\n\tlet t10;\n\tlet section1;\n\tlet div5;\n\tlet tableheader;\n\tlet updating_showEmptyAddresses;\n\tlet t11;\n\tlet addresstable;\n\tlet updating_accountSelected;\n\tlet t12;\n\tlet section2;\n\tlet div6;\n\tlet t13;\n\tlet t14;\n\tlet div8;\n\tlet div7;\n\tlet t16;\n\tlet button;\n\tlet t17;\n\tlet button_disabled_value;\n\tlet div9_transition;\n\tlet current;\n\tlet mounted;\n\tlet dispose;\n\tclosebutton = new CloseButton({});\n\n\tfunction select_block_type(ctx, dirty) {\n\t\tif (/*customDerivationPath*/ ctx[2]) return create_if_block_2;\n\t\tif (!/*customDerivationPath*/ ctx[2]) return create_if_block_3;\n\t}\n\n\tlet current_block_type = select_block_type(ctx);\n\tlet if_block0 = current_block_type && current_block_type(ctx);\n\tlet each_value_1 = /*assets*/ ctx[8];\n\tlet each_blocks_1 = [];\n\n\tfor (let i = 0; i < each_value_1.length; i += 1) {\n\t\teach_blocks_1[i] = create_each_block_1(get_each_context_1(ctx, each_value_1, i));\n\t}\n\n\tlet each_value = /*chains*/ ctx[9];\n\tlet each_blocks = [];\n\n\tfor (let i = 0; i < each_value.length; i += 1) {\n\t\teach_blocks[i] = create_each_block(get_each_context(ctx, each_value, i));\n\t}\n\n\tfunction tableheader_showEmptyAddresses_binding(value) {\n\t\t/*tableheader_showEmptyAddresses_binding*/ ctx[22](value);\n\t}\n\n\tlet tableheader_props = {\n\t\tscanAccounts: /*scanAccountsWrap*/ ctx[15],\n\t\tloadingAccounts: /*loadingAccounts*/ ctx[4],\n\t\terrorFromScan: /*errorFromScan*/ ctx[5]\n\t};\n\n\tif (/*showEmptyAddresses*/ ctx[3] !== void 0) {\n\t\ttableheader_props.showEmptyAddresses = /*showEmptyAddresses*/ ctx[3];\n\t}\n\n\ttableheader = new TableHeader({ props: tableheader_props });\n\tbinding_callbacks.push(() => bind(tableheader, 'showEmptyAddresses', tableheader_showEmptyAddresses_binding));\n\n\tfunction addresstable_accountSelected_binding(value) {\n\t\t/*addresstable_accountSelected_binding*/ ctx[23](value);\n\t}\n\n\tlet addresstable_props = {\n\t\taccountsListObject: /*accountsListObject*/ ctx[0],\n\t\tshowEmptyAddresses: /*showEmptyAddresses*/ ctx[3]\n\t};\n\n\tif (/*accountSelected*/ ctx[1] !== void 0) {\n\t\taddresstable_props.accountSelected = /*accountSelected*/ ctx[1];\n\t}\n\n\taddresstable = new AddressTable({ props: addresstable_props });\n\tbinding_callbacks.push(() => bind(addresstable, 'accountSelected', addresstable_accountSelected_binding));\n\tlet if_block1 = /*showEmptyAddresses*/ ctx[3] && create_if_block_1(ctx);\n\tlet if_block2 = !/*showEmptyAddresses*/ ctx[3] && create_if_block$1(ctx);\n\n\treturn {\n\t\tc() {\n\t\t\tdiv10 = element(\"div\");\n\t\t\tdiv9 = element(\"div\");\n\t\t\theader = element(\"header\");\n\t\t\tdiv0 = element(\"div\");\n\t\t\tt0 = space();\n\t\t\tdiv1 = element(\"div\");\n\t\t\tcreate_component(closebutton.$$.fragment);\n\t\t\tt1 = space();\n\t\t\tsection0 = element(\"section\");\n\t\t\tdiv2 = element(\"div\");\n\t\t\th40 = element(\"h4\");\n\t\t\th40.textContent = \"Select Base Path\";\n\t\t\tt3 = space();\n\t\t\tif (if_block0) if_block0.c();\n\t\t\tt4 = space();\n\t\t\tdiv3 = element(\"div\");\n\t\t\th41 = element(\"h4\");\n\t\t\th41.textContent = \"Asset\";\n\t\t\tt6 = space();\n\t\t\tselect0 = element(\"select\");\n\n\t\t\tfor (let i = 0; i < each_blocks_1.length; i += 1) {\n\t\t\t\teach_blocks_1[i].c();\n\t\t\t}\n\n\t\t\tt7 = space();\n\t\t\tdiv4 = element(\"div\");\n\t\t\th42 = element(\"h4\");\n\t\t\th42.textContent = \"Network\";\n\t\t\tt9 = space();\n\t\t\tselect1 = element(\"select\");\n\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\teach_blocks[i].c();\n\t\t\t}\n\n\t\t\tt10 = space();\n\t\t\tsection1 = element(\"section\");\n\t\t\tdiv5 = element(\"div\");\n\t\t\tcreate_component(tableheader.$$.fragment);\n\t\t\tt11 = space();\n\t\t\tcreate_component(addresstable.$$.fragment);\n\t\t\tt12 = space();\n\t\t\tsection2 = element(\"section\");\n\t\t\tdiv6 = element(\"div\");\n\t\t\tif (if_block1) if_block1.c();\n\t\t\tt13 = space();\n\t\t\tif (if_block2) if_block2.c();\n\t\t\tt14 = space();\n\t\t\tdiv8 = element(\"div\");\n\t\t\tdiv7 = element(\"div\");\n\t\t\tdiv7.textContent = \"Dismiss\";\n\t\t\tt16 = space();\n\t\t\tbutton = element(\"button\");\n\t\t\tt17 = text(\"Connect\");\n\t\t\tattr(div1, \"class\", \"close svelte-1vabcrr\");\n\t\t\tattr(header, \"class\", \"connect-wallet-header svelte-1vabcrr\");\n\t\t\tattr(h40, \"class\", \"control-label svelte-1vabcrr\");\n\t\t\tattr(div2, \"class\", \"w-100 base-path-container svelte-1vabcrr\");\n\t\t\tattr(h41, \"class\", \"control-label svelte-1vabcrr\");\n\t\t\tattr(select0, \"class\", \"asset-select svelte-1vabcrr\");\n\t\t\tif (/*scanAccountOptions*/ ctx[6]['asset'] === void 0) add_render_callback(() => /*select0_change_handler*/ ctx[20].call(select0));\n\t\t\tattr(div3, \"class\", \"asset-container svelte-1vabcrr\");\n\t\t\tattr(h42, \"class\", \"control-label svelte-1vabcrr\");\n\t\t\tattr(select1, \"class\", \"network-select svelte-1vabcrr\");\n\t\t\tif (/*scanAccountOptions*/ ctx[6]['chainId'] === void 0) add_render_callback(() => /*select1_change_handler*/ ctx[21].call(select1));\n\t\t\tattr(div4, \"class\", \"network-container\");\n\t\t\tattr(section0, \"class\", \"modal-controls svelte-1vabcrr\");\n\t\t\tattr(div5, \"class\", \"w-100 table-container svelte-1vabcrr\");\n\t\t\tattr(section1, \"class\", \"table-section svelte-1vabcrr\");\n\t\t\tattr(div6, \"class\", \"address-found-count svelte-1vabcrr\");\n\t\t\tattr(div7, \"class\", \"dismiss-action svelte-1vabcrr\");\n\t\t\tattr(div7, \"id\", \"dismiss-account-select\");\n\t\t\tattr(button, \"class\", \"connect-btn svelte-1vabcrr\");\n\t\t\tattr(button, \"id\", \"connect-accounts\");\n\t\t\tbutton.disabled = button_disabled_value = !/*accountSelected*/ ctx[1];\n\t\t\tattr(div8, \"class\", \"modal-controls svelte-1vabcrr\");\n\t\t\tattr(div9, \"class\", \"hardware-connect-modal svelte-1vabcrr\");\n\t\t\ttoggle_class(div9, \"account-select-modal-position\", !/*containerElement*/ ctx[11]);\n\t\t\tattr(div10, \"class\", \"container svelte-1vabcrr\");\n\t\t\ttoggle_class(div10, \"h-w-100\", !/*containerElement*/ ctx[11]);\n\t\t\ttoggle_class(div10, \"fixed\", !/*containerElement*/ ctx[11]);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, div10, anchor);\n\t\t\tappend(div10, div9);\n\t\t\tappend(div9, header);\n\t\t\tappend(header, div0);\n\t\t\tappend(header, t0);\n\t\t\tappend(header, div1);\n\t\t\tmount_component(closebutton, div1, null);\n\t\t\tappend(div9, t1);\n\t\t\tappend(div9, section0);\n\t\t\tappend(section0, div2);\n\t\t\tappend(div2, h40);\n\t\t\tappend(div2, t3);\n\t\t\tif (if_block0) if_block0.m(div2, null);\n\t\t\tappend(section0, t4);\n\t\t\tappend(section0, div3);\n\t\t\tappend(div3, h41);\n\t\t\tappend(div3, t6);\n\t\t\tappend(div3, select0);\n\n\t\t\tfor (let i = 0; i < each_blocks_1.length; i += 1) {\n\t\t\t\tif (each_blocks_1[i]) {\n\t\t\t\t\teach_blocks_1[i].m(select0, null);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tselect_option(select0, /*scanAccountOptions*/ ctx[6]['asset'], true);\n\t\t\tappend(section0, t7);\n\t\t\tappend(section0, div4);\n\t\t\tappend(div4, h42);\n\t\t\tappend(div4, t9);\n\t\t\tappend(div4, select1);\n\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\tif (each_blocks[i]) {\n\t\t\t\t\teach_blocks[i].m(select1, null);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tselect_option(select1, /*scanAccountOptions*/ ctx[6]['chainId'], true);\n\t\t\tappend(div9, t10);\n\t\t\tappend(div9, section1);\n\t\t\tappend(section1, div5);\n\t\t\tmount_component(tableheader, div5, null);\n\t\t\tappend(div5, t11);\n\t\t\tmount_component(addresstable, div5, null);\n\t\t\tappend(div9, t12);\n\t\t\tappend(div9, section2);\n\t\t\tappend(section2, div6);\n\t\t\tif (if_block1) if_block1.m(div6, null);\n\t\t\tappend(div6, t13);\n\t\t\tif (if_block2) if_block2.m(div6, null);\n\t\t\tappend(section2, t14);\n\t\t\tappend(section2, div8);\n\t\t\tappend(div8, div7);\n\t\t\tappend(div8, t16);\n\t\t\tappend(div8, button);\n\t\t\tappend(button, t17);\n\t\t\tcurrent = true;\n\n\t\t\tif (!mounted) {\n\t\t\t\tdispose = [\n\t\t\t\t\tlisten(div1, \"click\", /*dismiss*/ ctx[17]),\n\t\t\t\t\tlisten(select0, \"change\", /*select0_change_handler*/ ctx[20]),\n\t\t\t\t\tlisten(select1, \"change\", /*select1_change_handler*/ ctx[21]),\n\t\t\t\t\tlisten(div7, \"click\", /*dismiss*/ ctx[17]),\n\t\t\t\t\tlisten(button, \"click\", /*connectAccounts*/ ctx[16])\n\t\t\t\t];\n\n\t\t\t\tmounted = true;\n\t\t\t}\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tif (current_block_type === (current_block_type = select_block_type(ctx)) && if_block0) {\n\t\t\t\tif_block0.p(ctx, dirty);\n\t\t\t} else {\n\t\t\t\tif (if_block0) if_block0.d(1);\n\t\t\t\tif_block0 = current_block_type && current_block_type(ctx);\n\n\t\t\t\tif (if_block0) {\n\t\t\t\t\tif_block0.c();\n\t\t\t\t\tif_block0.m(div2, null);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*assets*/ 256) {\n\t\t\t\teach_value_1 = /*assets*/ ctx[8];\n\t\t\t\tlet i;\n\n\t\t\t\tfor (i = 0; i < each_value_1.length; i += 1) {\n\t\t\t\t\tconst child_ctx = get_each_context_1(ctx, each_value_1, i);\n\n\t\t\t\t\tif (each_blocks_1[i]) {\n\t\t\t\t\t\teach_blocks_1[i].p(child_ctx, dirty);\n\t\t\t\t\t} else {\n\t\t\t\t\t\teach_blocks_1[i] = create_each_block_1(child_ctx);\n\t\t\t\t\t\teach_blocks_1[i].c();\n\t\t\t\t\t\teach_blocks_1[i].m(select0, null);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfor (; i < each_blocks_1.length; i += 1) {\n\t\t\t\t\teach_blocks_1[i].d(1);\n\t\t\t\t}\n\n\t\t\t\teach_blocks_1.length = each_value_1.length;\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*scanAccountOptions, assets*/ 320) {\n\t\t\t\tselect_option(select0, /*scanAccountOptions*/ ctx[6]['asset']);\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*chains*/ 512) {\n\t\t\t\teach_value = /*chains*/ ctx[9];\n\t\t\t\tlet i;\n\n\t\t\t\tfor (i = 0; i < each_value.length; i += 1) {\n\t\t\t\t\tconst child_ctx = get_each_context(ctx, each_value, i);\n\n\t\t\t\t\tif (each_blocks[i]) {\n\t\t\t\t\t\teach_blocks[i].p(child_ctx, dirty);\n\t\t\t\t\t} else {\n\t\t\t\t\t\teach_blocks[i] = create_each_block(child_ctx);\n\t\t\t\t\t\teach_blocks[i].c();\n\t\t\t\t\t\teach_blocks[i].m(select1, null);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfor (; i < each_blocks.length; i += 1) {\n\t\t\t\t\teach_blocks[i].d(1);\n\t\t\t\t}\n\n\t\t\t\teach_blocks.length = each_value.length;\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*scanAccountOptions, assets*/ 320) {\n\t\t\t\tselect_option(select1, /*scanAccountOptions*/ ctx[6]['chainId']);\n\t\t\t}\n\n\t\t\tconst tableheader_changes = {};\n\t\t\tif (dirty[0] & /*loadingAccounts*/ 16) tableheader_changes.loadingAccounts = /*loadingAccounts*/ ctx[4];\n\t\t\tif (dirty[0] & /*errorFromScan*/ 32) tableheader_changes.errorFromScan = /*errorFromScan*/ ctx[5];\n\n\t\t\tif (!updating_showEmptyAddresses && dirty[0] & /*showEmptyAddresses*/ 8) {\n\t\t\t\tupdating_showEmptyAddresses = true;\n\t\t\t\ttableheader_changes.showEmptyAddresses = /*showEmptyAddresses*/ ctx[3];\n\t\t\t\tadd_flush_callback(() => updating_showEmptyAddresses = false);\n\t\t\t}\n\n\t\t\ttableheader.$set(tableheader_changes);\n\t\t\tconst addresstable_changes = {};\n\t\t\tif (dirty[0] & /*accountsListObject*/ 1) addresstable_changes.accountsListObject = /*accountsListObject*/ ctx[0];\n\t\t\tif (dirty[0] & /*showEmptyAddresses*/ 8) addresstable_changes.showEmptyAddresses = /*showEmptyAddresses*/ ctx[3];\n\n\t\t\tif (!updating_accountSelected && dirty[0] & /*accountSelected*/ 2) {\n\t\t\t\tupdating_accountSelected = true;\n\t\t\t\taddresstable_changes.accountSelected = /*accountSelected*/ ctx[1];\n\t\t\t\tadd_flush_callback(() => updating_accountSelected = false);\n\t\t\t}\n\n\t\t\taddresstable.$set(addresstable_changes);\n\n\t\t\tif (/*showEmptyAddresses*/ ctx[3]) {\n\t\t\t\tif (if_block1) {\n\t\t\t\t\tif_block1.p(ctx, dirty);\n\t\t\t\t} else {\n\t\t\t\t\tif_block1 = create_if_block_1(ctx);\n\t\t\t\t\tif_block1.c();\n\t\t\t\t\tif_block1.m(div6, t13);\n\t\t\t\t}\n\t\t\t} else if (if_block1) {\n\t\t\t\tif_block1.d(1);\n\t\t\t\tif_block1 = null;\n\t\t\t}\n\n\t\t\tif (!/*showEmptyAddresses*/ ctx[3]) {\n\t\t\t\tif (if_block2) {\n\t\t\t\t\tif_block2.p(ctx, dirty);\n\t\t\t\t} else {\n\t\t\t\t\tif_block2 = create_if_block$1(ctx);\n\t\t\t\t\tif_block2.c();\n\t\t\t\t\tif_block2.m(div6, null);\n\t\t\t\t}\n\t\t\t} else if (if_block2) {\n\t\t\t\tif_block2.d(1);\n\t\t\t\tif_block2 = null;\n\t\t\t}\n\n\t\t\tif (!current || dirty[0] & /*accountSelected*/ 2 && button_disabled_value !== (button_disabled_value = !/*accountSelected*/ ctx[1])) {\n\t\t\t\tbutton.disabled = button_disabled_value;\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(closebutton.$$.fragment, local);\n\t\t\ttransition_in(tableheader.$$.fragment, local);\n\t\t\ttransition_in(addresstable.$$.fragment, local);\n\n\t\t\tadd_render_callback(() => {\n\t\t\t\tif (!current) return;\n\t\t\t\tif (!div9_transition) div9_transition = create_bidirectional_transition(div9, fade, {}, true);\n\t\t\t\tdiv9_transition.run(1);\n\t\t\t});\n\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(closebutton.$$.fragment, local);\n\t\t\ttransition_out(tableheader.$$.fragment, local);\n\t\t\ttransition_out(addresstable.$$.fragment, local);\n\t\t\tif (!div9_transition) div9_transition = create_bidirectional_transition(div9, fade, {}, false);\n\t\t\tdiv9_transition.run(0);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(div10);\n\t\t\tdestroy_component(closebutton);\n\n\t\t\tif (if_block0) {\n\t\t\t\tif_block0.d();\n\t\t\t}\n\n\t\t\tdestroy_each(each_blocks_1, detaching);\n\t\t\tdestroy_each(each_blocks, detaching);\n\t\t\tdestroy_component(tableheader);\n\t\t\tdestroy_component(addresstable);\n\t\t\tif (if_block1) if_block1.d();\n\t\t\tif (if_block2) if_block2.d();\n\t\t\tif (detaching && div9_transition) div9_transition.end();\n\t\t\tmounted = false;\n\t\t\trun_all(dispose);\n\t\t}\n\t};\n}\n\nfunction instance$2($$self, $$props, $$invalidate) {\n\tlet { selectAccountOptions } = $$props;\n\tlet { accounts$ } = $$props;\n\tconst { basePaths, assets, chains, scanAccounts, supportsCustomPath = true, containerElement } = selectAccountOptions;\n\tlet accountsListObject;\n\tlet accountSelected;\n\tlet customDerivationPath = false;\n\tlet showEmptyAddresses = true;\n\tlet loadingAccounts = false;\n\tlet errorFromScan = '';\n\n\tlet scanAccountOptions = {\n\t\tderivationPath: basePaths[0] && basePaths[0].value || '',\n\t\tchainId: chains[0].id || '',\n\t\tasset: assets[0] || null\n\t};\n\n\tconst handleDerivationPathSelect = e => {\n\t\tlet selectVal = e.target.value;\n\t\tif (selectVal === 'customPath') return $$invalidate(2, customDerivationPath = true);\n\t\t$$invalidate(6, scanAccountOptions.derivationPath = selectVal, scanAccountOptions);\n\t};\n\n\tconst toggleDerivationPathToDropdown = () => {\n\t\t$$invalidate(2, customDerivationPath = false);\n\t\t$$invalidate(6, scanAccountOptions.derivationPath = basePaths[0].value, scanAccountOptions);\n\t};\n\n\tconst handleCustomPath = e => {\n\t\tlet inputVal = e.target.value;\n\t\t$$invalidate(6, scanAccountOptions.derivationPath = inputVal, scanAccountOptions);\n\t};\n\n\tconst scanAccountsWrap = async () => {\n\t\ttry {\n\t\t\t$$invalidate(5, errorFromScan = '');\n\t\t\t$$invalidate(4, loadingAccounts = true);\n\t\t\tconst allAccounts = await scanAccounts(scanAccountOptions);\n\n\t\t\t$$invalidate(0, accountsListObject = {\n\t\t\t\tall: allAccounts,\n\t\t\t\tfiltered: allAccounts.filter(account => {\n\t\t\t\t\treturn parseFloat(weiToEth(account.balance.value.toString())) > 0;\n\t\t\t\t})\n\t\t\t});\n\n\t\t\t$$invalidate(4, loadingAccounts = false);\n\t\t} catch(err) {\n\t\t\tconst { message } = err;\n\n\t\t\tif (typeof message === 'string' && message.includes('could not detect network')) {\n\t\t\t\t$$invalidate(5, errorFromScan = 'There was an error detecting connected network from RPC endpoint');\n\t\t\t} else {\n\t\t\t\t$$invalidate(5, errorFromScan = message || 'There was an error scanning for accounts');\n\t\t\t}\n\n\t\t\t$$invalidate(4, loadingAccounts = false);\n\t\t}\n\t};\n\n\tconst connectAccounts = () => {\n\t\tif (!accountSelected) return;\n\t\taccounts$.next([accountSelected]);\n\t\tresetModal();\n\t};\n\n\tconst dismiss = () => {\n\t\taccounts$.next([]);\n\t\tresetModal();\n\t};\n\n\tconst resetModal = () => {\n\t\t$$invalidate(1, accountSelected = undefined);\n\t\t$$invalidate(0, accountsListObject = undefined);\n\t\t$$invalidate(3, showEmptyAddresses = true);\n\t\t$$invalidate(6, scanAccountOptions.derivationPath = basePaths[0] && basePaths[0].value || '', scanAccountOptions);\n\t};\n\n\tfunction select0_change_handler() {\n\t\tscanAccountOptions['asset'] = select_value(this);\n\t\t$$invalidate(6, scanAccountOptions);\n\t\t$$invalidate(8, assets);\n\t}\n\n\tfunction select1_change_handler() {\n\t\tscanAccountOptions['chainId'] = select_value(this);\n\t\t$$invalidate(6, scanAccountOptions);\n\t\t$$invalidate(8, assets);\n\t}\n\n\tfunction tableheader_showEmptyAddresses_binding(value) {\n\t\tshowEmptyAddresses = value;\n\t\t$$invalidate(3, showEmptyAddresses);\n\t}\n\n\tfunction addresstable_accountSelected_binding(value) {\n\t\taccountSelected = value;\n\t\t$$invalidate(1, accountSelected);\n\t}\n\n\t$$self.$$set = $$props => {\n\t\tif ('selectAccountOptions' in $$props) $$invalidate(18, selectAccountOptions = $$props.selectAccountOptions);\n\t\tif ('accounts$' in $$props) $$invalidate(19, accounts$ = $$props.accounts$);\n\t};\n\n\treturn [\n\t\taccountsListObject,\n\t\taccountSelected,\n\t\tcustomDerivationPath,\n\t\tshowEmptyAddresses,\n\t\tloadingAccounts,\n\t\terrorFromScan,\n\t\tscanAccountOptions,\n\t\tbasePaths,\n\t\tassets,\n\t\tchains,\n\t\tsupportsCustomPath,\n\t\tcontainerElement,\n\t\thandleDerivationPathSelect,\n\t\ttoggleDerivationPathToDropdown,\n\t\thandleCustomPath,\n\t\tscanAccountsWrap,\n\t\tconnectAccounts,\n\t\tdismiss,\n\t\tselectAccountOptions,\n\t\taccounts$,\n\t\tselect0_change_handler,\n\t\tselect1_change_handler,\n\t\ttableheader_showEmptyAddresses_binding,\n\t\taddresstable_accountSelected_binding\n\t];\n}\n\nclass AccountSelect extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, instance$2, create_fragment$2, safe_not_equal, { selectAccountOptions: 18, accounts$: 19 }, add_css$2, [-1, -1]);\n\t}\n}\n\nconst accounts$ = new Subject();\n\nconst basePath = Joi.object({\n    label: Joi.string().required(),\n    value: Joi.string().required()\n});\nconst basePaths = Joi.array().items(basePath);\nconst chains = Joi.array().items(chainValidation);\nconst asset = Joi.object({\n    label: Joi.string().required(),\n    address: Joi.string()\n});\nconst assets = Joi.array().items(asset);\nconst selectAccountOptions = Joi.object({\n    basePaths: basePaths,\n    assets: assets,\n    chains: chains,\n    scanAccounts: Joi.function().arity(1).required(),\n    supportsCustomPath: Joi.bool(),\n    consecutiveEmptyAccountThreshold: Joi.number(),\n    containerElement: Joi.string()\n});\nconst validateSelectAccountOptions = (data) => {\n    return validate(selectAccountOptions, data);\n};\n\n// eslint-disable-next-line max-len\nconst accountSelect = async (options) => {\n    if (options) {\n        const error = validateSelectAccountOptions(options);\n        if (error) {\n            throw error;\n        }\n    }\n    const app = mountAccountSelect(options, accounts$);\n    accounts$.pipe(take(1)).subscribe(() => {\n        app.$destroy();\n    });\n    return firstValueFrom(accounts$);\n};\n// eslint-disable-next-line max-len\nconst mountAccountSelect = (selectAccountOptions, accounts$) => {\n    class AccountSelectEl extends HTMLElement {\n        constructor() {\n            super();\n        }\n    }\n    if (!customElements.get('account-select')) {\n        customElements.define('account-select', AccountSelectEl);\n    }\n    // add to DOM\n    const accountSelectDomElement = document.createElement('account-select');\n    const target = accountSelectDomElement.attachShadow({ mode: 'open' });\n    accountSelectDomElement.style.all = 'initial';\n    target.innerHTML = `\n    <style>\n      :host {\n        /* COLORS */\n        --white: white;\n        --black: black;\n        --primary-100: #eff1fc;\n        --primary-200: #d0d4f7;\n        --primary-300: #b1b8f2;\n        --primary-500: #6370e5;\n        --primary-600: #454ea0;\n        --gray-100: #ebebed;\n        --gray-200: #c2c4c9;\n        --gray-300: #999ca5;\n        --gray-500: #33394b;\n        --gray-700: #1a1d26;\n        --danger-500: #ff4f4f;\n\n        /* FONTS */\n        --font-family-normal: var(--w3o-font-family, Inter, sans-serif);\n        --font-size-5: 1rem;\n        --font-size-6: .875rem;\n        --font-size-7: .75rem;\n        --font-line-height-1: 24px;\n\n        /* SPACING */\n        --margin-4: 1rem;\n        --margin-5: 0.5rem;\n\n        /* MODAL POSITION */\n        --account-select-modal-z-index: 20;\n        --account-select-modal-top: unset;\n        --account-select-modal-right: unset;\n        --account-select-modal-bottom: unset;\n        --account-select-modal-left: unset;\n\n        /* SHADOWS */\n        --shadow-1: 0px 4px 12px rgba(0, 0, 0, 0.1);\n\n        /* THEMING */\n        --background-color: var(--w3o-background-color, #FFF);\n        --foreground-color: var(--w3o-foreground-color);\n        --text-color: var(--w3o-text-color, inherit);\n        --border-color: var(--w3o-border-color, var(--gray-200));\n        --action-color: var(--w3o-action-color, var(--primary-500));\n      }\n    </style>\n  `;\n    const containerElementQuery = selectAccountOptions.containerElement || 'body';\n    const containerElement = document.querySelector(containerElementQuery);\n    if (!containerElement) {\n        throw new Error(`Element with query ${containerElementQuery} does not exist.`);\n    }\n    containerElement.appendChild(accountSelectDomElement);\n    const app = new AccountSelect({\n        target: target,\n        props: {\n            selectAccountOptions,\n            accounts$\n        }\n    });\n    return app;\n};\n\n/* src/elements/Modal.svelte generated by Svelte v3.59.2 */\n\nfunction add_css$1(target) {\n\tappend_styles(target, \"svelte-xcex94\", \"aside.svelte-xcex94{display:flex;font-family:'Helvetica Neue', 'Helvetica', 'Arial', sans-serif;justify-content:center;align-items:center;position:fixed;font-size:16px;top:0;left:0;width:100vw;height:100vh;background:rgba(0, 0, 0, 0.3);z-index:var(--onboard-common-modal-index, 20)}@media screen and (max-width: 420px){aside.svelte-xcex94{font-size:14px}}section.svelte-xcex94{display:block;box-sizing:content-box;background:#ffffff;border-radius:10px;box-shadow:0 1px 5px 0 rgba(0, 0, 0, 0.1);font-family:inherit;font-size:inherit;padding:1.33em;position:relative;overflow:hidden;max-width:37em;color:#4a4a4a}div.svelte-xcex94{height:0.66em;position:absolute;padding:0.25em;top:1.33em;right:1.33em;font-size:inherit;font-family:inherit;border-radius:5px;transition:background 200ms ease-in-out;display:flex;justify-content:center;align-items:center}div.svelte-xcex94:hover{cursor:pointer;background:#eeeeee}svg.svelte-xcex94{width:10px;height:10px}\");\n}\n\n// (83:4) {#if closeable}\nfunction create_if_block(ctx) {\n\tlet div;\n\tlet svg;\n\tlet g0;\n\tlet path;\n\tlet g1;\n\tlet g2;\n\tlet g3;\n\tlet g4;\n\tlet g5;\n\tlet g6;\n\tlet g7;\n\tlet g8;\n\tlet g9;\n\tlet g10;\n\tlet g11;\n\tlet g12;\n\tlet g13;\n\tlet g14;\n\tlet g15;\n\tlet svg_fill_value;\n\tlet mounted;\n\tlet dispose;\n\n\treturn {\n\t\tc() {\n\t\t\tdiv = element(\"div\");\n\t\t\tsvg = svg_element(\"svg\");\n\t\t\tg0 = svg_element(\"g\");\n\t\t\tpath = svg_element(\"path\");\n\t\t\tg1 = svg_element(\"g\");\n\t\t\tg2 = svg_element(\"g\");\n\t\t\tg3 = svg_element(\"g\");\n\t\t\tg4 = svg_element(\"g\");\n\t\t\tg5 = svg_element(\"g\");\n\t\t\tg6 = svg_element(\"g\");\n\t\t\tg7 = svg_element(\"g\");\n\t\t\tg8 = svg_element(\"g\");\n\t\t\tg9 = svg_element(\"g\");\n\t\t\tg10 = svg_element(\"g\");\n\t\t\tg11 = svg_element(\"g\");\n\t\t\tg12 = svg_element(\"g\");\n\t\t\tg13 = svg_element(\"g\");\n\t\t\tg14 = svg_element(\"g\");\n\t\t\tg15 = svg_element(\"g\");\n\t\t\tattr(path, \"d\", \"M28.228,23.986L47.092,5.122c1.172-1.171,1.172-3.071,0-4.242c-1.172-1.172-3.07-1.172-4.242,0L23.986,19.744L5.121,0.88\\n              c-1.172-1.172-3.07-1.172-4.242,0c-1.172,1.171-1.172,3.071,0,4.242l18.865,18.864L0.879,42.85c-1.172,1.171-1.172,3.071,0,4.242\\n              C1.465,47.677,2.233,47.97,3,47.97s1.535-0.293,2.121-0.879l18.865-18.864L42.85,47.091c0.586,0.586,1.354,0.879,2.121,0.879\\n              s1.535-0.293,2.121-0.879c1.172-1.171,1.172-3.071,0-4.242L28.228,23.986z\");\n\t\t\tattr(svg, \"xmlns\", \"http://www.w3.org/2000/svg\");\n\t\t\tattr(svg, \"xmlns:xlink\", \"http://www.w3.org/1999/xlink\");\n\t\t\tattr(svg, \"x\", \"0px\");\n\t\t\tattr(svg, \"y\", \"0px\");\n\t\t\tattr(svg, \"viewBox\", \"0 0 47.971 47.971\");\n\t\t\tset_style(svg, \"enable-background\", \"new 0 0 47.971 47.971\");\n\t\t\tset_style(svg, \"transition\", \"fill 150ms ease-in-out\");\n\t\t\tattr(svg, \"fill\", svg_fill_value = /*closeHovered*/ ctx[2] ? '#4a4a4a' : '#9B9B9B');\n\t\t\tattr(svg, \"xml:space\", \"preserve\");\n\t\t\tattr(svg, \"class\", \"svelte-xcex94\");\n\t\t\tattr(div, \"class\", \"bn-onboard-custom bn-onboard-modal-content-close svelte-xcex94\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, div, anchor);\n\t\t\tappend(div, svg);\n\t\t\tappend(svg, g0);\n\t\t\tappend(g0, path);\n\t\t\tappend(svg, g1);\n\t\t\tappend(svg, g2);\n\t\t\tappend(svg, g3);\n\t\t\tappend(svg, g4);\n\t\t\tappend(svg, g5);\n\t\t\tappend(svg, g6);\n\t\t\tappend(svg, g7);\n\t\t\tappend(svg, g8);\n\t\t\tappend(svg, g9);\n\t\t\tappend(svg, g10);\n\t\t\tappend(svg, g11);\n\t\t\tappend(svg, g12);\n\t\t\tappend(svg, g13);\n\t\t\tappend(svg, g14);\n\t\t\tappend(svg, g15);\n\n\t\t\tif (!mounted) {\n\t\t\t\tdispose = [\n\t\t\t\t\tlisten(div, \"click\", function () {\n\t\t\t\t\t\tif (is_function(/*closeModal*/ ctx[0])) /*closeModal*/ ctx[0].apply(this, arguments);\n\t\t\t\t\t}),\n\t\t\t\t\tlisten(div, \"mouseenter\", /*mouseenter_handler*/ ctx[5]),\n\t\t\t\t\tlisten(div, \"mouseleave\", /*mouseleave_handler*/ ctx[6])\n\t\t\t\t];\n\n\t\t\t\tmounted = true;\n\t\t\t}\n\t\t},\n\t\tp(new_ctx, dirty) {\n\t\t\tctx = new_ctx;\n\n\t\t\tif (dirty & /*closeHovered*/ 4 && svg_fill_value !== (svg_fill_value = /*closeHovered*/ ctx[2] ? '#4a4a4a' : '#9B9B9B')) {\n\t\t\t\tattr(svg, \"fill\", svg_fill_value);\n\t\t\t}\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(div);\n\t\t\tmounted = false;\n\t\t\trun_all(dispose);\n\t\t}\n\t};\n}\n\nfunction create_fragment$1(ctx) {\n\tlet aside;\n\tlet section;\n\tlet t;\n\tlet aside_transition;\n\tlet current;\n\tlet mounted;\n\tlet dispose;\n\tconst default_slot_template = /*#slots*/ ctx[4].default;\n\tconst default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[3], null);\n\tlet if_block = /*closeable*/ ctx[1] && create_if_block(ctx);\n\n\treturn {\n\t\tc() {\n\t\t\taside = element(\"aside\");\n\t\t\tsection = element(\"section\");\n\t\t\tif (default_slot) default_slot.c();\n\t\t\tt = space();\n\t\t\tif (if_block) if_block.c();\n\t\t\tattr(section, \"class\", \"bn-onboard-custom bn-onboard-modal-content svelte-xcex94\");\n\t\t\tattr(aside, \"class\", \"bn-onboard-custom bn-onboard-modal svelte-xcex94\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, aside, anchor);\n\t\t\tappend(aside, section);\n\n\t\t\tif (default_slot) {\n\t\t\t\tdefault_slot.m(section, null);\n\t\t\t}\n\n\t\t\tappend(section, t);\n\t\t\tif (if_block) if_block.m(section, null);\n\t\t\tcurrent = true;\n\n\t\t\tif (!mounted) {\n\t\t\t\tdispose = [\n\t\t\t\t\tlisten(section, \"click\", click_handler),\n\t\t\t\t\tlisten(aside, \"click\", function () {\n\t\t\t\t\t\tif (is_function(/*closeModal*/ ctx[0])) /*closeModal*/ ctx[0].apply(this, arguments);\n\t\t\t\t\t})\n\t\t\t\t];\n\n\t\t\t\tmounted = true;\n\t\t\t}\n\t\t},\n\t\tp(new_ctx, [dirty]) {\n\t\t\tctx = new_ctx;\n\n\t\t\tif (default_slot) {\n\t\t\t\tif (default_slot.p && (!current || dirty & /*$$scope*/ 8)) {\n\t\t\t\t\tupdate_slot_base(\n\t\t\t\t\t\tdefault_slot,\n\t\t\t\t\t\tdefault_slot_template,\n\t\t\t\t\t\tctx,\n\t\t\t\t\t\t/*$$scope*/ ctx[3],\n\t\t\t\t\t\t!current\n\t\t\t\t\t\t? get_all_dirty_from_scope(/*$$scope*/ ctx[3])\n\t\t\t\t\t\t: get_slot_changes(default_slot_template, /*$$scope*/ ctx[3], dirty, null),\n\t\t\t\t\t\tnull\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (/*closeable*/ ctx[1]) {\n\t\t\t\tif (if_block) {\n\t\t\t\t\tif_block.p(ctx, dirty);\n\t\t\t\t} else {\n\t\t\t\t\tif_block = create_if_block(ctx);\n\t\t\t\t\tif_block.c();\n\t\t\t\t\tif_block.m(section, null);\n\t\t\t\t}\n\t\t\t} else if (if_block) {\n\t\t\t\tif_block.d(1);\n\t\t\t\tif_block = null;\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(default_slot, local);\n\n\t\t\tadd_render_callback(() => {\n\t\t\t\tif (!current) return;\n\t\t\t\tif (!aside_transition) aside_transition = create_bidirectional_transition(aside, fade, {}, true);\n\t\t\t\taside_transition.run(1);\n\t\t\t});\n\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(default_slot, local);\n\t\t\tif (!aside_transition) aside_transition = create_bidirectional_transition(aside, fade, {}, false);\n\t\t\taside_transition.run(0);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(aside);\n\t\t\tif (default_slot) default_slot.d(detaching);\n\t\t\tif (if_block) if_block.d();\n\t\t\tif (detaching && aside_transition) aside_transition.end();\n\t\t\tmounted = false;\n\t\t\trun_all(dispose);\n\t\t}\n\t};\n}\n\nconst click_handler = e => e.stopPropagation();\n\nfunction instance$1($$self, $$props, $$invalidate) {\n\tlet { $$slots: slots = {}, $$scope } = $$props;\n\n\tlet { closeModal = () => {\n\t\t\n\t} } = $$props;\n\n\tlet { closeable = true } = $$props;\n\tlet closeHovered;\n\tconst mouseenter_handler = () => $$invalidate(2, closeHovered = true);\n\tconst mouseleave_handler = () => $$invalidate(2, closeHovered = false);\n\n\t$$self.$$set = $$props => {\n\t\tif ('closeModal' in $$props) $$invalidate(0, closeModal = $$props.closeModal);\n\t\tif ('closeable' in $$props) $$invalidate(1, closeable = $$props.closeable);\n\t\tif ('$$scope' in $$props) $$invalidate(3, $$scope = $$props.$$scope);\n\t};\n\n\treturn [\n\t\tcloseModal,\n\t\tcloseable,\n\t\tcloseHovered,\n\t\t$$scope,\n\t\tslots,\n\t\tmouseenter_handler,\n\t\tmouseleave_handler\n\t];\n}\n\nclass Modal extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, instance$1, create_fragment$1, safe_not_equal, { closeModal: 0, closeable: 1 }, add_css$1);\n\t}\n}\n\n/* src/elements/Button.svelte generated by Svelte v3.59.2 */\n\nfunction add_css(target) {\n\tappend_styles(target, \"svelte-3sw9wd\", \"button.svelte-3sw9wd{outline:none;background:inherit;font-size:0.889em;font-family:inherit;padding:0.55em 1.4em;cursor:pointer;color:#4a90e2;font-family:inherit;transition:background 150ms ease-in-out;line-height:1.15;opacity:1;transition:opacity 200ms}button.svelte-3sw9wd:focus{outline:none}.bn-onboard-prepare-button-right.svelte-3sw9wd{position:absolute;right:0}.bn-onboard-prepare-button-left.svelte-3sw9wd{position:absolute;left:0}.disabled.svelte-3sw9wd{cursor:inherit;pointer-events:none;opacity:0.4}.cta.svelte-3sw9wd{outline:1px solid #4a90e2;border-radius:40px}.cta.svelte-3sw9wd:hover{background:#ecf3fc}\");\n}\n\nfunction create_fragment(ctx) {\n\tlet button;\n\tlet current;\n\tlet mounted;\n\tlet dispose;\n\tconst default_slot_template = /*#slots*/ ctx[5].default;\n\tconst default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[4], null);\n\n\treturn {\n\t\tc() {\n\t\t\tbutton = element(\"button\");\n\t\t\tif (default_slot) default_slot.c();\n\t\t\tbutton.disabled = /*disabled*/ ctx[2];\n\t\t\tattr(button, \"class\", \"bn-onboard-custom bn-onboard-prepare-button svelte-3sw9wd\");\n\t\t\ttoggle_class(button, \"disabled\", /*disabled*/ ctx[2]);\n\t\t\ttoggle_class(button, \"cta\", /*cta*/ ctx[3]);\n\t\t\ttoggle_class(button, \"bn-onboard-prepare-button-right\", /*position*/ ctx[1] === 'right');\n\t\t\ttoggle_class(button, \"bn-onboard-prepare-button-left\", /*position*/ ctx[1] === 'left');\n\t\t\ttoggle_class(button, \"bn-onboard-prepare-button-center\", /*position*/ ctx[1] !== 'left' && /*position*/ ctx[1] !== 'right');\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, button, anchor);\n\n\t\t\tif (default_slot) {\n\t\t\t\tdefault_slot.m(button, null);\n\t\t\t}\n\n\t\t\tcurrent = true;\n\n\t\t\tif (!mounted) {\n\t\t\t\tdispose = listen(button, \"click\", function () {\n\t\t\t\t\tif (is_function(/*onclick*/ ctx[0])) /*onclick*/ ctx[0].apply(this, arguments);\n\t\t\t\t});\n\n\t\t\t\tmounted = true;\n\t\t\t}\n\t\t},\n\t\tp(new_ctx, [dirty]) {\n\t\t\tctx = new_ctx;\n\n\t\t\tif (default_slot) {\n\t\t\t\tif (default_slot.p && (!current || dirty & /*$$scope*/ 16)) {\n\t\t\t\t\tupdate_slot_base(\n\t\t\t\t\t\tdefault_slot,\n\t\t\t\t\t\tdefault_slot_template,\n\t\t\t\t\t\tctx,\n\t\t\t\t\t\t/*$$scope*/ ctx[4],\n\t\t\t\t\t\t!current\n\t\t\t\t\t\t? get_all_dirty_from_scope(/*$$scope*/ ctx[4])\n\t\t\t\t\t\t: get_slot_changes(default_slot_template, /*$$scope*/ ctx[4], dirty, null),\n\t\t\t\t\t\tnull\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!current || dirty & /*disabled*/ 4) {\n\t\t\t\tbutton.disabled = /*disabled*/ ctx[2];\n\t\t\t}\n\n\t\t\tif (!current || dirty & /*disabled*/ 4) {\n\t\t\t\ttoggle_class(button, \"disabled\", /*disabled*/ ctx[2]);\n\t\t\t}\n\n\t\t\tif (!current || dirty & /*cta*/ 8) {\n\t\t\t\ttoggle_class(button, \"cta\", /*cta*/ ctx[3]);\n\t\t\t}\n\n\t\t\tif (!current || dirty & /*position*/ 2) {\n\t\t\t\ttoggle_class(button, \"bn-onboard-prepare-button-right\", /*position*/ ctx[1] === 'right');\n\t\t\t}\n\n\t\t\tif (!current || dirty & /*position*/ 2) {\n\t\t\t\ttoggle_class(button, \"bn-onboard-prepare-button-left\", /*position*/ ctx[1] === 'left');\n\t\t\t}\n\n\t\t\tif (!current || dirty & /*position*/ 2) {\n\t\t\t\ttoggle_class(button, \"bn-onboard-prepare-button-center\", /*position*/ ctx[1] !== 'left' && /*position*/ ctx[1] !== 'right');\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(default_slot, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(default_slot, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(button);\n\t\t\tif (default_slot) default_slot.d(detaching);\n\t\t\tmounted = false;\n\t\t\tdispose();\n\t\t}\n\t};\n}\n\nfunction instance($$self, $$props, $$invalidate) {\n\tlet { $$slots: slots = {}, $$scope } = $$props;\n\n\tlet { onclick = () => {\n\t\t\n\t} } = $$props;\n\n\tlet { position = '' } = $$props;\n\tlet { disabled = false } = $$props;\n\tlet { cta = true } = $$props;\n\n\t$$self.$$set = $$props => {\n\t\tif ('onclick' in $$props) $$invalidate(0, onclick = $$props.onclick);\n\t\tif ('position' in $$props) $$invalidate(1, position = $$props.position);\n\t\tif ('disabled' in $$props) $$invalidate(2, disabled = $$props.disabled);\n\t\tif ('cta' in $$props) $$invalidate(3, cta = $$props.cta);\n\t\tif ('$$scope' in $$props) $$invalidate(4, $$scope = $$props.$$scope);\n\t};\n\n\treturn [onclick, position, disabled, cta, $$scope, slots];\n}\n\nclass Button extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\n\t\tinit(\n\t\t\tthis,\n\t\t\toptions,\n\t\t\tinstance,\n\t\t\tcreate_fragment,\n\t\t\tsafe_not_equal,\n\t\t\t{\n\t\t\t\tonclick: 0,\n\t\t\t\tposition: 1,\n\t\t\t\tdisabled: 2,\n\t\t\t\tcta: 3\n\t\t\t},\n\t\t\tadd_css\n\t\t);\n\t}\n}\n\nconst HANDLE_PIN_PRESS = 'handlePinPress';\nconst BUTTON_COLOR = `#EBEBED`;\nconst BUTTON_DOT_COLOR = `#33394B`;\nconst pinButton = (value, slot, width = '64px', height = '64px') => `\n  <button\n    class=\"pin-button\"\n    style=\"width: ${width}; height: ${height};\"\n    type=\"button\"\n    onclick=\"window.${HANDLE_PIN_PRESS}(${value})\">\n      ${slot ||\n    `<svg class=\"pin-button-dot\" viewBox=\"0 0 18 18\" width=\"18\" height=\"18\">\n          <circle cx=\"9\" cy=\"9\" r=\"9\" ></circle>\n        </svg>`}\n      <div class=\"pin-button-bg\">\n  </button>\n`;\nconst pinButtons = `\n  <div class=\"pin-pad-buttons\">\n    ${[7, 8, 9, 4, 5, 6, 1, 2, 3].map(val => pinButton(val)).join('')}\n  </div>\n`;\nconst delButtonIcon = `<svg class=\"del-button-icon\" viewBox=\"0 0 24 24\" focusable=\"false\" class=\"chakra-icon css-onkibi\" aria-hidden=\"true\"><path fill=\"currentColor\" d=\"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\"></path></svg>`;\nconst pinPhraseInput = (modalType) => `\n<form id=\"pin-phrase-form\" class=\"pin-phrase-input-container\">\n  <input\n    id=\"pin-phrase-input\"\n    placeholder=\"${modalType === 'pin' ? 'PIN' : ''}\"\n    type=\"password\"\n    autocomplete=\"current-password\"\n  />\n  ${modalType === 'pin'\n    ? ` <div class=\"del-button-wrapper\">\n            ${pinButton(-1, delButtonIcon, '38px', '38px')}\n          </div>`\n    : ''}\n</form>\n`;\n// Contains styles used by both the pin\n// entry modal and the passphrase entry modal\nconst baseStyles = `\n  .keepkey-modal {\n    max-width: 22rem;\n    padding: 20px 10px;\n  }\n  .pin-phrase-input-container {\n    display: flex;\n    position: relative;\n    align-items: center;\n    margin: 20px 0;\n    width: 100%;\n  }\n  #pin-phrase-input {\n    background: inherit;\n    font-size: 0.889em;\n    font-family: inherit;\n    border-width: 1px;\n    border-style: solid;\n    border-color: #242835;\n    border-radius: 4px;\n    padding-left: 0.5rem;\n    padding-right: 4.1rem;\n    transition: opacity 150ms ease-in-out;\n    height: 42px;\n    width: 100%;\n    opacity: 0.6;\n    outline: none;\n  }\n  #pin-phrase-input:hover, #pin-phrase-input:focus {\n    opacity: 1;\n  }\n  .unlock-button {\n    height: 26px;\n    display: flex;\n    align-items: center;\n    width: 100%;\n    justify-content: center;\n  }\n  \n  /* Overrides the branding on the modal*/\n  .keepkey-modal + .bn-branding { visibility: hidden !important; }\n  .keepkey-modal .bn-onboard-prepare-button {\n    width: 100%;\n  }\n`;\nconst pinModalStyles = `\n  #entry {\n    align-items: center;\n    display: flex;\n    flex-flow: column;\n    padding: 20px;\n  }\n  .pin-pad-buttons {\n    display: grid;\n    grid-template-columns: repeat(3, 75px);\n    grid-template-rows: repeat(3, 75px);\n    align-items: center;\n    justify-items: center;\n    margin-bottom: 15px;\n  }\n  .pin-button {\n    align-items: center;\n    border-radius: 6px;\n    border: 1px solid ${BUTTON_COLOR};\n    cursor: pointer;\n    display: flex;\n    justify-content: center;\n    font-size: 18px;\n    overflow: hidden;\n    padding: 0;\n    background-color: unset;\n    overflow: hidden;\n  }\n  .pin-button-bg {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    overflow: hidden;\n    background-color: ${BUTTON_COLOR};\n    transition: opacity 100ms ease-in;\n  }\n  .pin-button-bg:hover {\n    opacity: .2;\n  }\n  .pin-button-dot {\n    fill: ${BUTTON_DOT_COLOR};\n    position: absolute;\n    pointer-events: none;\n    z-index: 2;\n  }\n  .del-button-wrapper {\n    position: absolute;\n    height: 42px;\n    width: 42px;\n    right: 2px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n  .del-button-wrapper > .pin-button {\n    border: none;\n  }\n  .del-button-icon {\n    position: absolute;\n    width: 20px;\n    z-index: 2;\n    pointer-events: none;\n  }\n  .del-button-icon + div {\n    opacity: .5;\n  }\n  .del-button-icon + div:hover {\n    opacity: 1;\n  }\n`;\nconst passphraseModalStyles = `\n  .keepkey-modal {\n    padding: 40px 30px;\n  }\n`;\nconst pinHTML = `\n    <style>${baseStyles}${pinModalStyles}</style>\n    <h2>Enter Your Pin</h2>\n    <p>\n      Use PIN layout shown on your device to find the location to press on this pin pad.\n    </p>\n    <div id=\"entry\" class=\"bn-onboard-custom\">\n      ${pinButtons}\n      ${pinPhraseInput('pin')}\n    </div>\n  `;\nconst passphraseHTML = `\n  <style>${baseStyles}${passphraseModalStyles}</style>\n  <h2 style=\"margin-bottom: 35px\">Enter Your Passphrase</h2>\n  <div id=\"entry\" class=\"bn-onboard-custom\">\n    ${pinPhraseInput('passphrase')}\n  </div>\n`;\nconst entryModal = (modalType, submit, cancel, containerElement) => {\n    const modalHtml = modalType === 'pin' ? pinHTML : passphraseHTML;\n    const getInput = () => document.getElementById('pin-phrase-input');\n    const deleteWindowProperties = () => {\n        delete window[HANDLE_PIN_PRESS];\n    };\n    if (modalType === 'pin') {\n        window[HANDLE_PIN_PRESS] = (value) => {\n            const input = getInput();\n            // A value of -1 signals a backspace\n            // e.g. we delete the last char from the input\n            input.value =\n                value === -1 ? input.value.slice(0, -1) : input.value + value;\n        };\n    }\n    const containerElementQuery = containerElement || 'body';\n    const containerEl = document.querySelector(containerElementQuery);\n    if (!containerEl) {\n        throw new Error(`Element with query ${containerElementQuery} does not exist.`);\n    }\n    // Creates a modal component which gets\n    // mounted to the body and is passed the pin html into it's slot\n    const div = document.createElement('div');\n    div.innerHTML = modalHtml;\n    div.className = 'keepkey-modal';\n    const pinModal = new Modal({\n        target: containerEl,\n        props: {\n            closeModal: () => {\n                // Cancels any action that the keepkey wallet may be doing\n                cancel();\n                deleteWindowProperties();\n                pinModal.$destroy();\n            },\n            $$slots: createSlot(div),\n            $$scope: {}\n        }\n    });\n    // Submits the pin or passphrase to the Keepkey device\n    const submitValue = async () => {\n        const value = getInput().value;\n        submit(value);\n        pinModal.$destroy();\n    };\n    const pinPhraseForm = document.getElementById('pin-phrase-form');\n    pinPhraseForm &&\n        pinPhraseForm.addEventListener('submit', e => {\n            e.preventDefault();\n            submitValue();\n        });\n    // Creates a new Button component used to trigger sending the pin to Keepkey\n    const entryEl = document.getElementById('entry');\n    if (entryEl) {\n        const span = document.createElement('span');\n        span.innerHTML = `Unlock`;\n        span.className = `unlock-button`;\n        new Button({\n            target: entryEl,\n            props: {\n                onclick: async () => {\n                    submitValue();\n                    deleteWindowProperties();\n                },\n                $$slots: createSlot(span),\n                $$scope: {}\n            }\n        });\n    }\n};\n/**\n * createSlot - creates the necessary object needed to pass\n * arbitrary html into a component's default slot\n * @param element The html element which is inserted into the components slot\n */\nfunction createSlot(element) {\n    return {\n        default: [\n            function () {\n                return {\n                    c: noop,\n                    m: function mount(target, anchor) {\n                        insert(target, element, anchor);\n                    },\n                    d: function destroy(detaching) {\n                        if (detaching) {\n                            detach(element);\n                        }\n                    },\n                    l: noop\n                };\n            }\n        ]\n    };\n}\n\n/**\n * Creates the common instance used for signing\n * transactions with hardware wallets\n * @returns the initialized common instance\n */\nconst getCommon = async ({ customNetwork, chainId }) => {\n    const { default: Common, Hardfork } = await import('@ethereumjs/common');\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    const CommonConstructor = Common.default || Common;\n    const commonOptions = {\n        // Berlin is the minimum hardfork that will allow for EIP1559\n        hardfork: Hardfork.Berlin,\n        // List of supported EIPS\n        eips: [1559]\n    };\n    let common;\n    try {\n        common = new CommonConstructor({\n            chain: customNetwork || chainId,\n            ...commonOptions\n        });\n    }\n    catch (e) {\n        if (e.message && /Chain.*not supported/.test(e.message)) {\n            common = CommonConstructor.custom({ chainId }, commonOptions);\n        }\n        else {\n            throw e;\n        }\n    }\n    return common;\n};\n/**\n * Takes in TransactionRequest and converts all BigNumber values to strings\n * @param transaction\n * @returns a transaction where all BigNumber properties are now strings\n */\nconst bigNumberFieldsToStrings = (transaction) => Object.keys(transaction).reduce((transaction, txnProperty) => ({\n    ...transaction,\n    ...(transaction[txnProperty].toHexString\n        ? {\n            [txnProperty]: transaction[txnProperty].toHexString()\n        }\n        : {})\n}), transaction);\n/**\n * Helper method for hardware wallets to build an object\n * with a request method used for making rpc requests.\n * @param getRpcUrl - callback used to get the current chain's rpc url\n * @returns An object with a request method\n * to be called when making rpc requests\n */\nconst getHardwareWalletProvider = (getRpcUrl) => ({\n    request: ({ method, params }) => fetch(getRpcUrl(), {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            jsonrpc: '2.0',\n            id: '42',\n            method,\n            params\n        })\n    }).then(async (res) => {\n        const response = (await res.json());\n        if ('error' in response) {\n            throw response.error;\n        }\n        return response.result;\n    })\n});\n\nexport { accountSelect, bigNumberFieldsToStrings, entryModal, getCommon, getHardwareWalletProvider };\n"],"names":[],"sourceRoot":"","ignoreList":[0]}