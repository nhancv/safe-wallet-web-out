{"version":3,"file":"static/chunks/pages/address-book-2c92eb095bc1c50a.js","mappings":"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OACX,OAAQ,GAAQ,CACzD,UACA,IAFyD,GAEzD,IACA,sBACA,YACA,mCACA,mBACA,CAAG,MAA+B,eAAmB,UACrD,IACA,CAAG,SAA8B,eAAmB,MACpD,gCACA,CAAG,CAAE,IAAU,EAAqB,SAA1B,IAAU,EAAmC,SACvD,yCACA,mBACA,mBACA,0HACA,cACA,EAAG,EAAI,IAAW,EAAsB,UAA3B,IAAW,CAAmC,SAC3D,oCACA,mIACA,cACA,EAAG,QAAqC,eAAmB,SAC3D,oCACA,mIACA,cACA,EAAG,QAAqC,eAAmB,SAC3D,oCACA,4IACA,cACA,EAAG,QAAqC,eAAmB,SAC3D,oCACA,sJACA,cACA,EAAG,QAAqC,eAAmB,SAC3D,oCACA,4IACA,cACA,EAAG,QAAqC,eAAmB,SAC3D,oCACA,sJACA,cACA,EAAG,QAAqC,eAAmB,SAC3D,oCACA,mBACA,mBACA,0pBACA,cACA,EAAG,EAAiB,eAAmB,SACvC,qBACA,OACA,gBACA,CAAK,CACL,2BACA,KACA,KACA,SACA,SACA,CAAG,OAAqC,eAAmB,WAC3D,WACA,WACA,KACA,YACA,EAAG,SAA8B,eAAmB,MACpD,4BACA,CAAG,CAAe,eAAmB,WACrC,mCACA,WACA,WACA,KACA,cACA,CAAG,EAAgB,eAAmB,SACtC,UACA,UACA,cACA,eACA,cACA,CAAG,EAAgB,eAAmB,SACtC,UACA,UACA,cACA,eACA,cACA,CAAG,EAAgB,eAAmB,SACtC,UACA,UACA,cACA,eACA,cACA,CAAG,EAAgB,eAAmB,SACtC,UACA,UACA,cACA,eACA,cACA,CAAG,EAAgB,eAAmB,SACtC,UACA,UACA,cACA,eACA,cACA,CAAG,EAAgB,eAAmB,SACtC,UACA,UACA,cACA,cACA,cACA,CAAG,EAAgB,eAAmB,SACtC,SACA,UACA,aACA,eACA,cACA,CAAG,EAAgB,eAAmB,SACtC,UACA,UACA,cACA,cACA,cACA,CAAG,EAAgB,eAAmB,SACtC,UACA,UACA,cACA,cACA,cACA,CAAG,EAAgB,eAAmB,SACtC,UACA,UACA,cACA,cACA,cACA,CAAG,EAAgB,eAA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","sources":["webpack://_N_E/./src/components/common/Mui/index.tsx","webpack://_N_E/./src/components/common/EnhancedTable/index.tsx","webpack://_N_E/?7015","webpack://_N_E/./src/components/common/EnhancedTable/styles.module.css","webpack://_N_E/./src/components/address-book/ExportDialog/index.tsx","webpack://_N_E/./src/components/address-book/ImportDialog/validation.ts","webpack://_N_E/./src/components/address-book/ImportDialog/index.tsx","webpack://_N_E/./src/components/address-book/RemoveDialog/index.tsx","webpack://_N_E/./public/images/common/add-outlined.svg","webpack://_N_E/./src/components/address-book/AddressBookHeader/index.tsx","webpack://_N_E/./public/images/address-book/no-entries.svg","webpack://_N_E/./src/components/address-book/AddressBookTable/index.tsx","webpack://_N_E/./src/pages/address-book.tsx","webpack://_N_E/./src/components/address-book/ImportDialog/styles.module.css","webpack://_N_E/./src/components/common/PageHeader/index.tsx","webpack://_N_E/./src/components/common/PageHeader/styles.module.css"],"sourcesContent":["export * from \"/app/apps/web/src/components/common/Mui/index.tsx\"","import type { ChangeEvent, ReactNode } from 'react'\nimport React, { useState } from 'react'\nimport Box from '@mui/material/Box'\nimport Table from '@mui/material/Table'\nimport TableBody from '@mui/material/TableBody'\nimport type { SortDirection } from '@mui/material/TableCell'\nimport TableCell from '@mui/material/TableCell'\nimport TableContainer from '@mui/material/TableContainer'\nimport TableHead from '@mui/material/TableHead'\nimport TablePagination from '@mui/material/TablePagination'\nimport TableRow from '@mui/material/TableRow'\nimport TableSortLabel from '@mui/material/TableSortLabel'\nimport Paper from '@mui/material/Paper'\nimport { visuallyHidden } from '@mui/utils'\nimport classNames from 'classnames'\n\nimport css from './styles.module.css'\nimport { Collapse } from '@mui/material'\n\ntype EnhancedCell = {\n  content: ReactNode\n  rawValue: string | number | null\n  sticky?: boolean\n}\n\ntype EnhancedRow = {\n  selected?: boolean\n  collapsed?: boolean\n  key?: string\n  cells: Record<string, EnhancedCell>\n}\n\ntype EnhancedHeadCell = {\n  id: string\n  label: ReactNode\n  width?: string\n  align?: string\n  sticky?: boolean\n}\n\nfunction descendingComparator(a: string | number, b: string | number) {\n  if (b < a) {\n    return -1\n  }\n  if (b > a) {\n    return 1\n  }\n  return 0\n}\n\nfunction getComparator(order: SortDirection, orderBy: string) {\n  return (a: EnhancedRow, b: EnhancedRow) => {\n    const aValue = a.cells[orderBy].rawValue\n    const bValue = b.cells[orderBy].rawValue\n\n    // Handle null/undefined values - always sort to end\n    if (aValue == null) return 1\n    if (bValue == null) return -1\n    if (aValue == null && bValue == null) return 0\n\n    // Use existing comparator for non-null values\n    return order === 'desc' ? descendingComparator(aValue, bValue) : -descendingComparator(aValue, bValue)\n  }\n}\n\ntype EnhancedTableHeadProps = {\n  headCells: EnhancedHeadCell[]\n  onRequestSort: (property: string) => void\n  order: 'asc' | 'desc'\n  orderBy: string\n}\n\nfunction EnhancedTableHead(props: EnhancedTableHeadProps) {\n  const { headCells, order, orderBy, onRequestSort } = props\n  const createSortHandler = (property: string) => () => {\n    onRequestSort(property)\n  }\n\n  return (\n    <TableHead>\n      <TableRow>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align=\"left\"\n            padding=\"normal\"\n            sortDirection={orderBy === headCell.id ? order : false}\n            sx={{\n              width: headCell.width ? headCell.width : '',\n              textAlign: headCell.align ? headCell.align : '',\n            }}\n            className={classNames({ sticky: headCell.sticky })}\n          >\n            {headCell.label && (\n              <>\n                <TableSortLabel\n                  active={orderBy === headCell.id}\n                  direction={orderBy === headCell.id ? order : 'asc'}\n                  onClick={createSortHandler(headCell.id)}\n                  sx={{ mr: [0, '-26px'], textWrap: 'nowrap' }}\n                >\n                  {headCell.label}\n                  {orderBy === headCell.id ? (\n                    <Box component=\"span\" sx={visuallyHidden}>\n                      {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                    </Box>\n                  ) : null}\n                </TableSortLabel>\n              </>\n            )}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  )\n}\n\nexport type EnhancedTableProps = {\n  rows: EnhancedRow[]\n  headCells: EnhancedHeadCell[]\n  mobileVariant?: boolean\n}\n\nconst pageSizes = [10, 25, 100]\n\nfunction EnhancedTable({ rows, headCells, mobileVariant }: EnhancedTableProps) {\n  const [order, setOrder] = useState<'asc' | 'desc'>('asc')\n  const [orderBy, setOrderBy] = useState<string>('')\n  const [page, setPage] = useState<number>(0)\n  const [rowsPerPage, setRowsPerPage] = useState<number>(pageSizes[1])\n\n  const handleRequestSort = (property: string) => {\n    const isAsc = orderBy === property && order === 'asc'\n    setOrder(isAsc ? 'desc' : 'asc')\n    setOrderBy(property)\n  }\n\n  const handleChangePage = (_: any, newPage: number) => {\n    setPage(newPage)\n  }\n\n  const handleChangeRowsPerPage = (event: ChangeEvent<HTMLInputElement>) => {\n    setRowsPerPage(parseInt(event.target.value, 10))\n    setPage(0)\n  }\n\n  const orderedRows = orderBy ? rows.slice().sort(getComparator(order, orderBy)) : rows\n  const pagedRows = orderedRows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n\n  return (\n    <Box sx={{ width: '100%' }}>\n      <TableContainer data-testid=\"table-container\" component={Paper} sx={{ width: '100%', mb: 2 }}>\n        <Table aria-labelledby=\"tableTitle\" className={mobileVariant ? css.mobileColumn : undefined}>\n          <EnhancedTableHead headCells={headCells} order={order} orderBy={orderBy} onRequestSort={handleRequestSort} />\n          <TableBody>\n            {pagedRows.length > 0 ? (\n              pagedRows.map((row, index) => (\n                <TableRow\n                  data-testid=\"table-row\"\n                  tabIndex={-1}\n                  key={row.key ?? index}\n                  selected={row.selected}\n                  className={row.collapsed ? css.collapsedRow : undefined}\n                >\n                  {Object.entries(row.cells).map(([key, cell]) => (\n                    <TableCell\n                      key={key}\n                      className={classNames({\n                        sticky: cell.sticky,\n                        [css.collapsedCell]: row.collapsed,\n                      })}\n                    >\n                      <Collapse key={index} in={!row.collapsed} enter={false}>\n                        {cell.content}\n                      </Collapse>\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            ) : (\n              // Prevent no `tbody` rows hydration error\n              <TableRow>\n                <TableCell />\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n      </TableContainer>\n\n      {(rows.length > pageSizes[0] || rowsPerPage !== pageSizes[1]) && (\n        <TablePagination\n          data-testid=\"table-pagination\"\n          rowsPerPageOptions={pageSizes}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onPageChange={handleChangePage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n      )}\n    </Box>\n  )\n}\n\nexport default EnhancedTable\n","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/address-book\",\n      function () {\n        return require(\"private-next-pages/address-book.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/address-book\"])\n      });\n    }\n  ","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableCell\":\"styles_tableCell___4sMa\",\"collapsedCell\":\"styles_collapsedCell__M_3f8\",\"collapsedRow\":\"styles_collapsedRow__Zwb1R\",\"actions\":\"styles_actions__ZIRNt\",\"mobileColumn\":\"styles_mobileColumn__ubx77\"};","import DialogContent from '@mui/material/DialogContent'\nimport DialogActions from '@mui/material/DialogActions'\nimport Button from '@mui/material/Button'\nimport Typography from '@mui/material/Typography'\nimport { useCSVDownloader } from 'react-papaparse'\nimport type { SyntheticEvent } from 'react'\nimport { useMemo, type ReactElement } from 'react'\n\nimport ModalDialog from '@/components/common/ModalDialog'\nimport { type AddressBookState, selectAllAddressBooks } from '@/store/addressBookSlice'\nimport { useAppSelector } from '@/store'\nimport { trackEvent, ADDRESS_BOOK_EVENTS } from '@/services/analytics'\nimport ExternalLink from '@/components/common/ExternalLink'\nimport madProps from '@/utils/mad-props'\nimport { HelpCenterArticle } from '@safe-global/utils/config/constants'\n\nconst COL_1 = 'address'\nconst COL_2 = 'name'\nconst COL_3 = 'chainId'\n\ntype CsvData = { [COL_1]: string; [COL_2]: string; [COL_3]: string }[]\n\nexport const _getCsvData = (addressBooks: AddressBookState): CsvData => {\n  const csvData = Object.entries(addressBooks).reduce<CsvData>((acc, [chainId, entries]) => {\n    Object.entries(entries).forEach(([address, name]) => {\n      acc.push({\n        [COL_1]: address,\n        [COL_2]: name,\n        [COL_3]: chainId,\n      })\n    })\n\n    return acc\n  }, [])\n\n  return csvData\n}\n\nfunction ExportDialog({\n  allAddressBooks,\n  handleClose,\n}: {\n  allAddressBooks: AddressBookState\n  handleClose: () => void\n}): ReactElement {\n  const length = Object.values(allAddressBooks).reduce<number>((acc, entries) => acc + Object.keys(entries).length, 0)\n  const { CSVDownloader } = useCSVDownloader()\n  // safe-address-book-1970-01-01\n  const filename = `safe-address-book-${new Date().toISOString().slice(0, 10)}`\n\n  const csvData = useMemo(() => _getCsvData(allAddressBooks), [allAddressBooks])\n\n  const onSubmit = (e: SyntheticEvent) => {\n    e.preventDefault()\n\n    trackEvent(ADDRESS_BOOK_EVENTS.EXPORT)\n\n    setTimeout(() => {\n      handleClose()\n    }, 300)\n  }\n\n  return (\n    <ModalDialog open onClose={handleClose} dialogTitle=\"Export address book\" hideChainIndicator>\n      <DialogContent sx={{ p: '24px !important' }}>\n        <Typography data-testid=\"export-summary\">\n          You&apos;re about to export a CSV file with{' '}\n          <b>\n            {length} address book {length === 1 ? 'entry' : 'entries'}\n          </b>\n          .\n        </Typography>\n\n        <Typography mt={1}>\n          <ExternalLink\n            href={HelpCenterArticle.ADDRESS_BOOK_DATA}\n            title=\"Learn about the address book import and export\"\n          >\n            Learn about the address book import and export\n          </ExternalLink>\n        </Typography>\n      </DialogContent>\n\n      <DialogActions>\n        <Button onClick={handleClose}>Cancel</Button>\n        <CSVDownloader filename={filename} bom config={{ delimiter: ',' }} data={csvData} style={{ order: 2 }}>\n          <Button data-testid=\"export-modal-btn\" variant=\"contained\" disableElevation onClick={onSubmit}>\n            Export\n          </Button>\n        </CSVDownloader>\n      </DialogActions>\n    </ModalDialog>\n  )\n}\n\nconst useAllAddressBooks = () => useAppSelector(selectAllAddressBooks)\n\nexport default madProps(ExportDialog, {\n  allAddressBooks: useAllAddressBooks,\n})\n","import type { ParseResult } from 'papaparse'\n\nimport { validateAddress } from '@safe-global/utils/utils/validation'\n\nexport const abCsvReaderValidator = ({ size }: File): string[] | undefined => {\n  if (size > 1_000_000) {\n    return ['Address book cannot be larger than 1MB']\n  }\n}\n\nexport const hasValidAbHeader = (header: string[]) => {\n  return header.length === 3 && header[0] === 'address' && header[1] === 'name' && header[2] === 'chainId'\n}\n\nexport const hasValidAbEntryAddresses = (entries: string[][]) => {\n  return entries.every((entry) => entry.length >= 1 && !validateAddress(entry[0]))\n}\n\nexport const hasValidAbNames = (entries: string[][]) => {\n  return entries.every((entry) => entry.length >= 2 && !!entry[1])\n}\n\nexport const abOnUploadValidator = ({ data, errors }: ParseResult<string[]>): string | undefined => {\n  const [header, ...entries] = data\n\n  // papaparse error\n  if (errors.length > 0) {\n    return errors[0].message\n  }\n\n  // Empty CSV\n  if (data.length === 0) {\n    return 'CSV file is empty'\n  }\n\n  // Wrong header\n  if (!hasValidAbHeader(header)) {\n    return 'Invalid or corrupt address book header'\n  }\n\n  // No entries\n  if (entries.length === 0) {\n    return 'No entries found in address book'\n  }\n\n  // We + 2 to each row to make up for header and index\n\n  // An entry has invalid address\n  if (!hasValidAbEntryAddresses(entries)) {\n    const i = entries.findIndex((entry) => (entry.length >= 1 ? validateAddress(entry[0]) : true))\n    return `Address book contains an invalid address on row ${i + 2}`\n  }\n\n  // An entry has invalid name\n  if (!hasValidAbNames(entries)) {\n    const i = entries.findIndex((entry) => (entry.length >= 2 ? !entry[1] : true))\n    return `Address book contains an invalid name on row ${i + 2}`\n  }\n}\n","import DialogContent from '@mui/material/DialogContent'\nimport DialogActions from '@mui/material/DialogActions'\nimport Button from '@mui/material/Button'\nimport Typography from '@mui/material/Typography'\nimport { useCSVReader, formatFileSize } from 'react-papaparse'\nimport type { ParseResult } from 'papaparse'\nimport { type ReactElement, useState, type MouseEvent, useMemo } from 'react'\n\nimport ModalDialog from '@/components/common/ModalDialog'\nimport { upsertAddressBookEntries } from '@/store/addressBookSlice'\nimport { useAppDispatch } from '@/store'\n\nimport css from './styles.module.css'\nimport { trackEvent, ADDRESS_BOOK_EVENTS } from '@/services/analytics'\nimport { abCsvReaderValidator, abOnUploadValidator } from './validation'\nimport ErrorMessage from '@/components/tx/ErrorMessage'\nimport { Errors, logError } from '@/services/exceptions'\nimport FileUpload, { FileTypes, type FileInfo } from '@/components/common/FileUpload'\nimport ExternalLink from '@/components/common/ExternalLink'\nimport { BRAND_NAME } from '@/config/constants'\nimport { HelpCenterArticle } from '@safe-global/utils/config/constants'\n\ntype AddressBookCSVRow = ['address', 'name', 'chainId']\n\n// https://react-papaparse.js.org/docs#errors\ntype PapaparseErrorType = {\n  type: 'Quotes' | 'Delimiter' | 'FieldMismatch'\n  code: 'MissingQuotes' | 'UndetectableDelimiter' | 'TooFewFields' | 'TooManyFields'\n  message: string\n  row?: number\n  index?: number\n}\n\nconst hasEntry = (entry: string[]) => {\n  return entry.length === 3 && entry[0] && entry[1] && entry[2]\n}\n\nconst ImportDialog = ({ handleClose }: { handleClose: () => void }): ReactElement => {\n  const [zoneHover, setZoneHover] = useState<boolean>(false)\n  const [csvData, setCsvData] = useState<ParseResult<AddressBookCSVRow>>()\n  const [error, setError] = useState<string>()\n\n  // Count how many entries are in the CSV file\n  const [entryCount, chainCount] = useMemo(() => {\n    if (!csvData) return [0, 0]\n    const entries = csvData.data.slice(1).filter(hasEntry)\n    const entryLen = entries.length\n    const chainLen = new Set(entries.map((entry) => entry[2].trim())).size\n    return [entryLen, chainLen]\n  }, [csvData])\n\n  const dispatch = useAppDispatch()\n  const { CSVReader } = useCSVReader()\n\n  const handleImport = () => {\n    if (!csvData) {\n      return\n    }\n\n    const [, ...entries] = csvData.data\n\n    for (const entry of entries) {\n      const [address, name, chainId] = entry\n      dispatch(upsertAddressBookEntries({ address, name, chainIds: [chainId.trim()] }))\n    }\n\n    trackEvent({ ...ADDRESS_BOOK_EVENTS.IMPORT, label: entries.length })\n\n    handleClose()\n  }\n\n  return (\n    <ModalDialog open onClose={handleClose} dialogTitle=\"Import address book\" hideChainIndicator>\n      <DialogContent>\n        <CSVReader\n          accept=\"text/csv\"\n          multiple={false}\n          onDragOver={() => {\n            setZoneHover(true)\n          }}\n          onDragLeave={() => {\n            setZoneHover(false)\n          }}\n          validator={abCsvReaderValidator}\n          onUploadRejected={(result: { file: File; errors?: Array<Error | string | PapaparseErrorType> }[]) => {\n            setZoneHover(false)\n            setError(undefined)\n\n            // csvReaderValidator error\n            const error = result?.[0].errors?.pop()\n\n            if (error) {\n              const errorDescription = typeof error === 'string' ? error.toString() : error.message\n              setError(errorDescription)\n              logError(Errors._703, errorDescription)\n            }\n          }}\n          onUploadAccepted={(result: ParseResult<['address', 'name', 'chainId']>) => {\n            setZoneHover(false)\n            setError(undefined)\n\n            // Remove empty rows\n            const cleanResult = {\n              ...result,\n              data: result.data.filter(hasEntry),\n            }\n\n            const message = abOnUploadValidator(cleanResult)\n\n            if (message) {\n              setError(message)\n            } else {\n              setCsvData(cleanResult)\n            }\n          }}\n        >\n          {/* https://github.com/Bunlong/react-papaparse/blob/master/src/useCSVReader.tsx */}\n          {({ getRootProps, acceptedFile, getRemoveFileProps }: any) => {\n            const { onClick } = getRemoveFileProps()\n\n            const onRemove = (e: MouseEvent<HTMLSpanElement>) => {\n              setCsvData(undefined)\n              setError(undefined)\n              onClick(e)\n            }\n\n            const fileInfo: FileInfo | undefined = acceptedFile\n              ? {\n                  name: acceptedFile.name,\n                  additionalInfo: formatFileSize(acceptedFile.size),\n                  summary: [\n                    <Typography data-testid=\"summary-message\" key=\"abSummary\">\n                      {`Found ${entryCount} entries on ${chainCount} ${chainCount > 1 ? 'chains' : 'chain'}`}\n                    </Typography>,\n                  ],\n                }\n              : undefined\n\n            return (\n              <FileUpload\n                fileInfo={fileInfo}\n                fileType={FileTypes.CSV}\n                getRootProps={getRootProps}\n                isDragActive={zoneHover}\n                onRemove={onRemove}\n              />\n            )\n          }}\n        </CSVReader>\n\n        <div className={css.horizontalDivider} />\n\n        {error && <ErrorMessage>{error}</ErrorMessage>}\n\n        <Typography>\n          Only CSV files exported from a {BRAND_NAME} can be imported.\n          <br />\n          <ExternalLink\n            href={HelpCenterArticle.ADDRESS_BOOK_DATA}\n            title=\"Learn about the address book import and export\"\n          >\n            Learn about the address book import and export\n          </ExternalLink>\n        </Typography>\n      </DialogContent>\n      <DialogActions>\n        <Button data-testid=\"cancel-btn\" onClick={handleClose}>\n          Cancel\n        </Button>\n        <Button\n          data-testid=\"import-btn\"\n          onClick={handleImport}\n          variant=\"contained\"\n          disableElevation\n          disabled={!csvData || !!error}\n        >\n          Import\n        </Button>\n      </DialogActions>\n    </ModalDialog>\n  )\n}\n\nexport default ImportDialog\n","import DialogContent from '@mui/material/DialogContent'\nimport DialogActions from '@mui/material/DialogActions'\nimport Typography from '@mui/material/Typography'\nimport Button from '@mui/material/Button'\nimport type { ReactElement } from 'react'\n\nimport ModalDialog from '@/components/common/ModalDialog'\nimport { useAppDispatch } from '@/store'\nimport { removeAddressBookEntry } from '@/store/addressBookSlice'\nimport useChainId from '@/hooks/useChainId'\nimport useAddressBook from '@/hooks/useAddressBook'\n\nconst RemoveDialog = ({ handleClose, address }: { handleClose: () => void; address: string }): ReactElement => {\n  const dispatch = useAppDispatch()\n  const chainId = useChainId()\n  const addressBook = useAddressBook()\n\n  const name = addressBook?.[address]\n\n  const handleConfirm = () => {\n    dispatch(removeAddressBookEntry({ chainId, address }))\n    handleClose()\n  }\n\n  return (\n    <ModalDialog open onClose={handleClose} dialogTitle=\"Delete entry\">\n      <DialogContent sx={{ p: '24px !important' }}>\n        <Typography>\n          Are you sure you want to permanently delete <b>{name}</b> from your address book?\n        </Typography>\n      </DialogContent>\n\n      <DialogActions>\n        <Button onClick={handleClose}>Cancel</Button>\n        <Button onClick={handleConfirm} variant=\"danger\" disableElevation>\n          Delete\n        </Button>\n      </DialogActions>\n    </ModalDialog>\n  )\n}\n\nexport default RemoveDialog\n","var _path, _path2;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (-1 !== e.indexOf(n)) continue; t[n] = r[n]; } return t; }\nimport * as React from \"react\";\nvar SvgAddOutlined = function SvgAddOutlined(_ref) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M22 12C22 17.5228 17.5228 22 12 22C6.47715 22 2 17.5228 2 12C2 6.47715 6.47715 2 12 2C17.5228 2 22 6.47715 22 12ZM4 12C4 16.4183 7.58172 20 12 20C16.4183 20 20 16.4183 20 12C20 7.58172 16.4183 4 12 4C7.58172 4 4 7.58172 4 12Z\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M13 11H16C16.5523 11 17 11.4477 17 12C17 12.5523 16.5523 13 16 13H13V16C13 16.5523 12.5523 17 12 17C11.4477 17 11 16.5523 11 16V13H8C7.44772 13 7 12.5523 7 12C7 11.4477 7.44772 11 8 11H11V8C11 7.44772 11.4477 7 12 7C12.5523 7 13 7.44772 13 8V11Z\"\n  })));\n};\nexport default SvgAddOutlined;","import { Button, SvgIcon, Grid } from '@mui/material'\nimport type { ReactElement, ElementType } from 'react'\nimport InputAdornment from '@mui/material/InputAdornment'\nimport SearchIcon from '@/public/images/common/search.svg'\nimport TextField from '@mui/material/TextField'\n\nimport Track from '@/components/common/Track'\nimport { ADDRESS_BOOK_EVENTS } from '@/services/analytics/events/addressBook'\nimport PageHeader from '@/components/common/PageHeader'\nimport { ModalType } from '../AddressBookTable'\nimport { useAppSelector } from '@/store'\nimport { type AddressBookState, selectAllAddressBooks } from '@/store/addressBookSlice'\nimport ImportIcon from '@/public/images/common/import.svg'\nimport ExportIcon from '@/public/images/common/export.svg'\nimport AddCircleIcon from '@/public/images/common/add-outlined.svg'\nimport mapProps from '@/utils/mad-props'\n\nconst HeaderButton = ({\n  icon,\n  onClick,\n  disabled,\n  children,\n}: {\n  icon: ElementType\n  onClick: () => void\n  disabled?: boolean\n  children: string\n}): ReactElement => {\n  const svg = <SvgIcon component={icon} inheritViewBox fontSize=\"small\" />\n\n  return (\n    <Button onClick={onClick} disabled={disabled} variant=\"text\" color=\"primary\" size=\"small\" startIcon={svg}>\n      {children}\n    </Button>\n  )\n}\n\ntype Props = {\n  allAddressBooks: AddressBookState\n  handleOpenModal: (type: ModalType) => () => void\n  searchQuery: string\n  onSearchQueryChange: (searchQuery: string) => void\n}\n\nfunction AddressBookHeader({\n  allAddressBooks,\n  handleOpenModal,\n  searchQuery,\n  onSearchQueryChange,\n}: Props): ReactElement {\n  const canExport = Object.values(allAddressBooks).some((addressBook) => Object.keys(addressBook || {}).length > 0)\n\n  return (\n    <PageHeader\n      title=\"Address book\"\n      noBorder\n      action={\n        <Grid\n          container\n          spacing={1}\n          sx={{\n            pb: 1,\n          }}\n        >\n          <Grid item xs={12} md={5} xl={4.5}>\n            <TextField\n              placeholder=\"Search\"\n              variant=\"filled\"\n              hiddenLabel\n              value={searchQuery}\n              onChange={(e) => {\n                onSearchQueryChange(e.target.value)\n              }}\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <SvgIcon component={SearchIcon} inheritViewBox color=\"border\" />\n                  </InputAdornment>\n                ),\n                disableUnderline: true,\n              }}\n              fullWidth\n              size=\"small\"\n            />\n          </Grid>\n          <Grid\n            item\n            xs={12}\n            md={7}\n            sx={{\n              display: 'flex',\n              justifyContent: ['space-between', , 'flex-end'],\n              alignItems: 'center',\n            }}\n          >\n            <Track {...ADDRESS_BOOK_EVENTS.IMPORT_BUTTON}>\n              <HeaderButton onClick={handleOpenModal(ModalType.IMPORT)} icon={ImportIcon}>\n                Import\n              </HeaderButton>\n            </Track>\n\n            <Track {...ADDRESS_BOOK_EVENTS.DOWNLOAD_BUTTON}>\n              <HeaderButton onClick={handleOpenModal(ModalType.EXPORT)} icon={ExportIcon} disabled={!canExport}>\n                Export\n              </HeaderButton>\n            </Track>\n\n            <Track {...ADDRESS_BOOK_EVENTS.CREATE_ENTRY}>\n              <HeaderButton onClick={handleOpenModal(ModalType.ENTRY)} icon={AddCircleIcon}>\n                Create entry\n              </HeaderButton>\n            </Track>\n          </Grid>\n        </Grid>\n      }\n    />\n  )\n}\n\nconst useAllAddressBooks = () => useAppSelector(selectAllAddressBooks)\n\nexport default mapProps(AddressBookHeader, {\n  allAddressBooks: useAllAddressBooks,\n})\n","var _path, _path2, _path3, _path4, _path5, _path6, _path7, _path8, _circle, _g, _path9, _path10, _circle2, _line, _defs;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (-1 !== e.indexOf(n)) continue; t[n] = r[n]; } return t; }\nimport * as React from \"react\";\nvar SvgNoEntries = function SvgNoEntries(_ref) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 136,\n    height: 110,\n    viewBox: \"0 0 136 110\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"g\", {\n    clipPath: \"url(#clip0_876_38488)\"\n  }, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    className: \"illustration-background-fill\",\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M68 5C95.6141 5 118 27.3859 118 55C118 82.613 95.6141 105 68 105C40.387 105 18 82.613 18 55C18 27.3859 40.387 5 68 5Z\",\n    fill: \"#303033\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    className: \"illustration-light-fill\",\n    d: \"M30.2815 80.743V51.1812C40.8615 50.3099 46.9294 54.9672 48.6409 57.4047V88.0556C44.4089 80.8363 34.638 80.1725 30.2815 80.743Z\",\n    fill: \"#636669\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    className: \"illustration-light-fill\",\n    d: \"M68.2449 80.743V51.1812C57.6649 50.3099 51.597 54.9672 49.8855 57.4047V88.0556C54.1175 80.8363 63.8884 80.1725 68.2449 80.743Z\",\n    fill: \"#636669\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    className: \"illustration-light-fill\",\n    d: \"M26.9536 85.289C36.7245 83.7331 44.1461 85.9373 46.6355 87.2339C41.9679 82.0683 32.9697 81.6068 29.0541 82.0217V54.4048H26.9536V85.289Z\",\n    fill: \"#636669\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    className: \"illustration-light-fill\",\n    d: \"M23.6731 89.4213C29.3987 87.1808 42.6155 88.9026 47.6721 89.4213C45.0583 86.5584 31.7729 86.1128 25.8087 86.6055V57.1993H23.6731L23.6731 89.4213Z\",\n    fill: \"#636669\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    className: \"illustration-light-fill\",\n    d: \"M71.8828 85.289C62.1119 83.7331 54.6903 85.9373 52.2009 87.2339C56.8686 82.0683 65.8667 81.6068 69.7824 82.0217V54.4048H71.8828V85.289Z\",\n    fill: \"#636669\"\n  })), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    className: \"illustration-light-fill\",\n    d: \"M75.1633 89.4213C69.4377 87.1808 56.2209 88.9026 51.1643 89.4213C53.7782 86.5584 67.0635 86.1128 73.0277 86.6055V57.1993H75.1633L75.1633 89.4213Z\",\n    fill: \"#636669\"\n  })), _path8 || (_path8 = /*#__PURE__*/React.createElement(\"path\", {\n    className: \"illustration-light-fill\",\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M110.783 38.7429L107.813 34.1143L112.345 31.5843L115.218 36.0633C115.225 36.074 115.175 36.206 115.184 36.2171L110.783 38.7429ZM90.5244 50.2634L86.6445 49.3201L87.5475 45.606L105.192 35.5812L108.178 40.2348L90.5244 50.2634ZM118.241 36.8267C118.422 36.0363 118.268 35.2274 117.83 34.5853L114.978 30.1398C114.561 29.447 113.852 28.931 113.031 28.7207L112.99 28.7109C112.165 28.5102 111.288 28.6303 110.582 29.0364L85.381 43.3908C85.0349 43.5873 84.7864 43.9111 84.6948 44.288L83.3039 50.0087C83.1134 50.7923 83.629 51.5885 84.4574 51.7899L90.454 53.2479C90.851 53.3445 91.2658 53.2892 91.6104 53.0923L116.822 38.733C117.542 38.3167 118.06 37.6217 118.241 36.8267Z\",\n    fill: \"#636669\"\n  })), /*#__PURE__*/React.createElement(\"mask\", {\n    id: \"mask0_876_38488\",\n    style: {\n      maskType: \"alpha\"\n    },\n    maskUnits: \"userSpaceOnUse\",\n    x: 32,\n    y: 19,\n    width: 25,\n    height: 25\n  }, _circle || (_circle = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 44.5229,\n    cy: 31.5222,\n    r: 12,\n    fill: \"white\"\n  }))), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    mask: \"url(#mask0_876_38488)\"\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    className: \"illustration-main-fill\",\n    cx: 44.5229,\n    cy: 31.5222,\n    r: 12,\n    fill: \"#12FF80\"\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    x: 50.4651,\n    y: 34.5569,\n    width: 3.06224,\n    height: 2.86144,\n    fill: \"#636669\"\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    x: 47.6907,\n    y: 34.5569,\n    width: 5.83637,\n    height: 2.86144,\n    fill: \"#636669\"\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    x: 47.6907,\n    y: 34.5569,\n    width: 5.83637,\n    height: 2.86144,\n    fill: \"#636669\"\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    x: 25.7788,\n    y: 22.5658,\n    width: 15.6816,\n    height: 2.86144,\n    fill: \"#636669\"\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    x: 47.4028,\n    y: 22.5658,\n    width: 11.5978,\n    height: 2.86144,\n    fill: \"#636669\"\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    x: 29.4863,\n    y: 25.4272,\n    width: 6.08595,\n    height: 3.2335,\n    fill: \"#636669\"\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    x: 35.572,\n    y: 37.4183,\n    width: 2.7736,\n    height: 4.93624,\n    fill: \"#636669\"\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    x: 50.4373,\n    y: 37.4183,\n    width: 3.05155,\n    height: 3.2335,\n    fill: \"#636669\"\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    x: 38.3457,\n    y: 40.3223,\n    width: 17.3977,\n    height: 3.2335,\n    fill: \"#636669\"\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    x: 53.5273,\n    y: 25.4272,\n    width: 6.08595,\n    height: 3.2335,\n    fill: \"#636669\"\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    x: 32.5288,\n    y: 28.6606,\n    width: 6.08595,\n    height: 2.86144,\n    fill: \"#636669\"\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    x: 50.6086,\n    y: 28.6606,\n    width: 6.08595,\n    height: 2.86144,\n    fill: \"#636669\"\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    x: 41.605,\n    y: 28.6606,\n    width: 5.83637,\n    height: 2.86144,\n    fill: \"#636669\"\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    x: 41.4607,\n    y: 37.4183,\n    width: 5.94189,\n    height: 2.90381,\n    fill: \"#636669\"\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    x: 35.572,\n    y: 34.5569,\n    width: 5.8886,\n    height: 2.86144,\n    fill: \"#636669\"\n  }))), _path9 || (_path9 = /*#__PURE__*/React.createElement(\"path\", {\n    className: \"illustration-light-fill\",\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M86.8302 23.7201C86.8302 30.3935 81.6068 35.8034 75.1635 35.8034C68.7202 35.8034 63.4968 30.3935 63.4968 23.7201C63.4968 17.0466 68.7202 11.6367 75.1635 11.6367C81.6068 11.6367 86.8302 17.0466 86.8302 23.7201ZM65.8302 23.7201C65.8302 29.0588 70.0088 33.3867 75.1635 33.3867C80.3182 33.3867 84.4968 29.0588 84.4968 23.7201C84.4968 18.3813 80.3182 14.0534 75.1635 14.0534C70.0088 14.0534 65.8302 18.3813 65.8302 23.7201Z\",\n    fill: \"#636669\"\n  })), _path10 || (_path10 = /*#__PURE__*/React.createElement(\"path\", {\n    className: \"illustration-light-fill\",\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M76.3303 22.5118H79.8303C80.4747 22.5118 80.997 23.0528 80.997 23.7201C80.997 24.3875 80.4747 24.9285 79.8303 24.9285H76.3303V28.5535C76.3303 29.2208 75.808 29.7618 75.1637 29.7618C74.5193 29.7618 73.997 29.2208 73.997 28.5535V24.9285H70.497C69.8527 24.9285 69.3303 24.3875 69.3303 23.7201C69.3303 23.0528 69.8527 22.5118 70.497 22.5118H73.997V18.8868C73.997 18.2195 74.5193 17.6785 75.1637 17.6785C75.808 17.6785 76.3303 18.2195 76.3303 18.8868V22.5118Z\",\n    fill: \"#636669\"\n  })), _circle2 || (_circle2 = /*#__PURE__*/React.createElement(\"circle\", {\n    className: \"illustration-background-fill illustration-light-stroke\",\n    cx: 94.6408,\n    cy: 75.1496,\n    r: 9.17835,\n    transform: \"rotate(-19.5258 94.6408 75.1496)\",\n    stroke: \"#636669\",\n    strokeWidth: 4\n  })), _line || (_line = /*#__PURE__*/React.createElement(\"line\", {\n    className: \"illustration-light-stroke\",\n    x1: 106.212,\n    y1: 78.9738,\n    x2: 117.022,\n    y2: 83.4472,\n    stroke: \"#636669\",\n    strokeWidth: 4,\n    strokeLinecap: \"round\"\n  }))), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"clip0_876_38488\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    width: 136,\n    height: 110,\n    fill: \"white\"\n  })))));\n};\nexport default SvgNoEntries;","import { useContext, useMemo, useState } from 'react'\nimport { Box } from '@mui/material'\nimport type { ChainInfo } from '@safe-global/safe-gateway-typescript-sdk'\n\nimport EnhancedTable from '@/components/common/EnhancedTable'\nimport type { AddressEntry } from '@/components/address-book/EntryDialog'\nimport EntryDialog from '@/components/address-book/EntryDialog'\nimport ExportDialog from '@/components/address-book/ExportDialog'\nimport ImportDialog from '@/components/address-book/ImportDialog'\nimport EditIcon from '@/public/images/common/edit.svg'\nimport DeleteIcon from '@/public/images/common/delete.svg'\nimport Button from '@mui/material/Button'\nimport IconButton from '@mui/material/IconButton'\nimport Tooltip from '@mui/material/Tooltip'\nimport RemoveDialog from '@/components/address-book/RemoveDialog'\nimport EthHashInfo from '@/components/common/EthHashInfo'\nimport AddressBookHeader from '../AddressBookHeader'\nimport useAddressBook from '@/hooks/useAddressBook'\nimport Track from '@/components/common/Track'\nimport { ADDRESS_BOOK_EVENTS } from '@/services/analytics/events/addressBook'\nimport SvgIcon from '@mui/material/SvgIcon'\nimport PagePlaceholder from '@/components/common/PagePlaceholder'\nimport NoEntriesIcon from '@/public/images/address-book/no-entries.svg'\nimport { useCurrentChain } from '@/hooks/useChains'\nimport tableCss from '@/components/common/EnhancedTable/styles.module.css'\nimport { TxModalContext, type TxModalContextType } from '@/components/tx-flow'\nimport { TokenTransferFlow } from '@/components/tx-flow/flows'\nimport CheckWallet from '@/components/common/CheckWallet'\nimport madProps from '@/utils/mad-props'\n\nconst headCells = [\n  { id: 'name', label: 'Name' },\n  { id: 'address', label: 'Address' },\n  { id: 'actions', label: '' },\n]\n\nexport enum ModalType {\n  EXPORT = 'export',\n  IMPORT = 'import',\n  ENTRY = 'entry',\n  REMOVE = 'remove',\n}\n\nconst defaultOpen = {\n  [ModalType.EXPORT]: false,\n  [ModalType.IMPORT]: false,\n  [ModalType.ENTRY]: false,\n  [ModalType.REMOVE]: false,\n}\n\ntype AddressBookTableProps = {\n  chain?: ChainInfo\n  setTxFlow: TxModalContextType['setTxFlow']\n}\n\nfunction AddressBookTable({ chain, setTxFlow }: AddressBookTableProps) {\n  const [open, setOpen] = useState<typeof defaultOpen>(defaultOpen)\n  const [searchQuery, setSearchQuery] = useState('')\n  const [defaultValues, setDefaultValues] = useState<AddressEntry | undefined>(undefined)\n\n  const handleOpenModal = (type: keyof typeof open) => () => {\n    setOpen((prev) => ({ ...prev, [type]: true }))\n  }\n\n  const handleOpenModalWithValues = (modal: ModalType, address: string, name: string) => {\n    setDefaultValues({ address, name })\n    handleOpenModal(modal)()\n  }\n\n  const handleClose = () => {\n    setOpen(defaultOpen)\n    setDefaultValues(undefined)\n  }\n\n  const addressBook = useAddressBook()\n  const addressBookEntries = Object.entries(addressBook)\n  const filteredEntries = useMemo(() => {\n    if (!searchQuery) {\n      return addressBookEntries\n    }\n\n    const query = searchQuery.toLowerCase()\n    return addressBookEntries.filter(([address, name]) => {\n      return address.toLowerCase().includes(query) || name.toLowerCase().includes(query)\n    })\n  }, [addressBookEntries, searchQuery])\n\n  const rows = filteredEntries.map(([address, name]) => ({\n    cells: {\n      name: {\n        rawValue: name,\n        content: name,\n      },\n      address: {\n        rawValue: address,\n        content: <EthHashInfo address={address} showName={false} shortAddress={false} hasExplorer showCopyButton />,\n      },\n      actions: {\n        rawValue: '',\n        sticky: true,\n        content: (\n          <div className={tableCss.actions}>\n            <Track {...ADDRESS_BOOK_EVENTS.EDIT_ENTRY}>\n              <Tooltip title=\"Edit entry\" placement=\"top\">\n                <IconButton onClick={() => handleOpenModalWithValues(ModalType.ENTRY, address, name)} size=\"small\">\n                  <SvgIcon component={EditIcon} inheritViewBox color=\"border\" fontSize=\"small\" />\n                </IconButton>\n              </Tooltip>\n            </Track>\n\n            <Track {...ADDRESS_BOOK_EVENTS.DELETE_ENTRY}>\n              <Tooltip title=\"Delete entry\" placement=\"top\">\n                <IconButton onClick={() => handleOpenModalWithValues(ModalType.REMOVE, address, name)} size=\"small\">\n                  <SvgIcon component={DeleteIcon} inheritViewBox color=\"error\" fontSize=\"small\" />\n                </IconButton>\n              </Tooltip>\n            </Track>\n\n            <CheckWallet>\n              {(isOk) => (\n                <Track {...ADDRESS_BOOK_EVENTS.SEND}>\n                  <Button\n                    data-testid=\"send-btn\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                    size=\"small\"\n                    onClick={() => setTxFlow(<TokenTransferFlow recipients={[{ recipient: address }]} />)}\n                    disabled={!isOk}\n                  >\n                    Send\n                  </Button>\n                </Track>\n              )}\n            </CheckWallet>\n          </div>\n        ),\n      },\n    },\n  }))\n\n  return (\n    <>\n      <AddressBookHeader\n        handleOpenModal={handleOpenModal}\n        searchQuery={searchQuery}\n        onSearchQueryChange={setSearchQuery}\n      />\n\n      <main>\n        {filteredEntries.length > 0 ? (\n          <EnhancedTable rows={rows} headCells={headCells} mobileVariant />\n        ) : (\n          <Box bgcolor=\"background.paper\" borderRadius={1}>\n            <PagePlaceholder\n              img={<NoEntriesIcon />}\n              text={`No entries found${chain ? ` on ${chain.chainName}` : ''}`}\n            />\n          </Box>\n        )}\n      </main>\n\n      {open[ModalType.EXPORT] && <ExportDialog handleClose={handleClose} />}\n\n      {open[ModalType.IMPORT] && <ImportDialog handleClose={handleClose} />}\n\n      {open[ModalType.ENTRY] && (\n        <EntryDialog\n          handleClose={handleClose}\n          defaultValues={defaultValues}\n          disableAddressInput={Boolean(defaultValues?.name)}\n        />\n      )}\n\n      {open[ModalType.REMOVE] && <RemoveDialog handleClose={handleClose} address={defaultValues?.address || ''} />}\n    </>\n  )\n}\n\nconst useSetTxFlow = () => useContext(TxModalContext).setTxFlow\n\nexport default madProps(AddressBookTable, {\n  chain: useCurrentChain,\n  setTxFlow: useSetTxFlow,\n})\n","import type { NextPage } from 'next'\nimport Head from 'next/head'\nimport AddressBookTable from '@/components/address-book/AddressBookTable'\nimport { BRAND_NAME } from '@/config/constants'\n\nconst AddressBook: NextPage = () => {\n  return (\n    <>\n      <Head>\n        <title>{`${BRAND_NAME} – Address book`}</title>\n      </Head>\n\n      <AddressBookTable />\n    </>\n  )\n}\n\nexport default AddressBook\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"horizontalDivider\":\"styles_horizontalDivider__CpGcY\"};","import { Box, Typography } from '@mui/material'\nimport classNames from 'classnames'\n\nimport type { ReactElement } from 'react'\n\nimport css from './styles.module.css'\n\nconst PageHeader = ({\n  title,\n  action,\n  noBorder,\n}: {\n  title: string\n  action?: ReactElement\n  noBorder?: boolean\n}): ReactElement => {\n  return (\n    <Box className={classNames(css.container, { [css.border]: !noBorder })}>\n      <Typography variant=\"h3\" className={css.title}>\n        {title}\n      </Typography>\n      {action}\n    </Box>\n  )\n}\n\nexport default PageHeader\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__sGid8\",\"title\":\"styles_title___s0jt\",\"border\":\"styles_border__BkX1U\",\"pageHeader\":\"styles_pageHeader__fRL7d\",\"actionsWrapper\":\"styles_actionsWrapper__g_Tq2\",\"navWrapper\":\"styles_navWrapper__XNqgs\"};"],"names":["descendingComparator","b","EnhancedTableHead","props","headCells","order","orderBy","onRequestSort","createSortHandler","property","TableHead","TableRow","map","TableCell","align","padding","sortDirection","headCell","id","sx","width","textAlign","className","classNames","sticky","label","TableSortLabel","active","direction","onClick","mr","textWrap","Box","component","visuallyHidden","pageSizes","EnhancedTable","rows","mobileVariant","setOrder","useState","setOrderBy","page","setPage","rowsPerPage","setRowsPerPage","pagedRows","orderedRows","slice","sort","getComparator","a","aValue","cells","rawValue","bValue","TableContainer","data-testid","Paper","mb","Table","aria-labelledby","css","undefined","handleRequestSort","TableBody","length","row","index","tabIndex","selected","collapsed","Object","entries","key","cell","Collapse","in","enter","content","TablePagination","rowsPerPageOptions","count","onPageChange","_","newPage","onRowsPerPageChange","handleChangeRowsPerPage","parseInt","event","target","value","_getCsvData","addressBooks","reduce","acc","chainId","forEach","address","name","push","madProps","ExportDialog","allAddressBooks","handleClose","values","keys","CSVDownloader","useCSVDownloader","filename","Date","toISOString","csvData","useMemo","ModalDialog","open","onClose","dialogTitle","hideChainIndicator","DialogContent","p","Typography","mt","ExternalLink","href","HelpCenterArticle","ADDRESS_BOOK_DATA","title","DialogActions","Button","bom","config","delimiter","data","style","variant","disableElevation","onSubmit","e","preventDefault","trackEvent","ADDRESS_BOOK_EVENTS","EXPORT","setTimeout","useAllAddressBooks","useAppSelector","selectAllAddressBooks","abCsvReaderValidator","size","header","hasValidAbEntryAddresses","every","entry","validateAddress","hasValidAbNames","abOnUploadValidator","errors","message","hasValidAbHeader","i","findIndex","hasEntry","ImportDialog","setZoneHover","setCsvData","error","setError","entryCount","chainCount","filter","Set","trim","dispatch","useAppDispatch","CSVReader","useCSVReader","accept","multiple","onDragOver","onDragLeave","validator","onUploadRejected","result","pop","errorDescription","toString","logError","Errors","_703","onUploadAccepted","cleanResult","getRootProps","acceptedFile","getRemoveFileProps","fileInfo","additionalInfo","formatFileSize","summary","FileUpload","fileType","FileTypes","CSV","isDragActive","zoneHover","onRemove","div","ErrorMessage","BRAND_NAME","br","handleImport","upsertAddressBookEntries","chainIds","IMPORT","disabled","RemoveDialog","useChainId","addressBook","useAddressBook","handleConfirm","removeAddressBookEntry","HeaderButton","icon","children","svg","SvgIcon","inheritViewBox","fontSize","color","startIcon","mapProps","AddressBookHeader","handleOpenModal","searchQuery","onSearchQueryChange","canExport","some","PageHeader","noBorder","action","Grid","container","spacing","pb","item","xs","md","xl","TextField","placeholder","hiddenLabel","onChange","InputProps","startAdornment","InputAdornment","position","SearchIcon","disableUnderline","fullWidth","display","justifyContent","alignItems","Track","IMPORT_BUTTON","ModalType","ImportIcon","DOWNLOAD_BUTTON","ExportIcon","CREATE_ENTRY","ENTRY","AddCircleIcon","defaultOpen","AddressBookTable","chain","setTxFlow","setOpen","setSearchQuery","defaultValues","setDefaultValues","prev","type","handleOpenModalWithValues","modal","addressBookEntries","filteredEntries","query","toLowerCase","includes","EthHashInfo","showName","shortAddress","hasExplorer","showCopyButton","actions","tableCss","EDIT_ENTRY","Tooltip","placement","IconButton","EditIcon","DELETE_ENTRY","DeleteIcon","CheckWallet","SEND","TokenTransferFlow","recipients","recipient","isOk","main","bgcolor","borderRadius","PagePlaceholder","img","NoEntriesIcon","text","chainName","EntryDialog","disableAddressInput","Boolean","useCurrentChain","useSetTxFlow","useContext","TxModalContext","AddressBook","Head"],"sourceRoot":"","ignoreList":[]}