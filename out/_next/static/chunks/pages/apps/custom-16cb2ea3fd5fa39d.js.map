{"version":3,"file":"static/chunks/pages/apps/custom-16cb2ea3fd5fa39d.js","mappings":"yOAYA,IAAMA,EAAuB,OAAC,MAAEC,CAAI,SAAEC,CAAO,WAAEC,CAAS,KAAEC,CAAG,CAAS,SACpE,WAACC,EAAAA,CAAWA,CAAAA,CAACJ,KAAMA,EAAMC,QAASA,EAASI,YAAY,qCACrD,UAACC,EAAAA,GAAaA,CAAAA,UACZ,WAACC,EAAAA,GAAUA,CAAAA,CAACC,QAAQ,KAAKC,GAAI,YAAG,uCACM,UAACC,IAAAA,UAAGP,EAAIQ,IAAI,GAAK,aAGzD,WAACC,EAAAA,GAAaA,CAAAA,CAACC,cAAc,cAC3B,UAACC,EAAAA,GAAMA,CAAAA,CAACC,QAASd,WAAS,WAC1B,UAACa,EAAAA,GAAMA,CAAAA,CAACN,QAAQ,SAASO,QAAS,IAAMb,EAAUC,EAAIa,EAAE,WAAG,4CC0CjE,MAlDiC,KAE/B,GAAM,cAgDqBC,EAhDnBC,CAAc,cAAEC,CAAY,iBAAEC,CAAe,CAAE,CAAGC,CAAAA,EAAAA,EAAAA,CAAAA,CAAWA,GAE/D,CAACC,EAA0BC,EAA4B,CAAGC,CAAAA,EAAAA,EAAAA,QAAAA,CAAQA,EAAU,GAC5E,CAACC,EAAuBC,EAAyB,CAAGF,CAAAA,EAAAA,EAAAA,QAAAA,CAAQA,GAYlE,MACE,iCACE,UAACG,IAAIA,UACH,CADGA,EACH,OAACC,QAAAA,UAAO,GAAc,OAAXC,EAAAA,EAAUA,CAAC,2BAGxB,UAACC,EAAAA,CAAeA,CAAAA,CAAAA,GAEhB,UAACC,EAAAA,CAAcA,CAAAA,CAAAA,GAEf,UAACC,OAAAA,UACC,UAACC,EAAAA,CAAWA,CAAAA,CACVL,MAAM,cACNM,aAAchB,EACdC,aAAcA,EACdC,gBAzByB,CAyBRe,GAxBvBZ,GAA4B,GAC5BG,EAAyBD,EAC3B,EAuBQW,WAAYC,EAAAA,EAAgBA,CAACC,WAAW,KAK3Cb,GACC,UAAC1B,EAAoBA,CACnBC,KAAMsB,EACNnB,IAAKsB,EACLxB,IAHmBF,IAGV,IAAMwB,GAA4B,GAC3CrB,UA/B8B,CA+BnBqC,GA9BjBnB,EAAgBoB,GAChBjB,GAA4B,EAC9B,MAiCF,mBC5DA,4CACA,eACA,WACA,OAAe,EAAQ,KAAoC,CAC3D,EACA,SAFsB","sources":["webpack://_N_E/./src/components/safe-apps/RemoveCustomAppModal.tsx","webpack://_N_E/./src/pages/apps/custom.tsx","webpack://_N_E/?7ae8","webpack://_N_E/./src/components/common/Mui/index.tsx"],"sourcesContent":["import * as React from 'react'\nimport { DialogActions, DialogContent, Typography, Button } from '@mui/material'\nimport type { SafeAppData } from '@safe-global/safe-gateway-typescript-sdk'\nimport ModalDialog from '@/components/common/ModalDialog'\n\ntype Props = {\n  open: boolean\n  app: SafeAppData\n  onClose: () => void\n  onConfirm: (appId: number) => void\n}\n\nconst RemoveCustomAppModal = ({ open, onClose, onConfirm, app }: Props) => (\n  <ModalDialog open={open} onClose={onClose} dialogTitle=\"Confirm Safe App removal\">\n    <DialogContent>\n      <Typography variant=\"h6\" pt={3}>\n        Are you sure you want to remove the <b>{app.name}</b> app?\n      </Typography>\n    </DialogContent>\n    <DialogActions disableSpacing>\n      <Button onClick={onClose}>Cancel</Button>\n      <Button variant=\"danger\" onClick={() => onConfirm(app.id)}>\n        Remove\n      </Button>\n    </DialogActions>\n  </ModalDialog>\n)\n\nexport { RemoveCustomAppModal }\n","import { useState } from 'react'\nimport type { NextPage } from 'next'\nimport Head from 'next/head'\n\nimport { useSafeApps } from '@/hooks/safe-apps/useSafeApps'\nimport SafeAppsHeader from '@/components/safe-apps/SafeAppsHeader'\nimport SafeAppList from '@/components/safe-apps/SafeAppList'\nimport SafeAppsSDKLink from '@/components/safe-apps/SafeAppsSDKLink'\nimport { RemoveCustomAppModal } from '@/components/safe-apps/RemoveCustomAppModal'\nimport type { SafeAppData } from '@safe-global/safe-gateway-typescript-sdk'\nimport { SAFE_APPS_LABELS } from '@/services/analytics'\nimport { BRAND_NAME } from '@/config/constants'\n\nconst CustomSafeApps: NextPage = () => {\n  // TODO: create a custom hook instead of use useSafeApps\n  const { customSafeApps, addCustomApp, removeCustomApp } = useSafeApps()\n\n  const [isOpenRemoveSafeAppModal, setIsOpenRemoveSafeAppModal] = useState<boolean>(false)\n  const [customSafeAppToRemove, setCustomSafeAppToRemove] = useState<SafeAppData>()\n\n  const openRemoveCustomAppModal = (customSafeAppToRemove: SafeAppData) => {\n    setIsOpenRemoveSafeAppModal(true)\n    setCustomSafeAppToRemove(customSafeAppToRemove)\n  }\n\n  const onConfirmRemoveCustomAppModal = (safeAppId: number) => {\n    removeCustomApp(safeAppId)\n    setIsOpenRemoveSafeAppModal(false)\n  }\n\n  return (\n    <>\n      <Head>\n        <title>{`${BRAND_NAME} â€“ Custom Safe Apps`}</title>\n      </Head>\n\n      <SafeAppsSDKLink />\n\n      <SafeAppsHeader />\n\n      <main>\n        <SafeAppList\n          title=\"Custom apps\"\n          safeAppsList={customSafeApps}\n          addCustomApp={addCustomApp}\n          removeCustomApp={openRemoveCustomAppModal}\n          eventLabel={SAFE_APPS_LABELS.apps_custom}\n        />\n      </main>\n\n      {/* remove custom safe app modal */}\n      {customSafeAppToRemove && (\n        <RemoveCustomAppModal\n          open={isOpenRemoveSafeAppModal}\n          app={customSafeAppToRemove}\n          onClose={() => setIsOpenRemoveSafeAppModal(false)}\n          onConfirm={onConfirmRemoveCustomAppModal}\n        />\n      )}\n    </>\n  )\n}\n\nexport default CustomSafeApps\n","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/apps/custom\",\n      function () {\n        return require(\"private-next-pages/apps/custom.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/apps/custom\"])\n      });\n    }\n  ","export * from \"/app/apps/web/src/components/common/Mui/index.tsx\""],"names":["RemoveCustomAppModal","open","onClose","onConfirm","app","ModalDialog","dialogTitle","DialogContent","Typography","variant","pt","b","name","DialogActions","disableSpacing","Button","onClick","id","CustomSafeApps","customSafeApps","addCustomApp","removeCustomApp","useSafeApps","isOpenRemoveSafeAppModal","setIsOpenRemoveSafeAppModal","useState","customSafeAppToRemove","setCustomSafeAppToRemove","Head","title","BRAND_NAME","SafeAppsSDKLink","SafeAppsHeader","main","SafeAppList","safeAppsList","openRemoveCustomAppModal","eventLabel","SAFE_APPS_LABELS","apps_custom","onConfirmRemoveCustomAppModal","safeAppId"],"sourceRoot":"","ignoreList":[]}