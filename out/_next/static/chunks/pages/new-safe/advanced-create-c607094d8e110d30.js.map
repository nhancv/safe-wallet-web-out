{"version":3,"file":"static/chunks/pages/new-safe/advanced-create-c607094d8e110d30.js","mappings":"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","sources":["webpack://_N_E/./src/components/common/Mui/index.tsx","webpack://_N_E/./src/components/new-safe/create/steps/AdvancedOptionsStep/index.tsx","webpack://_N_E/./src/components/new-safe/create/AdvancedCreateSafe.tsx","webpack://_N_E/./src/pages/new-safe/advanced-create.tsx","webpack://_N_E/?b4de"],"sourcesContent":["export * from \"/app/apps/web/src/components/common/Mui/index.tsx\"","import { predictAddressBasedOnReplayData } from '@/features/multichain/utils/utils'\nimport { useWeb3ReadOnly } from '@/hooks/wallets/web3'\nimport { Button, MenuItem, Divider, Box, TextField, Stack, Skeleton, SvgIcon, Tooltip, Typography } from '@mui/material'\nimport { Controller, FormProvider, useForm } from 'react-hook-form'\nimport { type ReactElement, useMemo } from 'react'\n\nimport type { StepRenderProps } from '@/components/new-safe/CardStepper/useCardStepper'\nimport type { NewSafeFormData } from '@/components/new-safe/create'\nimport useSyncSafeCreationStep from '@/components/new-safe/create/useSyncSafeCreationStep'\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack'\nimport layoutCss from '@/components/new-safe/create/styles.module.css'\nimport { type SafeVersion } from '@safe-global/safe-core-sdk-types'\nimport NumberField from '@/components/common/NumberField'\nimport { useCurrentChain } from '@/hooks/useChains'\nimport useAsync from '@safe-global/utils/hooks/useAsync'\nimport { createNewUndeployedSafeWithoutSalt } from '../../logic'\nimport EthHashInfo from '@/components/common/EthHashInfo'\nimport InfoIcon from '@/public/images/notifications/info.svg'\nimport { isSmartContract } from '@/utils/wallets'\n\nenum AdvancedOptionsFields {\n  safeVersion = 'safeVersion',\n  saltNonce = 'saltNonce',\n  paymentReceiver = 'paymentReceiver',\n}\n\nexport type AdvancedOptionsStepForm = {\n  [AdvancedOptionsFields.safeVersion]: SafeVersion\n  [AdvancedOptionsFields.saltNonce]: number\n  [AdvancedOptionsFields.paymentReceiver]: string\n}\n\nconst ADVANCED_OPTIONS_STEP_FORM_ID = 'create-safe-advanced-options-step-form'\n\nconst AdvancedOptionsStep = ({ onSubmit, onBack, data, setStep }: StepRenderProps<NewSafeFormData>): ReactElement => {\n  useSyncSafeCreationStep(setStep, data.networks)\n  const chain = useCurrentChain()\n  const provider = useWeb3ReadOnly()\n\n  const formMethods = useForm<AdvancedOptionsStepForm>({\n    mode: 'onChange',\n    defaultValues: data,\n  })\n\n  const { handleSubmit, control, watch, formState, getValues, register } = formMethods\n\n  const selectedSafeVersion = watch(AdvancedOptionsFields.safeVersion)\n  const selectedSaltNonce = watch(AdvancedOptionsFields.saltNonce)\n  const selectedPaymentReceiver = watch(AdvancedOptionsFields.paymentReceiver)\n\n  const newSafeProps = useMemo(\n    () =>\n      chain\n        ? createNewUndeployedSafeWithoutSalt(\n            selectedSafeVersion,\n            {\n              owners: data.owners.map((owner) => owner.address),\n              threshold: data.threshold,\n              paymentReceiver: selectedPaymentReceiver,\n            },\n            chain,\n          )\n        : undefined,\n    [chain, data.owners, data.threshold, selectedSafeVersion, selectedPaymentReceiver],\n  )\n\n  const [predictedSafeAddress] = useAsync(async () => {\n    if (!provider || !newSafeProps) return\n\n    const replayedSafeWithNonce = { ...newSafeProps, saltNonce: selectedSaltNonce.toString() }\n\n    return predictAddressBasedOnReplayData(replayedSafeWithNonce, provider)\n  }, [provider, newSafeProps, selectedSaltNonce])\n\n  const [isDeployed] = useAsync(\n    async () => (predictedSafeAddress ? await isSmartContract(predictedSafeAddress) : false),\n    [predictedSafeAddress],\n  )\n\n  const isDisabled = !formState.isValid || Boolean(isDeployed)\n\n  const handleBack = () => {\n    const formData = getValues()\n    onBack(formData)\n  }\n\n  const onFormSubmit = handleSubmit((data) => {\n    onSubmit(data)\n\n    // TODO: Tracking of advanced setup\n  })\n\n  return (\n    <form data-testid=\"advanced-options-step-form\" onSubmit={onFormSubmit} id={ADVANCED_OPTIONS_STEP_FORM_ID}>\n      <FormProvider {...formMethods}>\n        <Stack spacing={2}>\n          <Box className={layoutCss.row}>\n            <Typography\n              variant=\"h5\"\n              sx={{\n                fontWeight: 700,\n                display: 'inline-flex',\n                alignItems: 'center',\n                gap: 1,\n              }}\n            >\n              Safe version\n              <Tooltip\n                title=\"The threshold of a Safe Account specifies how many signers need to confirm a Safe Account transaction before it can be executed.\"\n                arrow\n                placement=\"top\"\n              >\n                <span style={{ display: 'flex' }}>\n                  <SvgIcon component={InfoIcon} inheritViewBox color=\"border\" fontSize=\"small\" />\n                </span>\n              </Tooltip>\n            </Typography>\n            <Typography variant=\"body2\" mb={2}>\n              Changes the used master copy and fallback handler of the Safe.\n            </Typography>\n            <Controller\n              control={control}\n              name=\"safeVersion\"\n              render={({ field }) => (\n                <TextField select {...field} label=\"Safe version\">\n                  <MenuItem value=\"1.4.1\">1.4.1 (latest)</MenuItem>\n                  <MenuItem value=\"1.3.0\">1.3.0</MenuItem>\n                </TextField>\n              )}\n            />\n\n            <Typography\n              variant=\"h5\"\n              sx={{\n                fontWeight: 700,\n                display: 'inline-flex',\n                alignItems: 'center',\n                gap: 1,\n                mt: 4,\n                width: 1,\n              }}\n            >\n              Salt nonce\n              <Tooltip\n                title=\"The salt nonce changes the predicted Safe address. It can be used to re-create a Safe from another chain or to create a specific Safe address\"\n                arrow\n                placement=\"top\"\n              >\n                <span style={{ display: 'flex' }}>\n                  <SvgIcon component={InfoIcon} inheritViewBox color=\"border\" fontSize=\"small\" />\n                </span>\n              </Tooltip>\n            </Typography>\n            <Typography variant=\"body2\" mb={2}>\n              Impacts the derived Safe address\n            </Typography>\n            <NumberField\n              {...register(AdvancedOptionsFields.saltNonce, {\n                validate: async (value) => {\n                  if (isNaN(value)) {\n                    return 'Salt nonce must be a number'\n                  }\n                  if (value < 0) {\n                    return 'Salt nonce must be positive'\n                  }\n                },\n                required: true,\n              })}\n              fullWidth\n              label=\"Salt nonce\"\n              error={Boolean(formState.errors[AdvancedOptionsFields.saltNonce]) || Boolean(isDeployed)}\n              helperText={\n                formState.errors[AdvancedOptionsFields.saltNonce]?.message ??\n                (Boolean(isDeployed) ? 'The Safe is already deployed. Use a different salt nonce.' : undefined)\n              }\n            />\n\n            <Typography\n              variant=\"h5\"\n              sx={{\n                fontWeight: 700,\n                display: 'inline-flex',\n                alignItems: 'center',\n                gap: 1,\n                mt: 4,\n                width: 1,\n              }}\n            >\n              Payment receiver\n              <Tooltip title=\"The payment receiver changes the predicted Safe address.\" arrow placement=\"top\">\n                <span style={{ display: 'flex' }}>\n                  <SvgIcon component={InfoIcon} inheritViewBox color=\"border\" fontSize=\"small\" />\n                </span>\n              </Tooltip>\n            </Typography>\n            <Typography\n              variant=\"body2\"\n              sx={{\n                mb: 2,\n              }}\n            >\n              Impacts the derived Safe address\n            </Typography>\n            <TextField\n              {...register(AdvancedOptionsFields.paymentReceiver, {\n                required: true,\n              })}\n              label=\"Payment receiver\"\n              error={Boolean(formState.errors[AdvancedOptionsFields.paymentReceiver]) || Boolean(isDeployed)}\n              helperText={\n                formState.errors[AdvancedOptionsFields.paymentReceiver]?.message ??\n                (Boolean(isDeployed) ? 'The Safe is already deployed. Use a different payment receiver.' : undefined)\n              }\n              fullWidth\n            />\n          </Box>\n\n          <Divider />\n\n          <Box className={layoutCss.row}>\n            <Typography\n              variant=\"h4\"\n              sx={{\n                fontWeight: 700,\n                mb: 1,\n              }}\n            >\n              New Safe address\n            </Typography>\n            {predictedSafeAddress ? (\n              <EthHashInfo address={predictedSafeAddress} hasExplorer showCopyButton />\n            ) : (\n              <Skeleton />\n            )}\n          </Box>\n\n          <Divider />\n\n          <Box className={layoutCss.row}>\n            <Box\n              sx={{\n                display: 'flex',\n                flexDirection: 'row',\n                justifyContent: 'space-between',\n                gap: 3,\n              }}\n            >\n              <Button\n                data-testid=\"back-btn\"\n                variant=\"outlined\"\n                size=\"small\"\n                onClick={handleBack}\n                startIcon={<ArrowBackIcon fontSize=\"small\" />}\n              >\n                Back\n              </Button>\n              <Button data-testid=\"next-btn\" type=\"submit\" variant=\"contained\" size=\"stretched\" disabled={isDisabled}>\n                Next\n              </Button>\n            </Box>\n          </Box>\n        </Stack>\n      </FormProvider>\n    </form>\n  )\n}\n\nexport default AdvancedOptionsStep\n","import { ECOSYSTEM_ID_ADDRESS } from '@/config/constants'\nimport { Container, Typography, Grid } from '@mui/material'\nimport { useRouter } from 'next/router'\n\nimport useWallet from '@/hooks/wallets/useWallet'\nimport OverviewWidget from '@/components/new-safe/create/OverviewWidget'\nimport type { TxStepperProps } from '@/components/new-safe/CardStepper/useCardStepper'\nimport SetNameStep from '@/components/new-safe/create/steps/SetNameStep'\nimport OwnerPolicyStep from '@/components/new-safe/create/steps/OwnerPolicyStep'\nimport ReviewStep from '@/components/new-safe/create/steps/ReviewStep'\nimport { CreateSafeStatus } from '@/components/new-safe/create/steps/StatusStep'\nimport { CardStepper } from '@/components/new-safe/CardStepper'\nimport { AppRoutes } from '@/config/routes'\nimport { CREATE_SAFE_CATEGORY } from '@/services/analytics'\nimport type { CreateSafeInfoItem } from '@/components/new-safe/create/CreateSafeInfos'\nimport CreateSafeInfos from '@/components/new-safe/create/CreateSafeInfos'\nimport { useState } from 'react'\nimport { type NewSafeFormData } from '.'\nimport AdvancedOptionsStep from './steps/AdvancedOptionsStep'\nimport { useCurrentChain } from '@/hooks/useChains'\nimport { getLatestSafeVersion } from '@safe-global/utils/utils/chains'\n\nconst AdvancedCreateSafe = () => {\n  const router = useRouter()\n  const wallet = useWallet()\n  const chain = useCurrentChain()\n\n  const [safeName, setSafeName] = useState('')\n  const [dynamicHint, setDynamicHint] = useState<CreateSafeInfoItem>()\n  const [activeStep, setActiveStep] = useState(0)\n\n  const CreateSafeSteps: TxStepperProps<NewSafeFormData>['steps'] = [\n    {\n      title: 'Select network and name of your Safe Account',\n      subtitle: 'Select the network on which to create your Safe Account',\n      render: (data, onSubmit, onBack, setStep) => (\n        <SetNameStep\n          isAdvancedFlow\n          setSafeName={setSafeName}\n          data={data}\n          onSubmit={onSubmit}\n          onBack={onBack}\n          setStep={setStep}\n          setOverviewNetworks={() => {}}\n          setDynamicHint={() => {}}\n        />\n      ),\n    },\n    {\n      title: 'Signers and confirmations',\n      subtitle:\n        'Set the signer wallets of your Safe Account and how many need to confirm to execute a valid transaction.',\n      render: (data, onSubmit, onBack, setStep) => (\n        <OwnerPolicyStep\n          setDynamicHint={setDynamicHint}\n          data={data}\n          onSubmit={onSubmit}\n          onBack={onBack}\n          setStep={setStep}\n        />\n      ),\n    },\n    {\n      title: 'Advanced settings',\n      subtitle: 'Choose the Safe version and optionally a specific salt nonce',\n      render: (data, onSubmit, onBack, setStep) => (\n        <AdvancedOptionsStep data={data} onSubmit={onSubmit} onBack={onBack} setStep={setStep} />\n      ),\n    },\n    {\n      title: 'Review',\n      subtitle:\n        \"You're about to create a new Safe Account and will have to confirm the transaction with your connected wallet.\",\n      render: (data, onSubmit, onBack, setStep) => (\n        <ReviewStep data={data} onSubmit={onSubmit} onBack={onBack} setStep={setStep} />\n      ),\n    },\n    {\n      title: '',\n      subtitle: '',\n      render: (data, onSubmit, onBack, setStep, setProgressColor, setStepData) => (\n        <CreateSafeStatus\n          data={data}\n          onSubmit={onSubmit}\n          onBack={onBack}\n          setStep={setStep}\n          setProgressColor={setProgressColor}\n          setStepData={setStepData}\n        />\n      ),\n    },\n  ]\n\n  const initialStep = 0\n  const initialData: NewSafeFormData = {\n    name: '',\n    networks: [],\n    owners: [],\n    threshold: 1,\n    saltNonce: 0,\n    safeVersion: getLatestSafeVersion(chain),\n    paymentReceiver: ECOSYSTEM_ID_ADDRESS,\n  }\n\n  const onClose = () => {\n    router.push(AppRoutes.welcome.index)\n  }\n\n  return (\n    <Container>\n      <Grid\n        container\n        columnSpacing={3}\n        sx={{\n          justifyContent: 'center',\n          mt: [2, null, 7],\n        }}\n      >\n        <Grid item xs={12}>\n          <Typography\n            variant=\"h2\"\n            sx={{\n              pb: 2,\n            }}\n          >\n            Create new Safe Account\n          </Typography>\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          md={8}\n          sx={{\n            order: [1, null, 0],\n          }}\n        >\n          <CardStepper\n            initialData={initialData}\n            initialStep={initialStep}\n            onClose={onClose}\n            steps={CreateSafeSteps}\n            eventCategory={CREATE_SAFE_CATEGORY}\n            setWidgetStep={setActiveStep}\n          />\n        </Grid>\n\n        <Grid\n          item\n          xs={12}\n          md={4}\n          sx={{\n            mb: [3, null, 0],\n            order: [0, null, 1],\n          }}\n        >\n          <Grid container spacing={3}>\n            {activeStep < 2 && <OverviewWidget safeName={safeName} networks={[]} />}\n            {wallet?.address && <CreateSafeInfos dynamicHint={dynamicHint} />}\n          </Grid>\n        </Grid>\n      </Grid>\n    </Container>\n  )\n}\n\nexport default AdvancedCreateSafe\n","import Head from 'next/head'\nimport type { NextPage } from 'next'\n\nimport AdvancedCreateSafe from '@/components/new-safe/create/AdvancedCreateSafe'\nimport { BRAND_NAME } from '@/config/constants'\n\nconst Open: NextPage = () => {\n  return (\n    <main>\n      <Head>\n        <title>{`${BRAND_NAME} – Advanced Safe creation`}</title>\n      </Head>\n\n      <AdvancedCreateSafe />\n    </main>\n  )\n}\n\nexport default Open\n","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/new-safe/advanced-create\",\n      function () {\n        return require(\"private-next-pages/new-safe/advanced-create.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/new-safe/advanced-create\"])\n      });\n    }\n  "],"names":["AdvancedOptionsFields","formState","onSubmit","AdvancedOptionsStep","onBack","data","setStep","useSyncSafeCreationStep","networks","chain","useCurrentChain","provider","useWeb3ReadOnly","formMethods","useForm","mode","defaultValues","handleSubmit","control","watch","getValues","register","selectedSafeVersion","selectedSaltNonce","selectedPaymentReceiver","newSafeProps","useMemo","createNewUndeployedSafeWithoutSalt","owners","map","owner","address","threshold","paymentReceiver","undefined","predictedSafeAddress","useAsync","replayedSafeWithNonce","saltNonce","toString","predictAddressBasedOnReplayData","isDeployed","isSmartContract","isDisabled","isValid","Boolean","onFormSubmit","form","data-testid","id","ADVANCED_OPTIONS_STEP_FORM_ID","FormProvider","Stack","spacing","Box","className","layoutCss","Typography","variant","sx","fontWeight","display","alignItems","gap","Tooltip","title","arrow","placement","span","style","SvgIcon","component","InfoIcon","inheritViewBox","color","fontSize","mb","Controller","name","render","field","TextField","select","label","MenuItem","value","mt","width","NumberField","validate","required","fullWidth","error","errors","helperText","message","Divider","EthHashInfo","hasExplorer","showCopyButton","Skeleton","flexDirection","justifyContent","Button","size","onClick","handleBack","formData","startIcon","ArrowBackIcon","type","disabled","router","useRouter","AdvancedCreateSafe","wallet","useWallet","safeName","setSafeName","useState","dynamicHint","setDynamicHint","activeStep","setActiveStep","CreateSafeSteps","subtitle","SetNameStep","isAdvancedFlow","setOverviewNetworks","OwnerPolicyStep","ReviewStep","setProgressColor","setStepData","CreateSafeStatus","initialData","safeVersion","getLatestSafeVersion","ECOSYSTEM_ID_ADDRESS","Container","Grid","container","columnSpacing","item","xs","pb","md","order","CardStepper","initialStep","onClose","push","AppRoutes","welcome","index","steps","eventCategory","CREATE_SAFE_CATEGORY","setWidgetStep","OverviewWidget","CreateSafeInfos","main","Open","Head","BRAND_NAME"],"sourceRoot":"","ignoreList":[]}