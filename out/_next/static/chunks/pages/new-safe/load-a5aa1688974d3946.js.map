{"version":3,"file":"static/chunks/pages/new-safe/load-a5aa1688974d3946.js","mappings":"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","sources":["webpack://_N_E/./src/components/new-safe/CardStepper/styles.module.css","webpack://_N_E/?5865","webpack://_N_E/./src/components/new-safe/ReviewRow/index.tsx","webpack://_N_E/./src/components/new-safe/OwnerRow/styles.module.css","webpack://_N_E/./src/components/common/Mui/index.tsx","webpack://_N_E/./src/components/new-safe/load/steps/SetAddressStep/index.tsx","webpack://_N_E/./src/components/new-safe/load/steps/SafeOwnerStep/index.tsx","webpack://_N_E/./src/components/new-safe/load/steps/SafeReviewStep/index.tsx","webpack://_N_E/./src/components/new-safe/load/index.tsx","webpack://_N_E/./src/pages/new-safe/load.tsx","webpack://_N_E/./src/components/new-safe/CardStepper/useCardStepper.ts","webpack://_N_E/./src/components/new-safe/CardStepper/index.tsx","webpack://_N_E/./src/components/new-safe/create/steps/SetNameStep/styles.module.css","webpack://_N_E/./src/components/new-safe/create/styles.module.css","webpack://_N_E/./src/components/new-safe/OwnerRow/index.tsx","webpack://_N_E/./src/components/new-safe/create/steps/ReviewStep/styles.module.css"],"sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"styles_card__n9cqN\",\"header\":\"styles_header__QeZM4\",\"step\":\"styles_step__R3EWt\",\"content\":\"styles_content__wZRTX\",\"actions\":\"styles_actions__nsEiB\",\"progress\":\"styles_progress__byfBc\"};","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/new-safe/load\",\n      function () {\n        return require(\"private-next-pages/new-safe/load.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/new-safe/load\"])\n      });\n    }\n  ","import React, { type ReactElement } from 'react'\nimport { Grid, Typography } from '@mui/material'\n\nconst ReviewRow = ({ name, value }: { name?: string; value: ReactElement }) => {\n  return (\n    <>\n      {name && (\n        <Grid item xs={3}>\n          <Typography variant=\"body2\">{name}</Typography>\n        </Grid>\n      )}\n      <Grid item xs={name ? 9 : 12}>\n        {value}\n      </Grid>\n    </>\n  )\n}\n\nexport default ReviewRow\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"helper\":\"styles_helper__VddZk\"};","export * from \"/app/apps/web/src/components/common/Mui/index.tsx\"","import type { StepRenderProps } from '@/components/new-safe/CardStepper/useCardStepper'\nimport type { LoadSafeFormData } from '@/components/new-safe/load'\nimport { FormProvider, useForm } from 'react-hook-form'\nimport {\n  Box,\n  Button,\n  CircularProgress,\n  Divider,\n  Grid,\n  InputAdornment,\n  SvgIcon,\n  Tooltip,\n  Typography,\n} from '@mui/material'\nimport layoutCss from '@/components/new-safe/create/styles.module.css'\nimport NameInput from '@/components/common/NameInput'\nimport InfoIcon from '@/public/images/notifications/info.svg'\nimport css from '@/components/new-safe/create/steps/SetNameStep/styles.module.css'\nimport NetworkSelector from '@/components/common/NetworkSelector'\nimport { useMnemonicSafeName } from '@/hooks/useMnemonicName'\nimport { useAddressResolver } from '@/hooks/useAddressResolver'\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack'\nimport AddressInput from '@/components/common/AddressInput'\nimport React from 'react'\nimport { getSafeInfo } from '@safe-global/safe-gateway-typescript-sdk'\nimport useChainId from '@/hooks/useChainId'\nimport { useAppSelector } from '@/store'\nimport { selectAddedSafes } from '@/store/addedSafesSlice'\nimport { LOAD_SAFE_EVENTS, trackEvent } from '@/services/analytics'\nimport { AppRoutes } from '@/config/routes'\nimport MUILink from '@mui/material/Link'\nimport Link from 'next/link'\n\nenum Field {\n  name = 'name',\n  address = 'address',\n}\n\ntype FormData = {\n  [Field.name]: string\n  [Field.address]: string\n}\n\nconst SetAddressStep = ({ data, onSubmit, onBack }: StepRenderProps<LoadSafeFormData>) => {\n  const currentChainId = useChainId()\n  const addedSafes = useAppSelector((state) => selectAddedSafes(state, currentChainId))\n  const formMethods = useForm<FormData>({\n    mode: 'all',\n    defaultValues: {\n      [Field.name]: data.name,\n      [Field.address]: data.address,\n    },\n  })\n\n  const {\n    handleSubmit,\n    formState: { errors, isValid },\n    watch,\n    getValues,\n  } = formMethods\n\n  const safeAddress = watch(Field.address)\n  const randomName = useMnemonicSafeName()\n  const { ens, name, resolving } = useAddressResolver(safeAddress)\n\n  // Address book, ENS, mnemonic\n  const fallbackName = name || ens || randomName\n\n  const validateSafeAddress = async (address: string) => {\n    if (addedSafes && Object.keys(addedSafes).includes(address)) {\n      return 'Safe Account is already added'\n    }\n\n    try {\n      await getSafeInfo(currentChainId, address)\n    } catch (error) {\n      return 'Address given is not a valid Safe Account address'\n    }\n  }\n\n  const onFormSubmit = handleSubmit((data: FormData) => {\n    onSubmit({\n      ...data,\n      [Field.name]: data[Field.name] || fallbackName,\n    })\n\n    if (data[Field.name]) {\n      trackEvent(LOAD_SAFE_EVENTS.NAME_SAFE)\n    }\n  })\n\n  const handleBack = () => {\n    const formData = getValues()\n    onBack({\n      ...formData,\n      [Field.name]: formData.name || fallbackName,\n    })\n  }\n\n  return (\n    <FormProvider {...formMethods}>\n      <form onSubmit={onFormSubmit}>\n        <Box className={layoutCss.row}>\n          <Grid\n            container\n            spacing={[3, 1]}\n            sx={{\n              mb: 3,\n              pr: '40px',\n            }}\n          >\n            <Grid item xs={12} md>\n              <NameInput\n                name={Field.name}\n                label={errors?.[Field.name]?.message || 'Name'}\n                placeholder={fallbackName}\n                InputLabelProps={{ shrink: true }}\n                InputProps={{\n                  endAdornment: resolving ? (\n                    <InputAdornment position=\"end\">\n                      <CircularProgress size={20} />\n                    </InputAdornment>\n                  ) : (\n                    <Tooltip\n                      title=\"This name is stored locally and will never be shared with us or any third parties.\"\n                      arrow\n                      placement=\"top\"\n                    >\n                      <InputAdornment position=\"end\">\n                        <SvgIcon component={InfoIcon} inheritViewBox />\n                      </InputAdornment>\n                    </Tooltip>\n                  ),\n                }}\n              />\n            </Grid>\n            <Grid\n              item\n              sx={{\n                order: [-1, 1],\n              }}\n            >\n              <Box className={css.select}>\n                <NetworkSelector />\n              </Box>\n            </Grid>\n          </Grid>\n\n          <AddressInput\n            data-testid=\"address-section\"\n            label=\"Safe Account\"\n            validate={validateSafeAddress}\n            name={Field.address}\n          />\n\n          <Typography\n            sx={{\n              mt: 4,\n            }}\n          >\n            By continuing you consent to the{' '}\n            <Link href={AppRoutes.terms} passHref legacyBehavior>\n              <MUILink>terms of use</MUILink>\n            </Link>{' '}\n            and{' '}\n            <Link href={AppRoutes.privacy} passHref legacyBehavior>\n              <MUILink>privacy policy</MUILink>\n            </Link>\n            .\n          </Typography>\n        </Box>\n\n        <Divider />\n\n        <Box className={layoutCss.row}>\n          <Box\n            sx={{\n              display: 'flex',\n              flexDirection: 'row',\n              justifyContent: 'space-between',\n              gap: 3,\n            }}\n          >\n            <Button variant=\"outlined\" size=\"small\" onClick={handleBack} startIcon={<ArrowBackIcon fontSize=\"small\" />}>\n              Back\n            </Button>\n            <Button\n              data-testid=\"load-safe-next-btn\"\n              type=\"submit\"\n              variant=\"contained\"\n              size=\"stretched\"\n              disabled={!isValid}\n            >\n              Next\n            </Button>\n          </Box>\n        </Box>\n      </form>\n    </FormProvider>\n  )\n}\n\nexport default SetAddressStep\n","import React, { useEffect } from 'react'\nimport { getSafeInfo, type SafeInfo } from '@safe-global/safe-gateway-typescript-sdk'\nimport { FormProvider, useFieldArray, useForm } from 'react-hook-form'\nimport { Box, Button, Divider } from '@mui/material'\n\nimport type { StepRenderProps } from '@/components/new-safe/CardStepper/useCardStepper'\nimport type { LoadSafeFormData } from '@/components/new-safe/load'\nimport useAsync from '@safe-global/utils/hooks/useAsync'\nimport useChainId from '@/hooks/useChainId'\nimport type { NamedAddress } from '@/components/new-safe/create/types'\nimport layoutCss from '@/components/new-safe/create/styles.module.css'\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack'\nimport { OwnerRow } from '@/components/new-safe/OwnerRow'\n\nenum Field {\n  owners = 'owners',\n  threshold = 'threshold',\n}\n\ntype FormData = {\n  [Field.owners]: NamedAddress[]\n  [Field.threshold]: number\n}\n\nconst SafeOwnerStep = ({ data, onSubmit, onBack }: StepRenderProps<LoadSafeFormData>) => {\n  const chainId = useChainId()\n  const formMethods = useForm<FormData>({\n    defaultValues: data,\n    mode: 'onChange',\n  })\n  const {\n    handleSubmit,\n    setValue,\n    control,\n    formState: { isValid },\n    getValues,\n  } = formMethods\n\n  const { fields } = useFieldArray({\n    control,\n    name: Field.owners,\n  })\n\n  const [safeInfo] = useAsync<SafeInfo>(() => {\n    if (data.address) {\n      return getSafeInfo(chainId, data.address)\n    }\n  }, [chainId, data.address])\n\n  useEffect(() => {\n    if (!safeInfo) return\n\n    setValue(Field.threshold, safeInfo.threshold)\n\n    const owners = safeInfo.owners.map((owner, i) => ({\n      address: owner.value,\n      name: getValues(`owners.${i}.name`) || '',\n    }))\n\n    setValue(Field.owners, owners)\n  }, [getValues, safeInfo, setValue])\n\n  const handleBack = () => {\n    onBack(getValues())\n  }\n\n  return (\n    <FormProvider {...formMethods}>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <Box className={layoutCss.row}>\n          {fields.map((field, index) => (\n            <OwnerRow key={field.id} index={index} groupName=\"owners\" readOnly />\n          ))}\n        </Box>\n        <Divider />\n        <Box className={layoutCss.row}>\n          <Box display=\"flex\" flexDirection=\"row\" justifyContent=\"space-between\" gap={3}>\n            <Button variant=\"outlined\" size=\"small\" onClick={handleBack} startIcon={<ArrowBackIcon fontSize=\"small\" />}>\n              Back\n            </Button>\n            <Button type=\"submit\" variant=\"contained\" size=\"stretched\" disabled={!isValid}>\n              Next\n            </Button>\n          </Box>\n        </Box>\n      </form>\n    </FormProvider>\n  )\n}\n\nexport default SafeOwnerStep\n","import React from 'react'\nimport { Box, Button, Divider, Grid, Typography } from '@mui/material'\n\nimport type { StepRenderProps } from '@/components/new-safe/CardStepper/useCardStepper'\nimport type { LoadSafeFormData } from '@/components/new-safe/load'\nimport layoutCss from '@/components/new-safe/create/styles.module.css'\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack'\nimport ChainIndicator from '@/components/common/ChainIndicator'\nimport css from '@/components/new-safe/create/steps/ReviewStep/styles.module.css'\nimport EthHashInfo from '@/components/common/EthHashInfo'\nimport { useCurrentChain } from '@/hooks/useChains'\nimport { useAppDispatch } from '@/store'\nimport { useRouter } from 'next/router'\nimport { addOrUpdateSafe } from '@/store/addedSafesSlice'\nimport { defaultSafeInfo } from '@safe-global/store/slices/SafeInfo/utils'\nimport { LOAD_SAFE_EVENTS, OPEN_SAFE_LABELS, OVERVIEW_EVENTS, trackEvent } from '@/services/analytics'\nimport { AppRoutes } from '@/config/routes'\nimport ReviewRow from '@/components/new-safe/ReviewRow'\nimport { upsertAddressBookEntries } from '@/store/addressBookSlice'\nimport { maybePlural } from '@safe-global/utils/utils/formatters'\n\nconst SafeReviewStep = ({ data, onBack }: StepRenderProps<LoadSafeFormData>) => {\n  const chain = useCurrentChain()\n  const dispatch = useAppDispatch()\n  const router = useRouter()\n  const chainId = chain?.chainId || ''\n\n  const addSafe = () => {\n    const safeName = data.name\n    const safeAddress = data.address\n\n    dispatch(\n      addOrUpdateSafe({\n        safe: {\n          ...defaultSafeInfo,\n          address: { value: safeAddress, name: safeName },\n          threshold: data.threshold,\n          owners: data.owners.map((owner) => ({\n            value: owner.address,\n            name: owner.name || owner.ens,\n          })),\n          chainId,\n        },\n      }),\n    )\n\n    dispatch(\n      upsertAddressBookEntries({\n        chainIds: [chainId],\n        address: safeAddress,\n        name: safeName,\n      }),\n    )\n\n    for (const { address, name, ens } of data.owners) {\n      const entryName = name || ens\n\n      if (!entryName) {\n        continue\n      }\n\n      dispatch(\n        upsertAddressBookEntries({\n          chainIds: [chainId],\n          address,\n          name: entryName,\n        }),\n      )\n    }\n\n    trackEvent({\n      ...LOAD_SAFE_EVENTS.OWNERS,\n      label: data.owners.length,\n    })\n\n    trackEvent({\n      ...LOAD_SAFE_EVENTS.THRESHOLD,\n      label: data.threshold,\n    })\n\n    trackEvent({ ...OVERVIEW_EVENTS.OPEN_SAFE, label: OPEN_SAFE_LABELS.after_add })\n\n    router.push({\n      pathname: AppRoutes.home,\n      query: { safe: `${chain?.shortName}:${safeAddress}` },\n    })\n  }\n\n  const handleBack = () => {\n    onBack(data)\n  }\n\n  return (\n    <>\n      <Box className={layoutCss.row}>\n        <Grid container spacing={3}>\n          <ReviewRow name=\"Network\" value={<ChainIndicator chainId={chain?.chainId} inline />} />\n          <ReviewRow name=\"Name\" value={<Typography>{data.name}</Typography>} />\n          <ReviewRow\n            name=\"Signers\"\n            value={\n              <Box className={css.ownersArray}>\n                {data.owners.map((owner, index) => (\n                  <EthHashInfo\n                    address={owner.address}\n                    name={owner.name || owner.ens}\n                    shortAddress={false}\n                    showPrefix={false}\n                    showName\n                    hasExplorer\n                    showCopyButton\n                    key={index}\n                  />\n                ))}\n              </Box>\n            }\n          />\n          <ReviewRow\n            name=\"Threshold\"\n            value={\n              <Typography>\n                {data.threshold} out of {data.owners.length} signer{maybePlural(data.owners)}\n              </Typography>\n            }\n          />\n        </Grid>\n      </Box>\n      <Divider />\n      <Box className={layoutCss.row}>\n        <Box display=\"flex\" flexDirection=\"row\" justifyContent=\"space-between\" gap={3}>\n          <Button variant=\"outlined\" size=\"small\" onClick={handleBack} startIcon={<ArrowBackIcon fontSize=\"small\" />}>\n            Back\n          </Button>\n          <Button onClick={addSafe} variant=\"contained\" size=\"stretched\">\n            Add\n          </Button>\n        </Box>\n      </Box>\n    </>\n  )\n}\n\nexport default SafeReviewStep\n","import React from 'react'\nimport { useRouter } from 'next/router'\n\nimport { LOAD_SAFE_CATEGORY } from '@/services/analytics'\nimport { Container, Grid, Typography } from '@mui/material'\nimport { CardStepper } from '@/components/new-safe/CardStepper'\nimport type { TxStepperProps } from '@/components/new-safe/CardStepper/useCardStepper'\nimport type { NamedAddress } from '@/components/new-safe/create/types'\nimport SetAddressStep from '@/components/new-safe/load/steps/SetAddressStep'\nimport { AppRoutes } from '@/config/routes'\nimport SafeOwnerStep from '@/components/new-safe/load/steps/SafeOwnerStep'\nimport SafeReviewStep from '@/components/new-safe/load/steps/SafeReviewStep'\n\nexport type LoadSafeFormData = NamedAddress & {\n  threshold: number\n  owners: NamedAddress[]\n}\n\nexport const LoadSafeSteps: TxStepperProps<LoadSafeFormData>['steps'] = [\n  {\n    title: 'Choose address, network and a name',\n    subtitle: 'Paste the address of the Safe Account you want to add, select the network and choose a name.',\n    render: (data, onSubmit, onBack, setStep) => (\n      <SetAddressStep onSubmit={onSubmit} onBack={onBack} data={data} setStep={setStep} />\n    ),\n  },\n  {\n    title: 'Signers and confirmations',\n    subtitle: 'Optional: Provide a name for each signer.',\n    render: (data, onSubmit, onBack, setStep) => (\n      <SafeOwnerStep onSubmit={onSubmit} onBack={onBack} data={data} setStep={setStep} />\n    ),\n  },\n  {\n    title: 'Review',\n    subtitle: 'Confirm adding Safe Account to your Watchlist',\n    render: (data, onSubmit, onBack, setStep) => (\n      <SafeReviewStep onSubmit={onSubmit} onBack={onBack} data={data} setStep={setStep} />\n    ),\n  },\n]\n\nexport const loadSafeDefaultData = { threshold: -1, owners: [], address: '', name: '' }\n\nconst LoadSafe = ({ initialData }: { initialData?: TxStepperProps<LoadSafeFormData>['initialData'] }) => {\n  const router = useRouter()\n\n  const onClose = () => {\n    router.push(AppRoutes.welcome.index)\n  }\n\n  const initialSafe = initialData ?? loadSafeDefaultData\n\n  return (\n    <Container data-testid=\"load-safe-form\">\n      <Grid\n        container\n        columnSpacing={3}\n        sx={{\n          mt: [2, null, 7],\n          justifyContent: 'center',\n        }}\n      >\n        <Grid item xs={12} md={10} lg={8}>\n          <Typography\n            variant=\"h2\"\n            sx={{\n              pb: 2,\n            }}\n          >\n            Add existing Safe Account\n          </Typography>\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          md={10}\n          lg={8}\n          sx={{\n            order: [1, null, 0],\n          }}\n        >\n          <CardStepper\n            // Populate initial data\n            key={initialSafe.address}\n            initialData={initialSafe}\n            onClose={onClose}\n            steps={LoadSafeSteps}\n            eventCategory={LOAD_SAFE_CATEGORY}\n          />\n        </Grid>\n      </Grid>\n    </Container>\n  )\n}\n\nexport default LoadSafe\n","import type { NextPage } from 'next'\nimport Head from 'next/head'\nimport { useRouter } from 'next/router'\nimport LoadSafe, { loadSafeDefaultData } from '@/components/new-safe/load'\nimport { BRAND_NAME } from '@/config/constants'\n\nconst Load: NextPage = () => {\n  const router = useRouter()\n  const { address = '' } = router.query\n  const safeAddress = Array.isArray(address) ? address[0] : address\n\n  return (\n    <main>\n      <Head>\n        <title>{`${BRAND_NAME} – Add Safe Account`}</title>\n      </Head>\n\n      {safeAddress ? (\n        <LoadSafe initialData={{ ...loadSafeDefaultData, address: safeAddress }} />\n      ) : (\n        <LoadSafe initialData={loadSafeDefaultData} />\n      )}\n    </main>\n  )\n}\n\nexport default Load\n","import type { Dispatch, ReactElement, SetStateAction } from 'react'\nimport { useState } from 'react'\nimport { trackEvent, MODALS_CATEGORY } from '@/services/analytics'\n\nexport type StepRenderProps<TData> = {\n  data: TData\n  onSubmit: (data: Partial<TData>) => void\n  onBack: (data?: Partial<TData>) => void\n  setStep: (step: number) => void\n  setProgressColor?: Dispatch<SetStateAction<string>>\n  setStepData?: Dispatch<SetStateAction<TData>>\n}\n\ntype Step<TData> = {\n  title: string\n  subtitle: string\n  render: (\n    data: StepRenderProps<TData>['data'],\n    onSubmit: StepRenderProps<TData>['onSubmit'],\n    onBack: StepRenderProps<TData>['onBack'],\n    setStep: StepRenderProps<TData>['setStep'],\n    setProgressColor: StepRenderProps<TData>['setProgressColor'],\n    setStepData: StepRenderProps<TData>['setStepData'],\n  ) => ReactElement\n}\n\nexport type TxStepperProps<TData> = {\n  steps: Array<Step<TData>>\n  initialData: TData\n  initialStep?: number\n  eventCategory?: string\n  setWidgetStep?: (step: number | SetStateAction<number>) => void\n  onClose: () => void\n}\n\nexport const useCardStepper = <TData>({\n  steps,\n  initialData,\n  initialStep,\n  eventCategory = MODALS_CATEGORY,\n  onClose,\n  setWidgetStep,\n}: TxStepperProps<TData>) => {\n  const [activeStep, setActiveStep] = useState<number>(initialStep || 0)\n  const [stepData, setStepData] = useState(initialData)\n\n  const handleNext = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep + 1)\n    setWidgetStep && setWidgetStep((prevActiveStep) => prevActiveStep + 1)\n    trackEvent({ category: eventCategory, action: lastStep ? 'Submit' : 'Next', label: activeStep })\n  }\n\n  const handleBack = (data?: Partial<TData>) => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1)\n    setWidgetStep && setWidgetStep((prevActiveStep) => prevActiveStep - 1)\n    trackEvent({ category: eventCategory, action: firstStep ? 'Cancel' : 'Back', label: activeStep })\n\n    if (data) {\n      setStepData((previous) => ({ ...previous, ...data }))\n    }\n  }\n\n  const setStep = (step: number) => {\n    setActiveStep(step)\n    setWidgetStep && setWidgetStep(step)\n  }\n\n  const firstStep = activeStep === 0\n  const lastStep = activeStep === steps.length - 1\n\n  const onBack = firstStep ? onClose : handleBack\n\n  const onSubmit = (data: Partial<TData>) => {\n    if (lastStep) {\n      onClose()\n      return\n    }\n    setStepData((previous) => ({ ...previous, ...data }))\n    handleNext()\n  }\n\n  return {\n    onBack,\n    onSubmit,\n    setStep,\n    activeStep,\n    stepData,\n    firstStep,\n    setStepData,\n  }\n}\n","import { useState } from 'react'\nimport { Box } from '@mui/system'\nimport lightPalette from '@/components/theme/lightPalette'\nimport css from './styles.module.css'\nimport { Card, LinearProgress, CardHeader, Avatar, Typography, CardContent } from '@mui/material'\nimport type { TxStepperProps } from './useCardStepper'\nimport { useCardStepper } from './useCardStepper'\n\nexport function CardStepper<StepperData>(props: TxStepperProps<StepperData>) {\n  const [progressColor, setProgressColor] = useState(lightPalette.secondary.main)\n  const { activeStep, onSubmit, onBack, stepData, setStep, setStepData } = useCardStepper<StepperData>(props)\n  const { steps } = props\n  const currentStep = steps[activeStep]\n  const progress = ((activeStep + 1) / steps.length) * 100\n\n  return (\n    <Card className={css.card}>\n      <Box className={css.progress} color={progressColor}>\n        <LinearProgress color=\"inherit\" variant=\"determinate\" value={Math.min(progress, 100)} />\n      </Box>\n      {currentStep.title && (\n        <CardHeader\n          title={currentStep.title}\n          subheader={currentStep.subtitle}\n          titleTypographyProps={{ variant: 'h4' }}\n          subheaderTypographyProps={{ variant: 'body2' }}\n          avatar={\n            <Avatar className={css.step}>\n              <Typography variant=\"body2\">{activeStep + 1}</Typography>\n            </Avatar>\n          }\n          className={css.header}\n        />\n      )}\n      <CardContent className={css.content}>\n        {currentStep.render(stepData, onSubmit, onBack, setStep, setProgressColor, setStepData)}\n      </CardContent>\n    </Card>\n  )\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"styles_card__uoWK3\",\"select\":\"styles_select__P_k1Z\",\"networkSelect\":\"styles_networkSelect__R8qLL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"styles_row__UGXjL\"};","import { useCallback, useEffect, useMemo } from 'react'\nimport { CircularProgress, FormControl, Grid, IconButton, SvgIcon, Typography } from '@mui/material'\nimport NameInput from '@/components/common/NameInput'\nimport InputAdornment from '@mui/material/InputAdornment'\nimport AddressBookInput from '@/components/common/AddressBookInput'\nimport DeleteIcon from '@/public/images/common/delete.svg'\nimport { useFormContext, useWatch } from 'react-hook-form'\nimport { useAddressResolver } from '@/hooks/useAddressResolver'\nimport EthHashInfo from '@/components/common/EthHashInfo'\nimport type { NamedAddress } from '@/components/new-safe/create/types'\nimport useWallet from '@/hooks/wallets/useWallet'\nimport { sameAddress } from '@safe-global/utils/utils/addresses'\nimport css from './styles.module.css'\nimport classNames from 'classnames'\nimport useSafeInfo from '@/hooks/useSafeInfo'\n\nexport const OwnerRow = ({\n  index,\n  groupName,\n  removable = true,\n  remove,\n  readOnly = false,\n}: {\n  index: number\n  removable?: boolean\n  groupName: string\n  remove?: (index: number) => void\n  readOnly?: boolean\n}) => {\n  const { safeAddress } = useSafeInfo()\n  const wallet = useWallet()\n  const fieldName = `${groupName}.${index}`\n  const { control, getValues, setValue } = useFormContext()\n  const owners = useWatch({\n    control,\n    name: groupName,\n  })\n  const owner = useWatch({\n    control,\n    name: fieldName,\n  })\n\n  const deps = useMemo(() => {\n    return Array.from({ length: owners.length }, (_, i) => `${groupName}.${i}`)\n  }, [owners, groupName])\n\n  const validateOwnerAddress = useCallback(\n    async (address: string) => {\n      if (sameAddress(address, safeAddress)) {\n        return 'The Safe Account cannot own itself'\n      }\n      const owners = getValues('owners')\n      if (owners.filter((owner: NamedAddress) => sameAddress(owner.address, address)).length > 1) {\n        return 'Signer is already added'\n      }\n    },\n    [getValues, safeAddress],\n  )\n\n  const { name, ens, resolving } = useAddressResolver(owner.address)\n\n  useEffect(() => {\n    if (name && !getValues(`${fieldName}.name`)) {\n      setValue(`${fieldName}.name`, name)\n    }\n  }, [setValue, getValues, name, fieldName])\n\n  useEffect(() => {\n    if (ens) {\n      setValue(`${fieldName}.ens`, ens)\n    }\n  }, [ens, setValue, fieldName])\n\n  const walletIsOwner = owner.address === wallet?.address\n\n  return (\n    <Grid\n      container\n      spacing={3}\n      className={classNames({ [css.helper]: walletIsOwner })}\n      sx={{\n        alignItems: 'center',\n        marginBottom: 3,\n        flexWrap: ['wrap', undefined, 'nowrap'],\n      }}\n    >\n      <Grid item xs={12} md={readOnly ? 5 : 4}>\n        <FormControl fullWidth>\n          <NameInput\n            data-testid=\"owner-name\"\n            name={`${fieldName}.name`}\n            label=\"Signer name\"\n            InputLabelProps={{ shrink: true }}\n            placeholder={ens || `Signer ${index + 1}`}\n            helperText={walletIsOwner && 'Your connected wallet'}\n            InputProps={{\n              endAdornment: resolving ? (\n                <InputAdornment position=\"end\">\n                  <CircularProgress size={20} />\n                </InputAdornment>\n              ) : null,\n            }}\n          />\n        </FormControl>\n      </Grid>\n      <Grid item xs={11} md={7}>\n        {readOnly ? (\n          <Typography variant=\"body2\" component=\"div\">\n            <EthHashInfo address={owner.address} shortAddress hasExplorer showCopyButton />\n          </Typography>\n        ) : (\n          <FormControl fullWidth>\n            <AddressBookInput\n              name={`${fieldName}.address`}\n              label=\"Signer\"\n              validate={validateOwnerAddress}\n              deps={deps}\n              onReset={() => setValue(`${fieldName}.name`, '')}\n            />\n          </FormControl>\n        )}\n      </Grid>\n      {!readOnly && (\n        <Grid\n          item\n          xs={1}\n          sx={{\n            ml: -2,\n            alignSelf: 'stretch',\n            display: 'flex',\n            alignItems: 'center',\n            flexShrink: 0,\n          }}\n        >\n          {removable && (\n            <>\n              <IconButton data-testid=\"remove-owner-btn\" onClick={() => remove?.(index)} aria-label=\"Remove signer\">\n                <SvgIcon component={DeleteIcon} inheritViewBox />\n              </IconButton>\n            </>\n          )}\n        </Grid>\n      )}\n    </Grid>\n  )\n}\n\nexport default OwnerRow\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ownersArray\":\"styles_ownersArray__Lwugg\",\"strikethrough\":\"styles_strikethrough__dsfcO\",\"errorMessage\":\"styles_errorMessage__EgiJf\",\"networkFee\":\"styles_networkFee__s25eL\",\"networkFeeInline\":\"styles_networkFeeInline__o4u72\"};"],"names":["name","value","ReviewRow","Grid","item","xs","Typography","variant","Field","errors","data","SetAddressStep","onSubmit","onBack","currentChainId","useChainId","addedSafes","useAppSelector","selectAddedSafes","state","formMethods","useForm","mode","defaultValues","handleSubmit","formState","isValid","watch","getValues","safeAddress","randomName","useMnemonicSafeName","ens","resolving","useAddressResolver","fallbackName","validateSafeAddress","address","Object","keys","includes","getSafeInfo","error","onFormSubmit","trackEvent","LOAD_SAFE_EVENTS","NAME_SAFE","FormProvider","form","Box","className","layoutCss","container","spacing","sx","mb","pr","md","NameInput","label","message","placeholder","InputLabelProps","shrink","InputProps","endAdornment","InputAdornment","position","CircularProgress","size","Tooltip","title","arrow","placement","SvgIcon","component","InfoIcon","inheritViewBox","order","css","NetworkSelector","AddressInput","data-testid","validate","mt","Link","href","AppRoutes","terms","passHref","legacyBehavior","MUILink","privacy","Divider","display","flexDirection","justifyContent","gap","Button","onClick","handleBack","formData","startIcon","ArrowBackIcon","fontSize","type","disabled","SafeOwnerStep","chainId","setValue","control","fields","useFieldArray","safeInfo","useAsync","useEffect","threshold","owners","map","owner","i","field","index","OwnerRow","groupName","readOnly","id","chain","useCurrentChain","dispatch","useAppDispatch","router","useRouter","ChainIndicator","inline","EthHashInfo","shortAddress","showPrefix","showName","hasExplorer","showCopyButton","length","maybePlural","addSafe","safeName","addOrUpdateSafe","safe","defaultSafeInfo","upsertAddressBookEntries","chainIds","entryName","OWNERS","THRESHOLD","OVERVIEW_EVENTS","OPEN_SAFE","OPEN_SAFE_LABELS","after_add","push","pathname","home","query","shortName","LoadSafeSteps","subtitle","render","setStep","SafeReviewStep","loadSafeDefaultData","LoadSafe","initialData","initialSafe","Container","columnSpacing","lg","pb","CardStepper","onClose","welcome","steps","eventCategory","LOAD_SAFE_CATEGORY","Load","Array","isArray","main","Head","BRAND_NAME","useCardStepper","initialStep","MODALS_CATEGORY","setWidgetStep","activeStep","setActiveStep","useState","stepData","setStepData","handleNext","prevActiveStep","category","action","lastStep","firstStep","previous","step","props","progressColor","setProgressColor","lightPalette","secondary","currentStep","progress","Card","color","LinearProgress","Math","min","CardHeader","subheader","titleTypographyProps","subheaderTypographyProps","avatar","Avatar","CardContent","removable","remove","useSafeInfo","wallet","useWallet","fieldName","useFormContext","useWatch","deps","useMemo","from","_","validateOwnerAddress","useCallback","sameAddress","filter","walletIsOwner","classNames","alignItems","marginBottom","flexWrap","undefined","FormControl","fullWidth","helperText","AddressBookInput","onReset","ml","alignSelf","flexShrink","IconButton","aria-label","DeleteIcon"],"sourceRoot":"","ignoreList":[]}