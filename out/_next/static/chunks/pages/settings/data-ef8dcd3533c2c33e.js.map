{"version":3,"file":"static/chunks/pages/settings/data-ef8dcd3533c2c33e.js","mappings":"gFACA,4CACA,iBACA,WACA,OAAe,EAAQ,KAAsC,CAC7D,EACA,SAFsB,iIEiCtB,MA9BgB,OAAC,MAAEA,CAAI,CAAuB,GACtCC,EAASC,CAAAA,EA6BKC,EA7BLD,SAAAA,CAASA,GAClBE,EAAYC,KAAKC,GAAG,CAAC,EAAGN,EAAKO,GAAG,CAAC,GAASC,EAAIC,IAAI,EAAEC,OAAO,CAACT,EAAOU,QAAQ,GAC3EC,EAAQX,EAAOW,KAAK,CAACC,IAAI,CAAG,CAAEA,KAAMZ,EAAOW,KAAK,CAACC,IAAI,OAAKC,EAEhE,MACE,UAACC,EAAAA,GAAIA,CAAAA,CAACC,MAAOZ,EAAWa,QAAQ,aAAaC,wBAAwB,IAACC,UAAWC,IAAAA,IAAQ,UACtFpB,EAAKO,GAAG,CAAC,CAACC,EAAKa,IACd,UAACC,EAAAA,GAAGA,CAAAA,CAEFb,KAAM,CAAEE,SAAUH,EAAIC,IAAI,OAAEG,CAAM,EAClCW,UAAWC,CAAAA,GACXC,SAAU,EACVN,UAAWC,IAAAA,GAAO,CAClBM,MACE,UAACC,EAAAA,GAAUA,CAAAA,CACTV,QAAQ,QACRW,WAAY,IACZC,MAAOzB,IAAciB,EAAM,UAAY,gBACvCF,UAAWC,IAAAA,KAAS,UAEnBZ,EAAIkB,KAAK,IAZTlB,EAAIC,IAAI,IAmBvB,aClCA,WAAkB,8MCqBlB,MAhBuB,IAEnB,wBAcWqB,IAAIA,EAAA,GAbb,UAACC,IAAIA,UACH,UAACC,QAAAA,UAAO,GAAc,IADnBD,EACmB,CAAXE,EAAAA,EAAUA,CAAC,0BAGxB,UAACC,EAAAA,CAAcA,CAAAA,CAAAA,GAEf,UAACC,OAAAA,UACC,UAACC,EAAAA,CAAcA,CAAAA,CAAAA,wHCUvB,MAnBmB,OAAC,OAClBJ,CAAK,QACLK,CAAM,IAiBOC,MAhBbC,CAAQ,CAKT,EAWwBD,CAVvB,CAUuB,KATrB,WAACE,EAAAA,GAAGA,CAAAA,CAACrB,UAAWsB,IAAWrB,IAAAA,SAAAA,CAAa,CAAI,CAACA,IAAAA,MAAAA,CAAU,CAAG,CAACmB,CAAS,aAClE,EADwBE,CAACrB,EACzB,KAACO,EAAAA,GAAUA,CAAAA,CAACV,QAAQ,KAAKE,UAAWC,CAAAA,GAAAA,KAAAA,CAAS,SAC1CY,IAEFK,IAGP,oJCUA,MAAeK,CAAAA,EAAAA,SAAAA,CAAAA,CAAQA,CAACR,OAvBO,aAC7BS,CAAW,OACXC,CAAK,CAIN,GACOC,EAAWF,EACbG,EAAAA,EAAgBA,CAACC,MAAM,CAAEC,GAAUC,CAAAA,EAAAA,EAAAA,EAAAA,CAAcA,CAACD,EAAMvC,IAAI,CAAEmC,IAC9DM,EAAAA,EAAuBA,CAE3B,MACE,UAACZ,EAAAA,CAAUA,CAAAA,CACTN,MAAOW,EAAc,WAAa,cAClCN,OACE,UAACc,MAAAA,CAAIhC,UAAWC,CAAAA,GAAAA,UAAAA,CAAc,SAC5B,UAACjB,EAAAA,CAAOA,CAAAA,CAACH,KAAM6C,OAKzB,EAEwC,CACtCF,YAAaS,EAAAA,CAAcA,CAC3BR,MAAOS,EAAAA,EAAeA,EACtB,YCpCF,WAAkB","sources":["webpack://_N_E/?6781","webpack://_N_E/./src/components/common/Mui/index.tsx","webpack://_N_E/./src/components/common/NavTabs/index.tsx","webpack://_N_E/./src/components/common/NavTabs/styles.module.css","webpack://_N_E/./src/pages/settings/data.tsx","webpack://_N_E/./src/components/common/PageHeader/index.tsx","webpack://_N_E/./src/components/settings/SettingsHeader/index.tsx","webpack://_N_E/./src/components/common/PageHeader/styles.module.css"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/settings/data\",\n      function () {\n        return require(\"private-next-pages/settings/data.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/settings/data\"])\n      });\n    }\n  ","export * from \"/app/apps/web/src/components/common/Mui/index.tsx\"","import React from 'react'\nimport NextLink from 'next/link'\nimport { Tab, Tabs, Typography } from '@mui/material'\nimport { useRouter } from 'next/router'\nimport type { NavItem } from '@/components/sidebar/SidebarNavigation/config'\nimport css from './styles.module.css'\n\nconst NavTabs = ({ tabs }: { tabs: NavItem[] }) => {\n  const router = useRouter()\n  const activeTab = Math.max(0, tabs.map((tab) => tab.href).indexOf(router.pathname))\n  const query = router.query.safe ? { safe: router.query.safe } : undefined\n\n  return (\n    <Tabs value={activeTab} variant=\"scrollable\" allowScrollButtonsMobile className={css.tabs}>\n      {tabs.map((tab, idx) => (\n        <Tab\n          key={tab.href}\n          href={{ pathname: tab.href, query }}\n          component={NextLink}\n          tabIndex={0}\n          className={css.tab}\n          label={\n            <Typography\n              variant=\"body2\"\n              fontWeight={700}\n              color={activeTab === idx ? 'primary' : 'primary.light'}\n              className={css.label}\n            >\n              {tab.label}\n            </Typography>\n          }\n        />\n      ))}\n    </Tabs>\n  )\n}\n\nexport default NavTabs\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tabs\":\"styles_tabs__8AoqD\",\"tab\":\"styles_tab__WjqMe\",\"label\":\"styles_label__D53iN\"};","import DataManagement from '@/components/settings/DataManagement'\nimport SettingsHeader from '@/components/settings/SettingsHeader'\nimport { BRAND_NAME } from '@/config/constants'\nimport type { NextPage } from 'next'\nimport Head from 'next/head'\n\nconst Data: NextPage = () => {\n  return (\n    <>\n      <Head>\n        <title>{`${BRAND_NAME} – Settings – Data`}</title>\n      </Head>\n\n      <SettingsHeader />\n\n      <main>\n        <DataManagement />\n      </main>\n    </>\n  )\n}\n\nexport default Data\n","import { Box, Typography } from '@mui/material'\nimport classNames from 'classnames'\n\nimport type { ReactElement } from 'react'\n\nimport css from './styles.module.css'\n\nconst PageHeader = ({\n  title,\n  action,\n  noBorder,\n}: {\n  title: string\n  action?: ReactElement\n  noBorder?: boolean\n}): ReactElement => {\n  return (\n    <Box className={classNames(css.container, { [css.border]: !noBorder })}>\n      <Typography variant=\"h3\" className={css.title}>\n        {title}\n      </Typography>\n      {action}\n    </Box>\n  )\n}\n\nexport default PageHeader\n","import type { ReactElement } from 'react'\n\nimport NavTabs from '@/components/common/NavTabs'\nimport PageHeader from '@/components/common/PageHeader'\nimport { generalSettingsNavItems, settingsNavItems } from '@/components/sidebar/SidebarNavigation/config'\nimport css from '@/components/common/PageHeader/styles.module.css'\nimport useSafeAddress from '@/hooks/useSafeAddress'\nimport { useCurrentChain } from '@/hooks/useChains'\nimport { isRouteEnabled } from '@/utils/chains'\nimport madProps from '@/utils/mad-props'\n\nexport const SettingsHeader = ({\n  safeAddress,\n  chain,\n}: {\n  safeAddress: ReturnType<typeof useSafeAddress>\n  chain: ReturnType<typeof useCurrentChain>\n}): ReactElement => {\n  const navItems = safeAddress\n    ? settingsNavItems.filter((route) => isRouteEnabled(route.href, chain))\n    : generalSettingsNavItems\n\n  return (\n    <PageHeader\n      title={safeAddress ? 'Settings' : 'Preferences'}\n      action={\n        <div className={css.navWrapper}>\n          <NavTabs tabs={navItems} />\n        </div>\n      }\n    />\n  )\n}\n\nexport default madProps(SettingsHeader, {\n  safeAddress: useSafeAddress,\n  chain: useCurrentChain,\n})\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__sGid8\",\"title\":\"styles_title___s0jt\",\"border\":\"styles_border__BkX1U\",\"pageHeader\":\"styles_pageHeader__fRL7d\",\"actionsWrapper\":\"styles_actionsWrapper__g_Tq2\",\"navWrapper\":\"styles_navWrapper__XNqgs\"};"],"names":["tabs","router","useRouter","NavTabs","activeTab","Math","max","map","tab","href","indexOf","pathname","query","safe","undefined","Tabs","value","variant","allowScrollButtonsMobile","className","css","idx","Tab","component","NextLink","tabIndex","label","Typography","fontWeight","color","Data","Head","title","BRAND_NAME","SettingsHeader","main","DataManagement","action","PageHeader","noBorder","Box","classNames","madProps","safeAddress","chain","navItems","settingsNavItems","filter","route","isRouteEnabled","generalSettingsNavItems","div","useSafeAddress","useCurrentChain"],"sourceRoot":"","ignoreList":[]}