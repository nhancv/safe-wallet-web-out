{"version":3,"file":"static/chunks/pages/settings/notifications-29d21330cbc6a8d1.js","mappings":"+EACA,4CACA,0BACA,WACA,OAAe,EAAQ,KAA+C,CACtE,EACA,SAFsB,uBCJtB,IAAIA,EAAiBC,EAAQ,KAAmB,EAC5CC,EAAcD,EAAQ,KAAgB,CADdA,CAExBE,EAAWF,EAAQ,KAAa,CADXA,CAErBG,EAAoBH,EAAQ,KAAqB,CAD/BA,CA8BtBI,EAAOC,OAAO,CA7BiBL,EAuBL,SAASM,CAAK,CAAEC,CAAM,EAC9C,OAAOJ,EAAkBG,GACrBP,EAAeO,EAAOL,EAAYM,EAAQ,EAAGJ,EAAmB,KAChE,EAAE,iCC7BR,IAAIK,EAAYR,EAAQ,KAAc,EAClCS,EAAgBT,EAAQ,KAAkB,CADvBA,GAqChBK,OAAO,CApCaL,EAoCVC,OAvBRA,EAAYK,CAAK,CAAEI,CAAK,CAAEC,CAAS,CAAEC,CAAQ,CAAEC,CAAM,EAC5D,IAAIC,EAAQ,CAAC,EACTC,EAAST,EAAMS,MAAM,CAKzB,IAHAJ,IAAcA,EAAYF,CAAAA,CAAY,CACtCI,IADcF,EACM,IAEb,EAAEG,EAAQC,GAAQ,CACvB,IAAIC,EAAQV,CAAK,CAACQ,EAAM,CACpBJ,EAAQ,GAAKC,EAAUK,GACrBN,EAAQ,EAEVT,CAFa,CAEDe,EAAON,EAAQ,EAAGC,EAAWC,EAAUC,GAEnDL,EAAUK,EAAQG,GAEVJ,IACVC,CAAM,CAACA,EAAOE,EADM,IACA,CAAC,CAAGC,CAAAA,CAE5B,CACA,OAAOH,CACT,sZEdA,WAAKI,CAAAA,8PAAAA,GAAAA,GAAAA,CAAAA,GA2DL,MApDkC,OAAuB,CACvDC,UAAQ,YACRC,CAAU,GAkDGC,cAjDbC,CAAe,UAiDuBD,CAhDtCE,CAAS,cACTC,GAAe,CAAK,qBACpBC,GAAsB,CAAK,CACO,GAC5BC,EAASC,CAAAA,EAAAA,EAAAA,EAAAA,CAASA,GAClBC,EAAgBC,CAAAA,EAAAA,EAAAA,CAAAA,CAAgBA,GAChCC,EAAeC,CAAAA,EAAAA,EAAAA,CAAAA,CAAeA,GAC9BC,EAAMC,CAAAA,EAAAA,EAAAA,EAAAA,CAAUA,GAChBC,EAAgBC,CAAAA,EAAAA,EAAAA,CAAAA,CAAgBA,CACpCf,KACKE,EAAkB,CAACA,EAAgB,CAAG,EAAE,EAKzC,MAAEc,CAAI,YAAEC,CAAU,CAAE,CAAGC,CAAAA,EAAAA,EAAAA,CAAAA,CAAWA,GAElCC,EAAmB,CAACH,EAAKI,QAAQ,CAEjCC,EAAUC,CAAAA,EAAAA,EAAAA,OAAAA,CAAOA,CAAC,IACtB,EAII,CAACV,CAJD,EAIQK,EACV,UADsB,mBAIpBE,GAAoB,CAACd,EACvB,mBAD4C,gCAIzCS,SACH,MADkB,uDAXlB,6BAcD,CAACT,EAAqBS,EAAeK,EAAkBP,EAAKN,EAAQW,EAAW,SAElF,GAAoBP,EAAqBX,GAAS,GAC7CsB,EACDlB,EAAkBJ,EAFY,CAEH,EADjB,CAIZ,GAHa,EAGb,KAACwB,EAAAA,GAAOA,CAAAA,CAACC,MAAOH,WACd,UAACI,OAAAA,CAAKC,QAASpB,OAASqB,EAAYnB,WAAgBT,EAAS,QAL5CA,GAAS,EAQhC,gFC9BO,IAAM6B,EAAyB,CAACC,EAAoCC,IAClEC,IACLC,IAAUH,EAAO,CAACI,EAAeC,GADtBH,EAET,IAAMI,CADCH,CACqBF,CAAe,CAACI,EAAQ,CAAGE,OAAOC,IAAI,CAACP,CAAe,CAACI,EAAQ,EAAI,EAAE,CACjG,OAAOI,IAAWL,EAAeE,EACnC,GACA,GAAmBF,EAAcrC,IAFd0C,EAEoB,CAAG,GAIjCC,EAAuB,GAC3BH,OAAOI,OAAO,CAACC,GAAYC,MAAM,CAAkB,CAACC,EAAAA,QAAK,CAACT,EAASU,EAAkB,GAE1F,OADAD,CAAG,CAACT,EAAQ,CAAGE,OAAOC,IAAI,CAACO,GACpBD,CACT,EAAG,CAAC,GAIOE,EAAmC,IAG9C,GAAKC,CAAD,CAIJ,OAAOV,OAJc,MAID,CAACU,GAAgBJ,MAAM,CAAkB,CAACC,EAAAA,QAAK,SAAET,CAAO,aAAEa,CAAW,CAAE,GAMzF,OALKJ,CAAG,CAACT,EAAQ,EAAE,CACjBS,CAAG,CAACT,EAAQ,CAAG,IAGjBS,CAAG,CAACT,EAAQ,CAACc,IAAI,CAACD,GACXJ,CACT,EAAG,CAAC,EACN,EAAC,EAGuC,CACtCM,EACAC,IAEOd,OAAOI,OAAO,CAACU,GAAiBR,MAAM,CAAkB,CAACC,EAAAA,QAAK,CAACT,EAASD,EAAc,GAO3F,OANcgB,EAAOE,IAAI,CAAC,GAAWC,EAAMlB,OAAO,GAAKA,IAGrDS,EAAG,CAACT,EAAQ,CAAGD,CAAAA,EAGVU,CACT,EAAG,CAAC,GAIOU,EAAwB,CACnCC,EACAb,EACAc,KAEA,IAAMC,EAAQjB,EAAqBE,GAE7BQ,EAASQ,MAAMC,IAAI,CACvB,IAAIC,IAAI,IACHvB,OAAOC,IAAI,CAACI,GAAc,CAAC,MAC3BL,OAAOC,IAAI,CAACkB,GAAwB,CAAC,MACrCnB,OAAOC,IAAI,CAACiB,GAAc,CAAC,GAC/B,GAGCJ,EAAmC,CAAC,EACxC,IAAK,IAAMhB,KAAWe,EAAQ,KAEFO,EADAF,EAA1B,IAAMM,EAAoBN,QAAAA,QAAAA,EAAAA,KAAAA,EAAAA,CAAY,CAACpB,EAAAA,GAAboB,KAAAA,EAAAA,EAAAA,EAAAA,EAAyB,EAAE,CAC/CV,EAAoBY,CAAAA,QAAAA,EAAAA,CAAK,CAACtB,EAAQ,GAAdsB,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAgBK,MAAM,CAAC,GAAkBD,EAAkBE,QAAQ,CAACC,GAAAA,GAAkB,EAAE,CAG5GC,EAAsBP,MAAMC,IAAI,CACpC,IAAIC,IAAI,IAH0BJ,OAAAA,EAAAA,KAAAA,EAAAA,CAAsB,CAACrB,EAAAA,GAAY,EAAE,IAG3BU,KAAsBgB,EAAkB,EAEtFV,EAAe,CAAChB,EAAQ,CAAG8B,CAC7B,CAEA,OAAOd,CACT,EAAC,EAEuC,GAC/Bd,OAAOhD,MAAM,CAAC8D,GAAiBR,MAAM,CAAC,CAACC,EAAKV,IACzCU,GAAOV,EAAcrC,MAAM,CAClC,GAGQqE,EAAuB,CAACf,EAAkCgB,IAGrE,GAA0B,CAAtB1B,OAFmBA,OAAO,CAACU,GAEnBtD,MAAM,EAIXwC,OAAOI,OAAO,CAACU,GAAiBiB,KAAK,CAAC,OAAC,CAACjC,EAASD,EAAc,GAC9DmC,EAAWhC,OAAOC,IAAI,CAAC6B,GAAeJ,QAAQ,CAAC5B,GAC/CmC,QAAepC,EAAAA,KAAAA,EAAAA,EAAekC,KAAK,CAAC,QAAiBD,CAAtCjC,QAA4D,QAAtBiC,EAAAA,CAAa,CAAChC,EAAAA,GAAdgC,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAwBJ,QAAQ,CAACf,KAC5F,OAAOqB,GAAYC,CACrB,GAIWC,EAA8B,CACzCJ,EACAK,IAEOnC,OAAOI,OAAO,CAAC0B,GACnBL,MAAM,CAAC,OAAC,EAAG5B,EAAc,UAAKA,EAAcrC,MAAM,CAAG,IACrD8C,MAAM,CAAC,CAACC,EAAAA,QAAK,CAACT,EAASD,EAAc,GAC9BuC,EAAa,QAACD,EAAAA,KAAAA,EAAAA,CAAsB,CAACrC,EAAAA,EACrCuC,EAAYxC,EAAcyC,IAAI,CAAE3B,QAAiBwB,CADnCA,OACkC,CAACA,SAAAA,KAAAA,EAAAA,QAAAA,EAAAA,CAAsB,CAACrC,EAAAA,GAAvBqC,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAiCT,QAAQ,CAACf,EAAAA,IAKjG,OAHIyB,GAAcC,CAAAA,GAAW,CAC3B9B,IAAO,EAEFA,CACT,EAAG,GAGMgC,EAA+B,CAC1CT,EACAK,IAEOnC,OAAOI,OAAO,CAAC0B,GAAeQ,IAAI,CAAC,OAAC,CAACxC,EAASD,EAAc,GACjE,OAAOA,EAAcyC,IAAI,CAAC,QAAkBH,QAAD,QAACA,EAAAA,KAAAA,EAA+B,QAA/BA,EAAAA,CAAsB,CAACrC,EAAAA,GAAvBqC,KAAAA,EAAAA,EAAAA,EAAAA,KAAAA,EAAAA,EAAiCT,QAAQ,CAACf,EAAAA,GACxF,GAGW6B,EAAiC,CAC5CV,EACAK,IAEOnC,OAAOI,OAAO,CAAC+B,GAAwB,CAAC,GAAGG,IAAI,CAAC,OAAC,CAACxC,EAASD,EAAc,GAC9E,OAAOA,EAAcyC,IAAI,CAAE3B,QAAiBmB,QAAD,SAACA,GAAAA,CAAa,CAAChC,EAAAA,GAAdgC,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAwBJ,QAAQ,CAACf,EAAAA,GAC/E,GAMW8B,GAAsB,CACjCX,EACAK,KAEA,IAAMO,EAAkB1C,OAAOI,OAAO,CAAC0B,GAAexB,MAAM,CAAkB,CAACC,EAAAA,QAAK,CAACT,EAASD,EAAc,GACpG8C,EAAyB9C,EAAc4B,MAAM,CACjD,QAAkBU,QAAD,QAACA,EAAAA,KAAAA,EAAAA,OAAAA,GAAAA,CAAsB,CAACrC,EAAAA,GAAvBqC,KAAAA,EAAAA,EAAAA,EAAAA,KAAAA,EAAAA,EAAiCT,QAAQ,CAACf,EAAAA,IAO9D,OAJIgC,EAAuBnF,MAAM,CAAG,GAAG,EAClC,CAACsC,EAAQ,CAAG6C,CAAAA,EAGVpC,CACT,EAAG,CAAC,GAIJ,GAFuBP,CAEnB4C,MAF0B5F,MAAM,CAAC0F,GAAiBJ,IAAI,CAAC,GAAmBzC,EAAcrC,MAAM,CAAG,GAGnG,OAAOkF,CAEX,EAAC,GAGoC,CACnCZ,EACAK,KAEA,GAAI,CAACA,EACH,OAGF,IAAMU,EAAoB7C,OAAOI,OAAO,CAAC+B,GAAsB7B,MAAM,CACnE,CAACC,EAAAA,QAAK,CAACT,EAASD,EAAc,GACtBiD,EAA2BjD,EAAc4B,MAAM,CACnD,QAAkBK,QAAD,UAACA,EAAAA,CAAa,CAAChC,EAAAA,GAAdgC,KAAAA,MAAAA,KAAAA,EAAAA,EAAwBJ,QAAQ,CAACf,EAAAA,IAMrD,OAHImC,EAAyBtF,MAAM,CAAG,GAAG,CACvC+C,CAAG,CAACT,EAAQ,CAAGgD,CAAAA,EAEVvC,CACT,EACA,CAAC,GAKH,GAFyBP,CAErB+C,MAF4B/F,MAAM,CAAC6F,GAAmBP,EAEpC,EAFwC,CAAC,GAAmBzC,EAAcrC,MAAM,CAAG,GAGvG,OAAOqF,CAEX,EAAC,GAGsC,CACrC/C,EACAD,EACAsC,IAEA,EAAKA,EAAD,CAIAtC,EAAcrC,MAAM,GAAK2E,CAAoB,CAACrC,EAAQ,CAACtC,GAJhC,GAIsC,EAAE,EAI9CuE,KAAK,CAAEpB,QACnBwB,EAAP,OAAoC,OAA7BA,GAAAA,CAAoB,CAACrC,EAAAA,GAArBqC,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAA+BT,QAAQ,CAACf,EACjD,GAGWqC,GAA0B,KACrC,IAAMnC,EAASoC,CAAAA,EAAAA,EAAAA,EAAAA,CAASA,GAClBvD,EAAkBwD,CAAAA,EAAAA,EAAAA,EAAAA,CAAcA,CAACC,EAAAA,EAAqBA,EACtD,CAACC,EAAWC,EAAa,CAAGC,CAAAA,EAAAA,EAAAA,QAAAA,CAAQA,EAAC,GACrC,SAAEC,EAAU,EAAE,CAAE,CAAGpF,CAAAA,EAAAA,EAAAA,EAAAA,CAASA,IAAM,CAAC,EACnC,CAAC+C,EAAW,CAAGsC,CAAAA,EAAAA,EAAAA,CAAAA,CAAgBA,CAACD,GAChClD,EAAa6C,CAAAA,EAAAA,EAAAA,EAAAA,CAAcA,CAACO,EAAAA,EAAmBA,EAE/C,mBAAEC,CAAiB,CAAE,CAAGC,CAAAA,EAAAA,EAAAA,EAAAA,CAA0BA,GAClD,+BAAEC,CAA6B,6BAAEC,CAA2B,uBAAEC,CAAqB,CAAE,CACzFC,CAAAA,EAAAA,EAAAA,CAAAA,CAA4BA,GAExB,iBAAEC,CAAe,CAAE,CAAGC,CAAAA,EAAAA,EAAAA,CAAAA,CAAuBA,GAG7C,CAACnC,EAAeoC,EAAiB,CAAGZ,CAAAA,EAAAA,EAAAA,QAAAA,CAAQA,CAAkB,CAAC,GAG/DnB,EAAuBjD,CAAAA,EAAAA,EAAAA,OAAAA,CAAOA,CAAC,IAE5BuB,EADgBiD,KAEtB,CAACA,EAAkB,EAGtBS,CAAAA,EAAAA,EAAAA,SAAAA,CAASA,CAAC,KACR,IAAIC,GAAY,EAMhB,OAJIjC,GAAwBiC,GAC1BF,EAAiB/B,GAGZ,GAJgC,EAKrCiC,GAAY,CACd,CACF,EAAG,CAACjC,EAAqB,EAGzB,IAAMrB,EAAkB5B,CAAAA,EAAAA,EAAAA,OAAAA,CAAOA,CAAC,KAE9B,IAAMmF,EAAgB7E,EADRyB,EAAsBC,EAAYb,EAAY8B,GACRzC,GACpD,OAAO4E,EADsC7E,EACN8E,OAAO,CAAEF,EAClD,EAAG,CAACnD,EAAYb,EAAY8B,EAAsBzC,EAAiBmB,EAAO0D,OAAO,CAAC,EAE5EC,EAAuBtF,CAAAA,EAAAA,EAAAA,OAAAA,CAAOA,CAAC,IAC5BuF,EAAyB3D,GAC/B,CAACA,EAAgB,EAEd4D,EAAgBxF,CAAAA,EAAAA,EAAAA,OAAAA,CAAOA,CAAC,IACrB2C,EAAqBf,EAAiBgB,GAC5C,CAAChB,EAAiBgB,EAAc,EAiB7B6C,EAA0BzF,CAAAA,EAAAA,EAAAA,OAAAA,CAAOA,CAAC,IAC/BgD,EAA4BJ,EAAeK,GACjD,CAACA,EAAsBL,EAAc,EAElC8C,EAAU1F,CAAAA,EAAAA,EAAAA,OAAAA,CAAOA,CAAC,IAEpBqD,EAA6BT,EAAeK,IAC5CK,EAA+BV,EAAeK,GAE/C,CAACL,EAAeK,EAAqB,EAElC0C,EAAS,UACb,GAAI,CAACD,EACH,OADY,GAIdvB,GAAa,GAMT,CAFc,MAAMyB,CAAAA,EAAAA,EAAAA,CAAAA,CAA6BA,GAErC,CACdzB,GAAa,GACb,MACF,CAEA,IAAM0B,EAAgD,EAAE,CAKlDrC,EAAkBzB,EAHGwB,GAAoBX,EAAeK,GAGI,CAAC,EAAG6B,GAElEtB,GACFqC,EAAqBnE,CAHuBoE,GAGnB,CAAClB,EAAsBpB,IAGlD,CAJqB,GAIfG,EAAoBoC,GAAsBnD,EAAeK,GAC/D,GAAIU,EAAmB,CACrB,IAAMqC,EAAyBlF,OAAOI,OAAO,CAACyC,GAAmBsC,OAAO,CAAC,OAAC,CAACrF,EAASD,EAAc,UAChG,GAA4BC,EAASD,EAAesC,GAC3CyB,EAA8B9D,GAEhCD,EAAcuF,GAAG,CAAEzE,GAAgBkD,EAA4B/D,EAASa,EAHJ,CAI7E,GAEAoE,EAAqBnE,IAAI,IAAIsE,EAC/B,CAEA,MAAMG,QAAQC,GAAG,CAACP,GAElBQ,CAAAA,EAAAA,EAAAA,EAAAA,CAAUA,CAACC,EAAAA,CAAwBA,CAACC,aAAa,EAEjDpC,GAAa,EACf,SAEA,GAAgC,CAA5BmB,EAEA,UAACkB,EAAAA,GAAUA,CAAAA,CAACC,GAAI,CAAEC,MAAO,OAAC,SAAEC,CAAO,CAAE,UAAKA,EAAQC,OAAO,CAACC,KAAK,CAAC,WAC7DxC,EAAU,iBAAmB,wBAMlC,WAACyC,EAAAA,GAAIA,CAAAA,CAACC,SAAS,cACb,WAACD,EAAAA,GAAIA,CAAAA,CAACE,IAAI,IAACC,GAAI,GAAIC,QAAQ,OAAOC,WAAW,SAASC,eAAe,gBAAgBC,GAAI,YACvF,WAACb,EAAAA,GAAUA,CAAAA,CAACc,QAAQ,KAAKC,WAAY,IAAKL,QAAQ,mBAAS,sBACrC5B,EAAqB,OAG3C,WAACkC,EAAAA,GAAGA,CAAAA,CAACN,QAAQ,OAAOC,WAAW,mBAC5B1B,EAA0B,GACzB,WAACe,EAAAA,GAAUA,CAAAA,CAACU,QAAQ,SAASO,GAAI,EAAGC,UAAU,kBAAQ,uFACsC,IACzFjC,EAAwB,QAAMkC,CAAAA,EAAAA,EAAAA,EAAAA,CAAWA,CAAClC,MAI/C,UAAC9G,EAAyBA,CAACD,WAAYkJ,EAAAA,EAAUA,CAACC,aAAxBlJ,UAA+C,UACtE,GACC,UAACmJ,EAAAA,GAAMA,CAAAA,CAACR,QAAQ,YAAYS,SAAU,CAACrC,GAAW,CAACsC,GAAQ9D,EAAW9D,QAASuF,WAC5EzB,EAAY,UAAC+D,EAAAA,GAAgBA,CAAAA,CAACC,KAAM,KAAS,iBAOxD,UAACpB,EAAAA,GAAIA,CAAAA,CAACE,IAAI,IAACC,GAAI,YACb,WAACkB,EAAAA,GAAKA,CAAAA,CAAC1B,GAAI,CAAE2B,OAAQ,OAAC,SAAEzB,CAAO,CAAE,SAAK,aAAkC,OAArBA,EAAQyB,MAAM,CAACvB,KAAK,EAAG,YACxE,UAACwB,EAAAA,GAAIA,CAAAA,UACH,UAACC,EAAAA,GAAQA,CAAAA,CAACC,cAAc,IAACC,UAAWC,IAAAA,IAAQ,UAC1C,WAACC,EAAAA,GAAcA,CAAAA,CAACtI,QA7GR,CA6GiBuI,IA5GnC3D,EAAiB,IACf,EACS,EAAE,CAGJlE,OAAOI,GAJK,IAIE,CAACU,GAAiBR,MAAM,CAAC,CAACC,EAAAA,QAAK,CAACT,EAASD,EAAc,GAC1E,MAAO,CACL,GAAGU,CAAG,CACN,CAACT,EAAQ,CAAED,CACb,CACF,EAAG,CAAC,GAER,EAgGkDiI,KAAK,cACzC,UAACC,EAAAA,GAAYA,CAAAA,CAACL,UAAWC,IAAAA,IAAQ,UAC/B,UAACK,EAAAA,GAAQA,CAAAA,CAACC,KAAK,QAAQC,QAASxD,EAAeyD,aAAa,QAE9D,UAACC,EAAAA,GAAYA,CAAAA,CAACtC,QAAQ,aAAauC,uBAAwB,CAAE7B,QAAS,IAAK,WAKjF,UAAC8B,EAAAA,GAAOA,CAAAA,CAAAA,GAEPtI,OAAOI,OAAO,CAACU,GAAiBsE,GAAG,CAAC,GAA2BmD,EAAGC,SAEnD3H,KAFsB,CAACf,EAASD,EAAc,GAC5D,GAA6B,IAAzBA,EAAcrC,MAAM,CAAQ,OAChC,IAAMwD,EAAAA,QAAQH,EAAAA,EAAO0D,OAAAA,GAAP1D,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAgBE,IAAI,CAAC,GAAWC,EAAMlB,OAAO,GAAKA,GAE1D2I,EAAkB5I,EAAckC,KAAK,CAAC,QACnCD,EAAP,eAAOA,EAAAA,CAAa,CAAChC,EAAAA,GAAdgC,KAAAA,MAAAA,KAAAA,EAAAA,EAAwBJ,QAAQ,CAAC6B,EAC1C,GAWA,MACE,WAACmF,EAAAA,QAAQA,CAAAA,WACP,WAACnB,EAAAA,GAAIA,CAAAA,WACH,UAACC,EAAAA,GAAQA,CAAAA,CAACC,cAAc,IAACC,UAAWC,IAAAA,IAAQ,UAC1C,WAACC,EAAAA,GAAcA,CAAAA,CAACtI,QAbF,CAaWqJ,IAZ/BzE,EAAiB,IACR,CACL,GAAG0E,CAAI,CACP,CAAC9I,EAAQ,CAAE2I,EAAkB,EAAE,CAAG5I,EACpC,EAEJ,EAMgDiI,KAAK,cAC3C,UAACC,EAAAA,GAAYA,CAAAA,CAACL,UAAWC,IAAAA,IAAQ,UAC/B,UAACK,EAAAA,GAAQA,CAAAA,CAACC,KAAK,QAAQC,QAASO,EAAiBN,aAAa,QAEhE,UAACC,EAAAA,GAAYA,CAAAA,CACXtC,QAAS,GAAoB,aAAjB9E,EAAAA,KAAAA,EAAAA,EAAO6H,OAAP7H,EAAgB,CAAC,kBAC7BqH,uBAAwB,CAAE7B,QAAS,IAAK,SAK9C,UAACe,EAAAA,GAAIA,CAAAA,CAACE,cAAc,IAACC,UAAWC,IAAAA,IAAQ,UACrC9H,EAAcuF,GAAG,CAAC,QACMtD,EAAAA,EAAvB,IAAMgH,EAAiBhH,QAAAA,EAAAA,QAAAA,EAAAA,CAAa,CAAChC,EAAAA,GAAdgC,KAAAA,MAAAA,KAAAA,EAAAA,EAAwBJ,QAAQ,CAACf,EAAAA,GAAjCmB,KAAAA,IAAAA,GAAAA,EAavB,MACE,UAAC0F,EAAAA,GAAQA,CAAAA,CAACC,SAd4D,KAc9C,aACtB,WAACG,EAAAA,GAAcA,CAAAA,CAACjC,GAAI,CAAEoD,GAAI,EAAGC,GAAI,EAAI,EAAG1J,QAbvB,CAagC2J,IAZnD/E,EAAkB0E,QAIVA,EACKA,EAJX,MAAO,CACL,GAAGA,CAAI,CACP,CAAC9I,EAAQ,CAAEgJ,EACM,QAAbF,EAAAA,CAAI,CAAC9I,EAAQ,GAAb8I,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAenH,MAAM,CAAC,GAAU,CAACyH,CAAAA,EAAAA,EAAAA,EAAAA,CAAWA,CAACC,EAAMxI,IACnD,IAAKiI,QAAAA,EAAAA,CAAI,CAAC9I,EAAAA,GAAL8I,KAAAA,IAAAA,EAAAA,EAAiB,EAAE,CAAGjI,EAAY,CAE/C,EACF,EAImEmH,KAAK,cAClE,UAACC,EAAAA,GAAYA,CAAAA,CAACL,UAAWC,IAAAA,IAAQ,UAC/B,UAACK,EAAAA,GAAQA,CAAAA,CAACC,KAAK,QAAQC,QAASY,EAAgBX,aAAa,QAE/D,UAACiB,EAAAA,CAAWA,CAAAA,CACVC,WAAY,GACZC,MAAM,OAAEtI,EAAAA,KAAAA,EAAAA,EAAOuI,OAAPvI,EAAgB,CAExBuC,QAAS5C,GAAe,GACxB6I,cAAc,EACdC,UAAU,EACV3J,QAASA,GAJJa,OARmBA,EAiBlC,QAIH4H,IAAMC,EAAIhL,MAAM,CAAG,EAAI,UAAC8K,EAAAA,GAAOA,CAAAA,CAAAA,GAAM,OAnDzBxI,EAsDnB,UAKV,EAAC,wCC3fM,IAAM4J,GAAW,KACtB,GAAM,CAACC,EAAOC,EAAS,CAAGtG,CAAAA,EAAAA,EAAAA,QAAAA,CAAQA,EAAC,GAQnC,MANAa,CAAAA,EAAAA,EAAAA,SAAAA,CAASA,CAAC,KACiB,aAArB,OAAO0F,WACTD,EAASC,UAAUC,SAAS,CAACpI,QAAQ,CAAC,OAE1C,EAAG,EAAE,EAEEiI,CACT,EAAC,mDC4CD,OA/C4B,KAC1B,GAAM,CAAE/K,MAAI,CAAE,CAAGE,CAAAA,EAAAA,EAAAA,CAAAA,CAAWA,GACtB,CAACiL,EAAeC,EAAiB,CAAG1G,CAAAA,EAAAA,EAAAA,EA6C7B2G,MA7C6B3G,CAAQA,EAAC,GAC7C,OA4C0B2G,EAAA,WA5CxBC,CAAkB,cAAEC,CAAY,CAAE,CAAGlG,CAAAA,EAAAA,EAAAA,CAAAA,CAAuBA,GAC9DmG,EAAgCC,CAAAA,EAAAA,GAAAA,EAAAA,CAAgCA,GAEtE,GAAI,CAACF,GAAgB,CAACC,EAEpB,MAAO,uBAF4C,EAKrD,IAAME,EAAiB,UACrBN,GAAiB,GACjB,MAAME,IACNF,GAAiB,EACnB,EAEA,MACE,iCACE,WAACO,EAAAA,GAAKA,CAAAA,CAACC,SAAS,oBACd,UAAC9E,EAAAA,GAAUA,CAAAA,CAACc,QAAQ,QAAQC,WAAY,IAAKF,GAAI,WAAG,qBAGpD,UAACb,EAAAA,GAAUA,CAAAA,CAACc,QAAQ,iBAASiE,GAAAA,CAAeA,MAE9C,UAAC/D,EAAAA,GAAGA,CAAAA,UACF,UAAC7I,EAAyBA,CACxBD,WAAYkJ,EAAAA,EAAUA,CAACC,aADClJ,UACsB,CAC9CG,aAAc,CAAC+L,GAAiBnL,EAAKI,QAAQ,UAE5C,GACC,UAACgI,EAAAA,GAAMA,CAAAA,CACLR,QAAQ,YACRY,KAAK,QACLzB,GAAI,CAAE+E,MAAO,OAAQ,EACrBpL,QAASgL,EACTrD,SAAU,CAACC,GAAQ6C,GAAiB,CAACnL,EAAKI,QAAQ,UACnD,mBAQb,kBCfO,IAAM2L,GAAoB,KAC/B,GAAM,MAAE/L,CAAI,YAAEC,CAAU,CAAE,CAAGC,CAAAA,EAAAA,EAAAA,CAAAA,CAAWA,GAClC8L,EAAUC,CAAAA,EAAAA,GAAAA,CAAAA,CAAcA,GACxBlB,EAAQD,KACR,CAACK,EADeL,EACiB,CAAGpG,CAAAA,EAAAA,EAAAA,QAAAA,CAAQA,CAAC,IAC7C,CAACwH,EAAqBC,EAAuB,CAAGzH,CAAAA,EAAAA,EAAAA,QAAAA,CAAQA,EAAC,GACzD0H,EAAQC,CAAAA,EAAAA,EAAAA,GAAAA,CAAQA,GAChBC,EAAgBC,CAAAA,EAAAA,EAAAA,GAAAA,CAAaA,CAACH,EAAMI,WAAW,CAACC,EAAE,CAAC,OAEnD,mBAAEC,CAAiB,gBAAEC,CAAc,mBAAE7H,CAAiB,CAAE,CAAGC,CAAAA,EAAAA,EAAAA,EAAAA,CAA0BA,GACrF,6BAAEE,CAA2B,+BAAED,CAA6B,uBAAEE,CAAqB,CAAE,CACzFC,CAAAA,EAAAA,EAAAA,CAAAA,CAA4BA,GAExByH,EAAcD,EAAe3M,EAAKkB,OAAO,CAAElB,EAAK2E,OAAO,CAAC9F,KAAK,EAE7DgO,EAAiB,IACrBV,GAAuB,GAEvBO,EAAkB1M,EAAKkB,OAAO,CAAElB,EAAK2E,OAAO,CAAC9F,KAAK,CAAEiO,GAEpDX,GAAuB,EACzB,EAEMY,EAAsBhC,GAASiC,GAAAA,EAAMA,CAErCC,EAAiB,UAGrB,GAFA7B,GAAiB,GAEb,CAACwB,EAAa,CAChB,MAAM1H,EAAsB,CAAE,CAAClF,EAAKkB,OAAO,CAAC,CAAE,CAAClB,EAAK2E,OAAO,CAAC9F,KAAK,CAAC,GAClE8H,CAAAA,EAAAA,EAAAA,EAAAA,CAAUA,CAACC,EAAAA,CAAwBA,CAACsG,WAAW,EAC/C9B,GAAiB,GACjB,MACF,CAEA,IAAMtJ,EAAiBgD,GAIQqI,KAHKrL,GAChCV,OAAOhD,MAAM,CAAC0D,GAAgBe,MAAM,CAAC,OAAC,SAAE3B,CAAO,CAAE,UAAKA,IAAYlB,EAAKkB,OAAO,GAAEtC,MAAM,EACtF,EAIF,MAAMoG,EAA8BhF,EAAKkB,OAAO,EAEhD,MAAM+D,EAA4BjF,EAAKkB,OAAO,CAAElB,EAAK2E,OAAO,CAAC9F,KAAK,EAGpE8H,CAAAA,EAAAA,EAAAA,EAAAA,CAAUA,CAACC,EAAAA,CAAwBA,CAACwG,YAAY,EAChDhC,GAAiB,EACnB,EAEA,MACE,iCACE,UAAC3C,EAAAA,GAAKA,CAAAA,CAAC1B,GAAI,CAAEsG,EAAG,EAAG1F,GAAI,CAAE,WACvB,WAACP,EAAAA,GAAIA,CAAAA,CAACC,SAAS,IAACiG,QAAS,YACvB,UAAClG,EAAAA,GAAIA,CAAAA,CAACE,IAAI,IAACiG,GAAI,EAAGhG,GAAI,YACpB,UAACT,EAAAA,GAAUA,CAAAA,CACTc,QAAQ,KACRb,GAAI,CACFc,WAAY,GACd,WACD,yBAKH,UAACT,EAAAA,GAAIA,CAAAA,CAACE,IAAI,IAACC,EAAE,aACX,WAACH,EAAAA,GAAIA,CAAAA,CACHC,SAAS,IACTN,GAAI,CACFyG,IAAK,IACLC,cAAe,QACjB,YAEA,UAACpC,GAAmBA,CAAAA,GAEpB,WAACvE,EAAAA,GAAUA,CAAAA,WAAC,IAFQuE,6BAGapL,EAAa,oBAAsB,qBAAqB,iJAE9D,UAACyN,GAAAA,CAAYA,CAAAA,CAACC,KAAMC,GAAAA,EAAiBA,CAACC,kBAAkB,UAAE,YAGpFd,GACC,WAACpB,EAAAA,GAAKA,CAAAA,CAACC,SAAS,OAAO9C,UAAWC,IAAAA,SAAa,WAC7C,UAACjC,EAAAA,GAAUA,CAAAA,CACTc,QAAQ,QACRb,GAAI,CACFc,WAAY,IACZF,GAAI,CACN,WACD,oBAGD,WAACb,EAAAA,GAAUA,CAAAA,CAACc,QAAQ,kBAAQ,uEAC0C,UAACkG,IAAAA,UAAE,oBAAmB,KAAM,IAChG,UAACA,IAAAA,UAAE,kBAAiB,MAAM,UAACA,IAAAA,UAAE,8BAA6B,kDAK/D7N,EACC,iCACE,UAACyJ,EAAAA,GAAOA,CAAAA,CAAAA,GACR,UAACqE,GAAAA,CAAcA,CAAAA,CAACC,OAAO,sCAEvB,WAACC,MAAAA,CAAIC,MAAO,CAAE1G,QAAS,OAAQE,eAAgB,eAAgB,YAC7D,UAAC8C,EAAAA,CAAWA,CAAAA,CACV7F,QAAS3E,EAAK2E,OAAO,CAAC9F,KAAK,CAC3BsP,cAAc,IACdvD,aAAc,CAAC0B,EACfzB,UAAU,EACVuD,WAAW,MAEb,UAACnP,EAAyBA,CACxBD,WAAYkJ,EAAAA,EAAUA,CAACC,aADClJ,UACsB,CAC9CG,aAAc,CAAC+L,GAAiBnL,EAAKI,QAAQ,UAE5C,GACC,UAACiO,EAAAA,GAAgBA,CAAAA,CACfC,cAAY,uBACZC,QAAS,UAACC,EAAAA,GAAMA,CAAAA,CAAClF,QAAS,CAAC,CAACsD,EAAa6B,SAAUxB,IACnDyB,MAAO9B,EAAc,KAAO,MAC5BvE,SAAU,CAACC,GAAQ6C,GAAiB,CAACnL,EAAKI,QAAQ,QAM1D,UAACqI,EAAAA,GAAKA,CAAAA,CAACK,UAAWC,IAAAA,UAAc,CAAEnB,QAAQ,oBACxC,WAACd,EAAAA,GAAUA,CAAAA,CAACc,QAAQ,kBAAQ,wFAC4D,IACtF,UAAC+G,IAAIA,CAAChB,KAAMiB,GAAAA,CAASA,CAACC,QAAQ,CAACC,aAAa,CAAEC,QAAQ,IAACC,cAAc,aACnE,UAACC,EAAAA,GAAOA,CAAAA,UAAC,yBACJ,YAMb,UAAC7K,GAAuBA,CAAAA,aAMjCwI,GACC,GAPgCxI,EAOhC,KAACqE,EAAAA,GAAKA,CAAAA,CAAC1B,GAAI,CAAEsG,EAAG,CAAE,WAChB,WAACjG,EAAAA,GAAIA,CAAAA,CAACC,SAAS,IAACiG,QAAS,YACvB,UAAClG,EAAAA,GAAIA,CAAAA,CAACE,IAAI,IAACiG,GAAI,EAAGhG,GAAI,YACpB,UAACT,EAAAA,GAAUA,CAAAA,CACTc,QAAQ,KACRb,GAAI,CACFc,WAAY,GACd,WACD,mBAKH,UAACT,EAAAA,GAAIA,CAAAA,CAACE,IAAI,IAACC,EAAE,aACX,WAAC2H,EAAAA,GAASA,CAAAA,WACR,UAACb,EAAAA,GAAgBA,CAAAA,CACfE,QACE,UAACnF,EAAAA,GAAQA,CAAAA,CACPE,QAASsD,CAAW,CAACuC,EAAAA,CAAWA,CAACC,cAAc,CAAC,EAAIxC,CAAW,CAACuC,EAAAA,CAAWA,CAACE,cAAc,CAAC,CAC3FhH,SAAU6D,EACVuC,SAAU,CAACa,EAAGhG,KACZuD,EAAe,CACb,GAAGD,CAAW,CACd,CAACuC,EAAAA,CAAWA,CAACC,cAAc,CAAC,CAAE9F,EAC9B,CAAC6F,EAAAA,CAAWA,CAACE,cAAc,CAAC,CAAE/F,CAChC,GAEA3C,CAAAA,EAAAA,EAAAA,EAAAA,CAAUA,CAAC,CAAE,GAAGC,EAAAA,CAAwBA,CAAC2I,mBAAmB,CAAEb,MAAOpF,CAAQ,EAC/E,IAGJoF,MAAM,0BAGR,UAACL,EAAAA,GAAgBA,CAAAA,CACfE,QACE,UAACnF,EAAAA,GAAQA,CAAAA,CACPE,QACEsD,CAAW,CAACuC,EAAAA,CAAWA,CAACK,kBAAkB,CAAC,EAC3C5C,CAAW,CAACuC,EAAAA,CAAWA,CAACM,6BAA6B,CAAC,CAExDpH,SAAU6D,EACVuC,SAAU,CAACa,EAAGhG,KACZuD,EAAe,CACb,GAAGD,CAAW,CACd,CAACuC,EAAAA,CAAWA,CAACK,kBAAkB,CAAC,CAAElG,EAClC,CAAC6F,EAAAA,CAAWA,CAACM,6BAA6B,CAAC,CAAEnG,CAC/C,GAEA3C,CAAAA,EAAAA,EAAAA,EAAAA,CAAUA,CAAC,CAAE,GAAGC,EAAAA,CAAwBA,CAAC8I,mBAAmB,CAAEhB,MAAOpF,CAAQ,EAC/E,IAGJoF,MAAM,0BAGR,UAACL,EAAAA,GAAgBA,CAAAA,CACfE,QACE,UAACnF,EAAAA,GAAQA,CAAAA,CACPE,QAASsD,CAAW,CAACuC,EAAAA,CAAWA,CAACQ,oBAAoB,CAAC,CACtDtH,SAAU6D,EACVuC,SAAU,CAACa,EAAGhG,KACZ,IAAMsG,EAAuC,KAC3C/C,EAAe,CACb,GAAGD,CAAW,CACd,CAACuC,EAAAA,CAAWA,CAACQ,oBAAoB,CAAC,CAAErG,CACtC,GAEA3C,CAAAA,EAAAA,EAAAA,EAAAA,CAAUA,CAAC,CAAE,GAAGC,EAAAA,CAAwBA,CAACiJ,2BAA2B,CAAEnB,MAAOpF,CAAQ,EACvF,EAEIA,EACFpE,EAAsB,CACpB,CAAClF,EAAKkB,CAFG,MAEI,CAAC,CAAE,CAAClB,EAAK2E,OAAO,CAAC9F,KAAK,CAAC,GAEnCiR,IAAI,CAAC,IACAC,GACFH,GAEJ,GACCI,GAJiB,EAIZ,CAAC,IAAM,MAEfJ,GAEJ,IAGJlB,MACE,iCACE,UAAC5H,EAAAA,GAAUA,CAAAA,UAAC,0BACX,CAAC8F,CAAW,CAACuC,EAAAA,CAAWA,CAACQ,oBAAoB,CAAC,EAC7C,UAAC7I,EAAAA,GAAUA,CAAAA,CACTc,QAAQ,QACRb,GAAI,CACFC,MAAO,gBACT,WAECgF,EAAU,0BAA4B,oBAK/C3D,SAAU,CAAC2D,GAAW,CAACY,gBASzC,EAAC,gBCzQD,OAtBoC,IAGlC,CAFqCqD,EAAAA,CAEjC,CAFiCA,EAAAA,CAAaA,CAACC,CAqBtCC,EArBsCD,EAAQA,CAACrC,YAqB9BsC,EAAA,IArBgD,EAE3C,CAKjC,gCACE,UAACC,IAAIA,UACH,UAAC5P,QAAAA,UAAO,GAAc,OAAX6P,GAAAA,EAAUA,CAAC,mCAGxB,UAACC,EAAAA,CAAcA,CAAAA,CAAAA,GAEf,UAACC,OAAAA,UACC,UAACxE,GAAiBA,CAAAA,QAZf,KAYeA,WCxB1B,WAAkB,uQCoClB,MA9BgB,OAAC,MAAEyE,CAAI,CAAuB,GACtCC,EAASC,CAAAA,EAAAA,EAAAA,SAAAA,CAASA,GAClBC,EAAYC,KAAKC,GAAG,CAAC,EAAGL,EAAKhK,GAAG,CAAC,GAASsK,EAAInD,IAAI,EAAEoD,OAAO,CAACN,EAAOO,QAAQ,GAC3EC,EAAQR,EAAOQ,KAAK,CAACjR,IAAI,CAAG,CAAEA,KAAMyQ,EAAOQ,KAAK,CAACjR,IAAK,OAAIW,EAEhE,MACE,UAACuQ,EAAAA,GAAIA,CAAAA,CAACrS,MAAO8R,EAAW/I,QAAQ,aAAauJ,wBAAwB,IAACrI,UAAWC,IAAAA,IAAQ,UACtFyH,EAAKhK,GAAG,CAAC,CAACsK,EAAKM,IACd,UAACC,EAAAA,GAAGA,CAAAA,CAEF1D,KAAM,CAAEqD,SAAUF,EAAInD,IAAI,OAAEsD,CAAM,EAClCK,UAAWC,CAAAA,GACXC,SAAU,EADSD,UAERxI,IAAAA,GAAO,CAClB2F,MACE,UAAC5H,EAAAA,GAAUA,CAAAA,CACTc,QAAQ,QACRC,WAAY,IACZb,MAAO2J,IAAcS,EAAM,UAAY,gBACvCtI,UAAWC,IAAAA,KAAS,UAEnB+H,EAAIpC,KAAK,IAZToC,EAAInD,IAAI,IAmBvB,aClCA,WAAkB,6GCDlB,IAAI8D,EAAS5T,EAAQ,KAAW,EAC5B6T,EAAc7T,EAAQ,KAAe,CADrBA,CAEhB8T,EAAU9T,EAAQ,KAAW,CADRA,CAIrB+T,EAAmBH,EAASA,EAAOI,IAHlBhU,cAGoC,MAAG8C,EAc5D1C,EAAOC,OAAO,CALd,EAKiBI,OALRA,CAAmB,EAC1B,OAAOqT,EAAQ9S,IAAU6S,EAAY7S,IACnC,CAAC,CAAE+S,CAAAA,GAAoB/S,GAASA,CAAK,CAAC+S,EAAAA,CAC1C,gCCjBA,IAAIE,EAAWjU,EAAQ,KAAa,EAChCkU,EAAgBlU,EAAQ,KAAkB,CADxBA,CAElBmU,EAAoBnU,EAAQ,IAAsB,EAD3BA,EAEZA,EAAQ,KAAa,EADLA,EAEfA,EAAQ,KAAc,CADhBA,CAElBoU,EAAWpU,EAAQ,IAAa,CA6DpCI,CA9DuBJ,EA8DhBK,OAAO,CA7Cd,CAhBsBL,CA6DLD,OA7CRA,CAAoB,CAAEQ,CAAM,CAAE8T,CAAQ,CAAEC,CAAU,EACzD,IAAIxT,EAAQ,CAAC,EACTmE,EAAWiP,EACXK,GAAW,EACXxT,EAAST,EAAMS,MAAM,CACrBF,EAAS,EAAE,CACX2T,EAAejU,EAAOQ,MAAM,CAEhC,GAAI,CAACA,EACH,MADW,CACJF,EAELwT,IACF9T,EAASkU,EAASlU,EADN,EACwB8T,GAAAA,EAElCC,GACFrP,EAAWkP,EACXI,GAAW,EAFG,CAIPhU,EAAOQ,MAAM,EA/BD,EA+BK2T,IACxBzP,EAAWmP,EACXG,GAAW,EACXhU,EAAS,GAHiC,CAG7B0T,EAAS1T,IAExBoU,EACA,KAAO,EAAE7T,EAAQC,GAAQ,CACvB,IAAIC,EAAQV,CAAK,CAACQ,EAAM,CACpB8T,EAAuB,MAAZP,EAAmBrT,EAAQqT,EAASrT,GAGnD,GADAA,EAAQ,GAAyB,IAAVA,EAAeA,EAAQ,EAC1CuT,GAAYK,GAAaA,EAAU,CAErC,IADA,IAAIC,EAAcL,EACXK,KACL,GAAItU,CAAM,CAACsU,EAAY,EADH,CACQD,EAC1B,QADoC,CAC3BD,EAGb9T,EAAOsD,IAAI,CAACnD,EACd,MACUiE,CAAL,CAAc1E,EAAQqU,CAAlB,CAA4BN,IACnCzT,EAAOsD,IAAI,CAACnD,EADoC,CAIpD,OAAOH,CACT,kHCtCA,MAnBmB,OAAC,OAClB8B,CAAK,QACLwN,CAAM,IAiBO2E,MAhBbC,CAAQ,CAKT,EAWwBD,CAVvB,CAUuB,KATrB,WAAC7K,EAAAA,GAAGA,CAAAA,CAACgB,UAAW+J,IAAW9J,IAAAA,SAAAA,CAAa,CAAI,CAACA,IAAAA,MAAAA,CAAU,CAAG,CAAC6J,CAAS,aAClE,EADwBC,CACxB,OAAC/L,EAAAA,GAAUA,CAAAA,CAACc,QAAQ,KAAKkB,UAAWC,CAAAA,GAAAA,KAAAA,CAAS,SAC1CvI,IAEFwN,IAGP,oJCUA,MAAe8E,CAAAA,EAAAA,SAAAA,CAAAA,CAAQA,CAvBO,OAAC,CAC7B/Q,aAAW,OACXK,CAAK,CAIN,GACO2Q,EAAWhR,EACbiR,EAAAA,EAAgBA,CAACnQ,MAAM,CAAC,GAAWoQ,CAAAA,EAAAA,EAAAA,EAAAA,CAAcA,CAACC,EAAMvF,IAAI,CAAEvL,IAC9D+Q,EAAAA,EAAuBA,CAE3B,MACE,UAACR,EAAAA,CAAUA,CAAAA,CACTnS,MAAOuB,EAAc,WAAa,cAClCiM,OACE,UAACC,MAAAA,CAAInF,UAAWC,CAAAA,GAAAA,UAAAA,CAAc,SAC5B,UAACqK,EAAAA,CAAOA,CAAAA,CAAC5C,KAAMuC,OAKzB,EAAC,CAGChR,YAAasR,EAAAA,CAAcA,CAC3BjR,MAAOkR,EAAAA,EAAeA,EACtB,+BCrCF,IAAIC,EAAkB1V,EAAQ,KAAoB,EAC9C2V,EAAa3V,EAAQ,KAAe,CADXA,CAEzB4V,EAAe5V,EAAQ,KAAiB,CADpBA,GAyCjBK,OAAO,CAxCYL,EAwCTmD,OAVRA,CAAgB,CAAEkR,CAAQ,EACjC,IAAIxT,EAAS,CAAC,EAMd,OALAwT,EAAWuB,EAAavB,EAAU,GAElCsB,EAAWE,EAAQ,SAAS7U,CAAK,CAAE8U,CAAG,CAAED,CAAM,EAC5CH,EAAgB7U,EAAQiV,EAAKzB,EAASrT,EAAO8U,EAAKD,GACpD,GACOhV,CACT,aCvCA,WAAkB","sources":["webpack://_N_E/?104f","webpack://_N_E/../../node_modules/lodash/difference.js","webpack://_N_E/../../node_modules/lodash/_baseFlatten.js","webpack://_N_E/./src/components/common/Mui/index.tsx","webpack://_N_E/./src/components/common/CheckWalletWithPermission/index.tsx","webpack://_N_E/./src/components/settings/PushNotifications/GlobalPushNotifications.tsx","webpack://_N_E/./src/hooks/useIsMac.ts","webpack://_N_E/./src/components/notification-center/NotificationRenewal/index.tsx","webpack://_N_E/./src/components/settings/PushNotifications/index.tsx","webpack://_N_E/./src/pages/settings/notifications.tsx","webpack://_N_E/./src/components/settings/PushNotifications/styles.module.css","webpack://_N_E/./src/components/common/NavTabs/index.tsx","webpack://_N_E/./src/components/common/NavTabs/styles.module.css","webpack://_N_E/../../node_modules/lodash/_isFlattenable.js","webpack://_N_E/../../node_modules/lodash/_baseDifference.js","webpack://_N_E/./src/components/common/PageHeader/index.tsx","webpack://_N_E/./src/components/settings/SettingsHeader/index.tsx","webpack://_N_E/../../node_modules/lodash/mapValues.js","webpack://_N_E/./src/components/common/PageHeader/styles.module.css"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/settings/notifications\",\n      function () {\n        return require(\"private-next-pages/settings/notifications.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/settings/notifications\"])\n      });\n    }\n  ","var baseDifference = require('./_baseDifference'),\n    baseFlatten = require('./_baseFlatten'),\n    baseRest = require('./_baseRest'),\n    isArrayLikeObject = require('./isArrayLikeObject');\n\n/**\n * Creates an array of `array` values not included in the other given arrays\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons. The order and references of result values are\n * determined by the first array.\n *\n * **Note:** Unlike `_.pullAll`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {...Array} [values] The values to exclude.\n * @returns {Array} Returns the new array of filtered values.\n * @see _.without, _.xor\n * @example\n *\n * _.difference([2, 1], [2, 3]);\n * // => [1]\n */\nvar difference = baseRest(function(array, values) {\n  return isArrayLikeObject(array)\n    ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n    : [];\n});\n\nmodule.exports = difference;\n","var arrayPush = require('./_arrayPush'),\n    isFlattenable = require('./_isFlattenable');\n\n/**\n * The base implementation of `_.flatten` with support for restricting flattening.\n *\n * @private\n * @param {Array} array The array to flatten.\n * @param {number} depth The maximum recursion depth.\n * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n * @param {Array} [result=[]] The initial result value.\n * @returns {Array} Returns the new flattened array.\n */\nfunction baseFlatten(array, depth, predicate, isStrict, result) {\n  var index = -1,\n      length = array.length;\n\n  predicate || (predicate = isFlattenable);\n  result || (result = []);\n\n  while (++index < length) {\n    var value = array[index];\n    if (depth > 0 && predicate(value)) {\n      if (depth > 1) {\n        // Recursively flatten arrays (susceptible to call stack limits).\n        baseFlatten(value, depth - 1, predicate, isStrict, result);\n      } else {\n        arrayPush(result, value);\n      }\n    } else if (!isStrict) {\n      result[result.length] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseFlatten;\n","export * from \"/app/apps/web/src/components/common/Mui/index.tsx\"","import { useSafeSDK } from '@/hooks/coreSDK/safeCoreSDK'\nimport { useMemo, type ReactElement } from 'react'\nimport useWallet from '@/hooks/wallets/useWallet'\nimport useConnectWallet from '../ConnectWallet/useConnectWallet'\nimport useIsWrongChain from '@/hooks/useIsWrongChain'\nimport { Tooltip } from '@mui/material'\nimport useSafeInfo from '@/hooks/useSafeInfo'\nimport type { Permission, PermissionProps } from '@/permissions/config'\nimport { useHasPermission } from '@/permissions/hooks/useHasPermission'\n\ntype CheckWalletWithPermissionProps<\n  P extends Permission,\n  PProps = PermissionProps<P> extends undefined ? { permissionProps?: never } : { permissionProps: PermissionProps<P> },\n> = {\n  children: (ok: boolean) => ReactElement\n  permission: P\n  noTooltip?: boolean\n  checkNetwork?: boolean\n  allowUndeployedSafe?: boolean\n} & PProps\n\nenum Message {\n  WalletNotConnected = 'Please connect your wallet',\n  SDKNotInitialized = 'SDK is not initialized yet',\n  NotSafeOwner = 'Your connected wallet is not a signer of this Safe Account',\n  SafeNotActivated = 'You need to activate the Safe before transacting',\n}\n\nconst CheckWalletWithPermission = <P extends Permission>({\n  children,\n  permission,\n  permissionProps,\n  noTooltip,\n  checkNetwork = false,\n  allowUndeployedSafe = false,\n}: CheckWalletWithPermissionProps<P>): ReactElement => {\n  const wallet = useWallet()\n  const connectWallet = useConnectWallet()\n  const isWrongChain = useIsWrongChain()\n  const sdk = useSafeSDK()\n  const hasPermission = useHasPermission(\n    permission,\n    ...((permissionProps ? [permissionProps] : []) as PermissionProps<P> extends undefined\n      ? []\n      : [props: PermissionProps<P>]),\n  )\n\n  const { safe, safeLoaded } = useSafeInfo()\n\n  const isUndeployedSafe = !safe.deployed\n\n  const message = useMemo(() => {\n    if (!wallet) {\n      return Message.WalletNotConnected\n    }\n\n    if (!sdk && safeLoaded) {\n      return Message.SDKNotInitialized\n    }\n\n    if (isUndeployedSafe && !allowUndeployedSafe) {\n      return Message.SafeNotActivated\n    }\n\n    if (!hasPermission) {\n      return Message.NotSafeOwner\n    }\n  }, [allowUndeployedSafe, hasPermission, isUndeployedSafe, sdk, wallet, safeLoaded])\n\n  if (checkNetwork && isWrongChain) return children(false)\n  if (!message) return children(true)\n  if (noTooltip) return children(false)\n\n  return (\n    <Tooltip title={message}>\n      <span onClick={wallet ? undefined : connectWallet}>{children(false)}</span>\n    </Tooltip>\n  )\n}\n\nexport default CheckWalletWithPermission\n","import { selectUndeployedSafes } from '@/features/counterfactual/store/undeployedSafesSlice'\nimport {\n  Box,\n  Grid,\n  Paper,\n  Typography,\n  Checkbox,\n  Button,\n  Divider,\n  List,\n  ListItem,\n  ListItemButton,\n  ListItemIcon,\n  ListItemText,\n  CircularProgress,\n} from '@mui/material'\nimport mapValues from 'lodash/mapValues'\nimport difference from 'lodash/difference'\nimport pickBy from 'lodash/pickBy'\nimport { Fragment, useEffect, useMemo, useState } from 'react'\nimport type { ReactElement } from 'react'\nimport type { AllOwnedSafes } from '@safe-global/safe-gateway-typescript-sdk'\nimport { type ChainInfo } from '@safe-global/safe-gateway-typescript-sdk'\n\nimport EthHashInfo from '@/components/common/EthHashInfo'\nimport { sameAddress } from '@safe-global/utils/utils/addresses'\nimport useChains from '@/hooks/useChains'\nimport { useAppSelector } from '@/store'\nimport { useNotificationPreferences } from './hooks/useNotificationPreferences'\nimport { useNotificationRegistrations } from './hooks/useNotificationRegistrations'\nimport { trackEvent } from '@/services/analytics'\nimport { PUSH_NOTIFICATION_EVENTS } from '@/services/analytics/events/push-notifications'\nimport { requestNotificationPermission } from './logic'\nimport type { NotifiableSafes } from './logic'\nimport type { PushNotificationPreferences } from '@/services/push-notifications/preferences'\nimport CheckWalletWithPermission from '@/components/common/CheckWalletWithPermission'\nimport { Permission } from '@/permissions/config'\n\nimport css from './styles.module.css'\nimport useAllOwnedSafes from '@/features/myAccounts/hooks/useAllOwnedSafes'\nimport useWallet from '@/hooks/wallets/useWallet'\nimport { selectAllAddedSafes, type AddedSafesState } from '@/store/addedSafesSlice'\nimport { maybePlural } from '@safe-global/utils/utils/formatters'\nimport { useNotificationsRenewal } from './hooks/useNotificationsRenewal'\nimport type { UndeployedSafesState } from '@safe-global/utils/features/counterfactual/store/types'\n\n// UI logic\n\nexport const _filterUndeployedSafes = (safes: NotifiableSafes | undefined, undeployedSafes: UndeployedSafesState) => {\n  return pickBy(\n    mapValues(safes, (safeAddresses, chainId) => {\n      const undeployedAddresses = undeployedSafes[chainId] ? Object.keys(undeployedSafes[chainId]) : []\n      return difference(safeAddresses, undeployedAddresses)\n    }),\n    (safeAddresses) => safeAddresses.length > 0,\n  )\n}\n\nexport const _transformAddedSafes = (addedSafes: AddedSafesState): NotifiableSafes => {\n  return Object.entries(addedSafes).reduce<NotifiableSafes>((acc, [chainId, addedSafesOnChain]) => {\n    acc[chainId] = Object.keys(addedSafesOnChain)\n    return acc\n  }, {})\n}\n\n// Convert data structure of currently notified Safes\nexport const _transformCurrentSubscribedSafes = (\n  allPreferences?: PushNotificationPreferences,\n): NotifiableSafes | undefined => {\n  if (!allPreferences) {\n    return\n  }\n\n  return Object.values(allPreferences).reduce<NotifiableSafes>((acc, { chainId, safeAddress }) => {\n    if (!acc[chainId]) {\n      acc[chainId] = []\n    }\n\n    acc[chainId].push(safeAddress)\n    return acc\n  }, {})\n}\n\n// Remove Safes that are not on a supported chain\nexport const _sanitizeNotifiableSafes = (\n  chains: Array<ChainInfo>,\n  notifiableSafes: NotifiableSafes,\n): NotifiableSafes => {\n  return Object.entries(notifiableSafes).reduce<NotifiableSafes>((acc, [chainId, safeAddresses]) => {\n    const chain = chains.find((chain) => chain.chainId === chainId)\n\n    if (chain) {\n      acc[chainId] = safeAddresses\n    }\n\n    return acc\n  }, {})\n}\n\n// Merges added Safes, currently notified Safes, and owned safes into a single data structure without duplicates\nexport const _mergeNotifiableSafes = (\n  ownedSafes: AllOwnedSafes | undefined,\n  addedSafes: AddedSafesState,\n  currentSubscriptions?: NotifiableSafes,\n): NotifiableSafes | undefined => {\n  const added = _transformAddedSafes(addedSafes)\n\n  const chains = Array.from(\n    new Set([\n      ...Object.keys(addedSafes || {}),\n      ...Object.keys(currentSubscriptions || {}),\n      ...Object.keys(ownedSafes || {}),\n    ]),\n  )\n\n  let notifiableSafes: NotifiableSafes = {}\n  for (const chainId of chains) {\n    const ownedSafesOnChain = ownedSafes?.[chainId] ?? []\n    const addedSafesOnChain = added[chainId]?.filter((addedAddress) => ownedSafesOnChain.includes(addedAddress)) || []\n    const currentSubscriptionsOnChain = currentSubscriptions?.[chainId] || []\n    // The display order of safes will be subscribed, added & owned, owned\n    const uniqueSafeAddresses = Array.from(\n      new Set([...currentSubscriptionsOnChain, ...addedSafesOnChain, ...ownedSafesOnChain]),\n    )\n    notifiableSafes[chainId] = uniqueSafeAddresses\n  }\n\n  return notifiableSafes\n}\n\nexport const _getTotalNotifiableSafes = (notifiableSafes: NotifiableSafes): number => {\n  return Object.values(notifiableSafes).reduce((acc, safeAddresses) => {\n    return (acc += safeAddresses.length)\n  }, 0)\n}\n\nexport const _areAllSafesSelected = (notifiableSafes: NotifiableSafes, selectedSafes: NotifiableSafes): boolean => {\n  const entries = Object.entries(notifiableSafes)\n\n  if (entries.length === 0) {\n    return false\n  }\n\n  return Object.entries(notifiableSafes).every(([chainId, safeAddresses]) => {\n    const hasChain = Object.keys(selectedSafes).includes(chainId)\n    const hasEverySafe = safeAddresses?.every((safeAddress) => selectedSafes[chainId]?.includes(safeAddress))\n    return hasChain && hasEverySafe\n  })\n}\n\n// Total number of signatures required to register selected Safes\nexport const _getTotalSignaturesRequired = (\n  selectedSafes: NotifiableSafes,\n  currentNotifiedSafes?: NotifiableSafes,\n): number => {\n  return Object.entries(selectedSafes)\n    .filter(([, safeAddresses]) => safeAddresses.length > 0)\n    .reduce((acc, [chainId, safeAddresses]) => {\n      const isNewChain = !currentNotifiedSafes?.[chainId]\n      const isNewSafe = safeAddresses.some((safeAddress) => !currentNotifiedSafes?.[chainId]?.includes(safeAddress))\n\n      if (isNewChain || isNewSafe) {\n        acc += 1\n      }\n      return acc\n    }, 0)\n}\n\nexport const _shouldRegisterSelectedSafes = (\n  selectedSafes: NotifiableSafes,\n  currentNotifiedSafes?: NotifiableSafes,\n): boolean => {\n  return Object.entries(selectedSafes).some(([chainId, safeAddresses]) => {\n    return safeAddresses.some((safeAddress) => !currentNotifiedSafes?.[chainId]?.includes(safeAddress))\n  })\n}\n\nexport const _shouldUnregsiterSelectedSafes = (\n  selectedSafes: NotifiableSafes,\n  currentNotifiedSafes?: NotifiableSafes,\n) => {\n  return Object.entries(currentNotifiedSafes || {}).some(([chainId, safeAddresses]) => {\n    return safeAddresses.some((safeAddress) => !selectedSafes[chainId]?.includes(safeAddress))\n  })\n}\n\n// onSave logic\n\n// Safes that need to be registered with the service\nexport const _getSafesToRegister = (\n  selectedSafes: NotifiableSafes,\n  currentNotifiedSafes?: NotifiableSafes,\n): NotifiableSafes | undefined => {\n  const safesToRegister = Object.entries(selectedSafes).reduce<NotifiableSafes>((acc, [chainId, safeAddresses]) => {\n    const safesToRegisterOnChain = safeAddresses.filter(\n      (safeAddress) => !currentNotifiedSafes?.[chainId]?.includes(safeAddress),\n    )\n\n    if (safesToRegisterOnChain.length > 0) {\n      acc[chainId] = safesToRegisterOnChain\n    }\n\n    return acc\n  }, {})\n\n  const shouldRegister = Object.values(safesToRegister).some((safeAddresses) => safeAddresses.length > 0)\n\n  if (shouldRegister) {\n    return safesToRegister\n  }\n}\n\n// Safes that need to be unregistered with the service\nexport const _getSafesToUnregister = (\n  selectedSafes: NotifiableSafes,\n  currentNotifiedSafes?: NotifiableSafes,\n): NotifiableSafes | undefined => {\n  if (!currentNotifiedSafes) {\n    return\n  }\n\n  const safesToUnregister = Object.entries(currentNotifiedSafes).reduce<NotifiableSafes>(\n    (acc, [chainId, safeAddresses]) => {\n      const safesToUnregisterOnChain = safeAddresses.filter(\n        (safeAddress) => !selectedSafes[chainId]?.includes(safeAddress),\n      )\n\n      if (safesToUnregisterOnChain.length > 0) {\n        acc[chainId] = safesToUnregisterOnChain\n      }\n      return acc\n    },\n    {},\n  )\n\n  const shouldUnregister = Object.values(safesToUnregister).some((safeAddresses) => safeAddresses.length > 0)\n\n  if (shouldUnregister) {\n    return safesToUnregister\n  }\n}\n\n// Whether the device needs to be unregistered from the service\nexport const _shouldUnregisterDevice = (\n  chainId: string,\n  safeAddresses: Array<string>,\n  currentNotifiedSafes?: NotifiableSafes,\n): boolean => {\n  if (!currentNotifiedSafes) {\n    return false\n  }\n\n  if (safeAddresses.length !== currentNotifiedSafes[chainId].length) {\n    return false\n  }\n\n  return safeAddresses.every((safeAddress) => {\n    return currentNotifiedSafes[chainId]?.includes(safeAddress)\n  })\n}\n\nexport const GlobalPushNotifications = (): ReactElement | null => {\n  const chains = useChains()\n  const undeployedSafes = useAppSelector(selectUndeployedSafes)\n  const [isLoading, setIsLoading] = useState(false)\n  const { address = '' } = useWallet() || {}\n  const [ownedSafes] = useAllOwnedSafes(address)\n  const addedSafes = useAppSelector(selectAllAddedSafes)\n\n  const { getAllPreferences } = useNotificationPreferences()\n  const { unregisterDeviceNotifications, unregisterSafeNotifications, registerNotifications } =\n    useNotificationRegistrations()\n\n  const { safesForRenewal } = useNotificationsRenewal()\n\n  // Safes selected in the UI\n  const [selectedSafes, setSelectedSafes] = useState<NotifiableSafes>({})\n\n  // Current Safes registered for notifications in indexedDB\n  const currentNotifiedSafes = useMemo(() => {\n    const allPreferences = getAllPreferences()\n    return _transformCurrentSubscribedSafes(allPreferences)\n  }, [getAllPreferences])\n\n  // `currentNotifiedSafes` is initially undefined until indexedDB resolves\n  useEffect(() => {\n    let isMounted = true\n\n    if (currentNotifiedSafes && isMounted) {\n      setSelectedSafes(currentNotifiedSafes)\n    }\n\n    return () => {\n      isMounted = false\n    }\n  }, [currentNotifiedSafes])\n\n  // Merged added Safes and `currentNotifiedSafes` (in case subscriptions aren't added)\n  const notifiableSafes = useMemo(() => {\n    const safes = _mergeNotifiableSafes(ownedSafes, addedSafes, currentNotifiedSafes)\n    const deployedSafes = _filterUndeployedSafes(safes, undeployedSafes)\n    return _sanitizeNotifiableSafes(chains.configs, deployedSafes)\n  }, [ownedSafes, addedSafes, currentNotifiedSafes, undeployedSafes, chains.configs])\n\n  const totalNotifiableSafes = useMemo(() => {\n    return _getTotalNotifiableSafes(notifiableSafes)\n  }, [notifiableSafes])\n\n  const isAllSelected = useMemo(() => {\n    return _areAllSafesSelected(notifiableSafes, selectedSafes)\n  }, [notifiableSafes, selectedSafes])\n\n  const onSelectAll = () => {\n    setSelectedSafes(() => {\n      if (isAllSelected) {\n        return []\n      }\n\n      return Object.entries(notifiableSafes).reduce((acc, [chainId, safeAddresses]) => {\n        return {\n          ...acc,\n          [chainId]: safeAddresses,\n        }\n      }, {})\n    })\n  }\n\n  const totalSignaturesRequired = useMemo(() => {\n    return _getTotalSignaturesRequired(selectedSafes, currentNotifiedSafes)\n  }, [currentNotifiedSafes, selectedSafes])\n\n  const canSave = useMemo(() => {\n    return (\n      _shouldRegisterSelectedSafes(selectedSafes, currentNotifiedSafes) ||\n      _shouldUnregsiterSelectedSafes(selectedSafes, currentNotifiedSafes)\n    )\n  }, [selectedSafes, currentNotifiedSafes])\n\n  const onSave = async () => {\n    if (!canSave) {\n      return\n    }\n\n    setIsLoading(true)\n\n    // Although the (un-)registration functions will request permission in getToken we manually\n    // check beforehand to prevent multiple promises in registrationPromises from throwing\n    const isGranted = await requestNotificationPermission()\n\n    if (!isGranted) {\n      setIsLoading(false)\n      return\n    }\n\n    const registrationPromises: Array<Promise<unknown>> = []\n\n    const newlySelectedSafes = _getSafesToRegister(selectedSafes, currentNotifiedSafes)\n\n    // Merge Safes that need to be registered with the ones for which notifications need to be renewed\n    const safesToRegister = _mergeNotifiableSafes(newlySelectedSafes, {}, safesForRenewal)\n\n    if (safesToRegister) {\n      registrationPromises.push(registerNotifications(safesToRegister))\n    }\n\n    const safesToUnregister = _getSafesToUnregister(selectedSafes, currentNotifiedSafes)\n    if (safesToUnregister) {\n      const unregistrationPromises = Object.entries(safesToUnregister).flatMap(([chainId, safeAddresses]) => {\n        if (_shouldUnregisterDevice(chainId, safeAddresses, currentNotifiedSafes)) {\n          return unregisterDeviceNotifications(chainId)\n        }\n        return safeAddresses.map((safeAddress) => unregisterSafeNotifications(chainId, safeAddress))\n      })\n\n      registrationPromises.push(...unregistrationPromises)\n    }\n\n    await Promise.all(registrationPromises)\n\n    trackEvent(PUSH_NOTIFICATION_EVENTS.SAVE_SETTINGS)\n\n    setIsLoading(false)\n  }\n\n  if (totalNotifiableSafes === 0) {\n    return (\n      <Typography sx={{ color: ({ palette }) => palette.primary.light }}>\n        {address ? 'No owned Safes' : 'No wallet connected'}\n      </Typography>\n    )\n  }\n\n  return (\n    <Grid container>\n      <Grid item xs={12} display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\" mb={1}>\n        <Typography variant=\"h4\" fontWeight={700} display=\"inline\">\n          My Safes Accounts ({totalNotifiableSafes})\n        </Typography>\n\n        <Box display=\"flex\" alignItems=\"center\">\n          {totalSignaturesRequired > 0 && (\n            <Typography display=\"inline\" mr={2} textAlign=\"right\">\n              We&apos;ll ask you to verify ownership of each Safe Account with your signature per chain{' '}\n              {totalSignaturesRequired} time{maybePlural(totalSignaturesRequired)}\n            </Typography>\n          )}\n\n          <CheckWalletWithPermission permission={Permission.EnablePushNotifications}>\n            {(isOk) => (\n              <Button variant=\"contained\" disabled={!canSave || !isOk || isLoading} onClick={onSave}>\n                {isLoading ? <CircularProgress size={20} /> : 'Save'}\n              </Button>\n            )}\n          </CheckWalletWithPermission>\n        </Box>\n      </Grid>\n\n      <Grid item xs={12}>\n        <Paper sx={{ border: ({ palette }) => `1px solid ${palette.border.light}` }}>\n          <List>\n            <ListItem disablePadding className={css.item}>\n              <ListItemButton onClick={onSelectAll} dense>\n                <ListItemIcon className={css.icon}>\n                  <Checkbox edge=\"start\" checked={isAllSelected} disableRipple />\n                </ListItemIcon>\n                <ListItemText primary=\"Select all\" primaryTypographyProps={{ variant: 'h5' }} />\n              </ListItemButton>\n            </ListItem>\n          </List>\n\n          <Divider />\n\n          {Object.entries(notifiableSafes).map(([chainId, safeAddresses], i, arr) => {\n            if (safeAddresses.length === 0) return\n            const chain = chains.configs?.find((chain) => chain.chainId === chainId)\n\n            const isChainSelected = safeAddresses.every((address) => {\n              return selectedSafes[chainId]?.includes(address)\n            })\n\n            const onSelectChain = () => {\n              setSelectedSafes((prev) => {\n                return {\n                  ...prev,\n                  [chainId]: isChainSelected ? [] : safeAddresses,\n                }\n              })\n            }\n\n            return (\n              <Fragment key={chainId}>\n                <List>\n                  <ListItem disablePadding className={css.item}>\n                    <ListItemButton onClick={onSelectChain} dense>\n                      <ListItemIcon className={css.icon}>\n                        <Checkbox edge=\"start\" checked={isChainSelected} disableRipple />\n                      </ListItemIcon>\n                      <ListItemText\n                        primary={`${chain?.chainName} Safe Accounts`}\n                        primaryTypographyProps={{ variant: 'h5' }}\n                      />\n                    </ListItemButton>\n                  </ListItem>\n\n                  <List disablePadding className={css.item}>\n                    {safeAddresses.map((safeAddress) => {\n                      const isSafeSelected = selectedSafes[chainId]?.includes(safeAddress) ?? false\n\n                      const onSelectSafe = () => {\n                        setSelectedSafes((prev) => {\n                          return {\n                            ...prev,\n                            [chainId]: isSafeSelected\n                              ? prev[chainId]?.filter((addr) => !sameAddress(addr, safeAddress))\n                              : [...(prev[chainId] ?? []), safeAddress],\n                          }\n                        })\n                      }\n\n                      return (\n                        <ListItem disablePadding key={safeAddress}>\n                          <ListItemButton sx={{ pl: 7, py: 0.5 }} onClick={onSelectSafe} dense>\n                            <ListItemIcon className={css.icon}>\n                              <Checkbox edge=\"start\" checked={isSafeSelected} disableRipple />\n                            </ListItemIcon>\n                            <EthHashInfo\n                              avatarSize={36}\n                              prefix={chain?.shortName}\n                              key={safeAddress}\n                              address={safeAddress || ''}\n                              shortAddress={false}\n                              showName={true}\n                              chainId={chainId}\n                            />\n                          </ListItemButton>\n                        </ListItem>\n                      )\n                    })}\n                  </List>\n                </List>\n\n                {i !== arr.length - 1 ? <Divider /> : null}\n              </Fragment>\n            )\n          })}\n        </Paper>\n      </Grid>\n    </Grid>\n  )\n}\n","import { useState, useEffect } from 'react'\n\nexport const useIsMac = (): boolean => {\n  const [isMac, setIsMac] = useState(false)\n\n  useEffect(() => {\n    if (typeof navigator !== 'undefined') {\n      setIsMac(navigator.userAgent.includes('Mac'))\n    }\n  }, [])\n\n  return isMac\n}\n","import { useState, type ReactElement } from 'react'\nimport { Alert, Box, Button, Typography } from '@mui/material'\nimport useSafeInfo from '@/hooks/useSafeInfo'\nimport CheckWalletWithPermission from '@/components/common/CheckWalletWithPermission'\nimport { useNotificationsRenewal } from '@/components/settings/PushNotifications/hooks/useNotificationsRenewal'\nimport { useIsNotificationsRenewalEnabled } from '@/components/settings/PushNotifications/hooks/useNotificationsTokenVersion'\nimport { RENEWAL_MESSAGE } from '@/components/settings/PushNotifications/constants'\nimport { Permission } from '@/permissions/config'\n\nconst NotificationRenewal = (): ReactElement => {\n  const { safe } = useSafeInfo()\n  const [isRegistering, setIsRegistering] = useState(false)\n  const { renewNotifications, needsRenewal } = useNotificationsRenewal()\n  const isNotificationsRenewalEnabled = useIsNotificationsRenewalEnabled()\n\n  if (!needsRenewal || !isNotificationsRenewalEnabled) {\n    // No need to renew any Safe's notifications\n    return <></>\n  }\n\n  const handeSignClick = async () => {\n    setIsRegistering(true)\n    await renewNotifications()\n    setIsRegistering(false)\n  }\n\n  return (\n    <>\n      <Alert severity=\"warning\">\n        <Typography variant=\"body2\" fontWeight={700} mb={1}>\n          Signature needed\n        </Typography>\n        <Typography variant=\"body2\">{RENEWAL_MESSAGE}</Typography>\n      </Alert>\n      <Box>\n        <CheckWalletWithPermission\n          permission={Permission.EnablePushNotifications}\n          checkNetwork={!isRegistering && safe.deployed}\n        >\n          {(isOk) => (\n            <Button\n              variant=\"contained\"\n              size=\"small\"\n              sx={{ width: '200px' }}\n              onClick={handeSignClick}\n              disabled={!isOk || isRegistering || !safe.deployed}\n            >\n              Sign now\n            </Button>\n          )}\n        </CheckWalletWithPermission>\n      </Box>\n    </>\n  )\n}\n\nexport default NotificationRenewal\n","import {\n  Grid,\n  Paper,\n  Typography,\n  Checkbox,\n  FormControlLabel,\n  FormGroup,\n  Alert,\n  Switch,\n  Divider,\n  Link as MuiLink,\n  useMediaQuery,\n  useTheme,\n} from '@mui/material'\nimport Link from 'next/link'\nimport { useState } from 'react'\nimport type { ReactElement } from 'react'\n\nimport useSafeInfo from '@/hooks/useSafeInfo'\nimport EthHashInfo from '@/components/common/EthHashInfo'\nimport { WebhookType } from '@/service-workers/firebase-messaging/webhook-types'\nimport { useNotificationRegistrations } from './hooks/useNotificationRegistrations'\nimport { useNotificationPreferences } from './hooks/useNotificationPreferences'\nimport { GlobalPushNotifications } from './GlobalPushNotifications'\nimport useIsSafeOwner from '@/hooks/useIsSafeOwner'\nimport { IS_DEV } from '@/config/constants'\nimport { trackEvent } from '@/services/analytics'\nimport { PUSH_NOTIFICATION_EVENTS } from '@/services/analytics/events/push-notifications'\nimport { AppRoutes } from '@/config/routes'\nimport CheckWalletWithPermission from '@/components/common/CheckWalletWithPermission'\nimport { useIsMac } from '@/hooks/useIsMac'\nimport ExternalLink from '@/components/common/ExternalLink'\nimport { Permission } from '@/permissions/config'\n\nimport css from './styles.module.css'\nimport NetworkWarning from '@/components/new-safe/create/NetworkWarning'\nimport NotificationRenewal from '@/components/notification-center/NotificationRenewal'\nimport { HelpCenterArticle } from '@safe-global/utils/config/constants'\n\nexport const PushNotifications = (): ReactElement => {\n  const { safe, safeLoaded } = useSafeInfo()\n  const isOwner = useIsSafeOwner()\n  const isMac = useIsMac()\n  const [isRegistering, setIsRegistering] = useState(false)\n  const [isUpdatingIndexedDb, setIsUpdatingIndexedDb] = useState(false)\n  const theme = useTheme()\n  const isLargeScreen = useMediaQuery(theme.breakpoints.up('lg'))\n\n  const { updatePreferences, getPreferences, getAllPreferences } = useNotificationPreferences()\n  const { unregisterSafeNotifications, unregisterDeviceNotifications, registerNotifications } =\n    useNotificationRegistrations()\n\n  const preferences = getPreferences(safe.chainId, safe.address.value)\n\n  const setPreferences = (newPreferences: NonNullable<ReturnType<typeof getPreferences>>) => {\n    setIsUpdatingIndexedDb(true)\n\n    updatePreferences(safe.chainId, safe.address.value, newPreferences)\n\n    setIsUpdatingIndexedDb(false)\n  }\n\n  const shouldShowMacHelper = isMac || IS_DEV\n\n  const handleOnChange = async () => {\n    setIsRegistering(true)\n\n    if (!preferences) {\n      await registerNotifications({ [safe.chainId]: [safe.address.value] })\n      trackEvent(PUSH_NOTIFICATION_EVENTS.ENABLE_SAFE)\n      setIsRegistering(false)\n      return\n    }\n\n    const allPreferences = getAllPreferences()\n    const totalRegisteredSafesOnChain = allPreferences\n      ? Object.values(allPreferences).filter(({ chainId }) => chainId === safe.chainId).length\n      : 0\n    const shouldUnregisterDevice = totalRegisteredSafesOnChain === 1\n\n    if (shouldUnregisterDevice) {\n      await unregisterDeviceNotifications(safe.chainId)\n    } else {\n      await unregisterSafeNotifications(safe.chainId, safe.address.value)\n    }\n\n    trackEvent(PUSH_NOTIFICATION_EVENTS.DISABLE_SAFE)\n    setIsRegistering(false)\n  }\n\n  return (\n    <>\n      <Paper sx={{ p: 4, mb: 2 }}>\n        <Grid container spacing={3}>\n          <Grid item sm={4} xs={12}>\n            <Typography\n              variant=\"h4\"\n              sx={{\n                fontWeight: 700,\n              }}\n            >\n              Push notifications\n            </Typography>\n          </Grid>\n\n          <Grid item xs>\n            <Grid\n              container\n              sx={{\n                gap: 2.5,\n                flexDirection: 'column',\n              }}\n            >\n              <NotificationRenewal />\n\n              <Typography>\n                Enable push notifications for {safeLoaded ? 'this Safe Account' : 'your Safe Accounts'} in your browser\n                with your signature. You will need to enable them again if you clear your browser cache. Learn more\n                about push notifications <ExternalLink href={HelpCenterArticle.PUSH_NOTIFICATIONS}>here</ExternalLink>\n              </Typography>\n\n              {shouldShowMacHelper && (\n                <Alert severity=\"info\" className={css.macOsInfo}>\n                  <Typography\n                    variant=\"body2\"\n                    sx={{\n                      fontWeight: 700,\n                      mb: 1,\n                    }}\n                  >\n                    For macOS users\n                  </Typography>\n                  <Typography variant=\"body2\">\n                    Double-check that you have enabled your browser notifications under <b>System Settings</b> &gt;{' '}\n                    <b>Notifications</b> &gt; <b>Application Notifications</b> (path may vary depending on OS version).\n                  </Typography>\n                </Alert>\n              )}\n\n              {safeLoaded ? (\n                <>\n                  <Divider />\n                  <NetworkWarning action=\"change your notification settings\" />\n\n                  <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                    <EthHashInfo\n                      address={safe.address.value}\n                      showCopyButton\n                      shortAddress={!isLargeScreen}\n                      showName={true}\n                      hasExplorer\n                    />\n                    <CheckWalletWithPermission\n                      permission={Permission.EnablePushNotifications}\n                      checkNetwork={!isRegistering && safe.deployed}\n                    >\n                      {(isOk) => (\n                        <FormControlLabel\n                          data-testid=\"notifications-switch\"\n                          control={<Switch checked={!!preferences} onChange={handleOnChange} />}\n                          label={preferences ? 'On' : 'Off'}\n                          disabled={!isOk || isRegistering || !safe.deployed}\n                        />\n                      )}\n                    </CheckWalletWithPermission>\n                  </div>\n\n                  <Paper className={css.globalInfo} variant=\"outlined\">\n                    <Typography variant=\"body2\">\n                      Want to setup notifications for different or all Safe Accounts? You can do so in your{' '}\n                      <Link href={AppRoutes.settings.notifications} passHref legacyBehavior>\n                        <MuiLink>global preferences</MuiLink>\n                      </Link>\n                      .\n                    </Typography>\n                  </Paper>\n                </>\n              ) : (\n                <GlobalPushNotifications />\n              )}\n            </Grid>\n          </Grid>\n        </Grid>\n      </Paper>\n      {preferences && (\n        <Paper sx={{ p: 4 }}>\n          <Grid container spacing={3}>\n            <Grid item sm={4} xs={12}>\n              <Typography\n                variant=\"h4\"\n                sx={{\n                  fontWeight: 700,\n                }}\n              >\n                Notification\n              </Typography>\n            </Grid>\n\n            <Grid item xs>\n              <FormGroup>\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={preferences[WebhookType.INCOMING_ETHER] && preferences[WebhookType.INCOMING_TOKEN]}\n                      disabled={isUpdatingIndexedDb}\n                      onChange={(_, checked) => {\n                        setPreferences({\n                          ...preferences,\n                          [WebhookType.INCOMING_ETHER]: checked,\n                          [WebhookType.INCOMING_TOKEN]: checked,\n                        })\n\n                        trackEvent({ ...PUSH_NOTIFICATION_EVENTS.TOGGLE_INCOMING_TXS, label: checked })\n                      }}\n                    />\n                  }\n                  label=\"Incoming transactions\"\n                />\n\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={\n                        preferences[WebhookType.MODULE_TRANSACTION] &&\n                        preferences[WebhookType.EXECUTED_MULTISIG_TRANSACTION]\n                      }\n                      disabled={isUpdatingIndexedDb}\n                      onChange={(_, checked) => {\n                        setPreferences({\n                          ...preferences,\n                          [WebhookType.MODULE_TRANSACTION]: checked,\n                          [WebhookType.EXECUTED_MULTISIG_TRANSACTION]: checked,\n                        })\n\n                        trackEvent({ ...PUSH_NOTIFICATION_EVENTS.TOGGLE_OUTGOING_TXS, label: checked })\n                      }}\n                    />\n                  }\n                  label=\"Outgoing transactions\"\n                />\n\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={preferences[WebhookType.CONFIRMATION_REQUEST]}\n                      disabled={isUpdatingIndexedDb}\n                      onChange={(_, checked) => {\n                        const updateConfirmationRequestPreferences = () => {\n                          setPreferences({\n                            ...preferences,\n                            [WebhookType.CONFIRMATION_REQUEST]: checked,\n                          })\n\n                          trackEvent({ ...PUSH_NOTIFICATION_EVENTS.TOGGLE_CONFIRMATION_REQUEST, label: checked })\n                        }\n\n                        if (checked) {\n                          registerNotifications({\n                            [safe.chainId]: [safe.address.value],\n                          })\n                            .then((registered) => {\n                              if (registered) {\n                                updateConfirmationRequestPreferences()\n                              }\n                            })\n                            .catch(() => null)\n                        } else {\n                          updateConfirmationRequestPreferences()\n                        }\n                      }}\n                    />\n                  }\n                  label={\n                    <>\n                      <Typography>Confirmation requests</Typography>\n                      {!preferences[WebhookType.CONFIRMATION_REQUEST] && (\n                        <Typography\n                          variant=\"body2\"\n                          sx={{\n                            color: 'text.secondary',\n                          }}\n                        >\n                          {isOwner ? 'Requires your signature' : 'Only signers'}\n                        </Typography>\n                      )}\n                    </>\n                  }\n                  disabled={!isOwner || !preferences}\n                />\n              </FormGroup>\n            </Grid>\n          </Grid>\n        </Paper>\n      )}\n    </>\n  )\n}\n","import Head from 'next/head'\nimport type { NextPage } from 'next'\n\nimport SettingsHeader from '@/components/settings/SettingsHeader'\nimport { PushNotifications } from '@/components/settings/PushNotifications'\nimport { useHasFeature } from '@/hooks/useChains'\nimport { BRAND_NAME } from '@/config/constants'\nimport { FEATURES } from '@safe-global/utils/utils/chains'\n\nconst NotificationsPage: NextPage = () => {\n  const isNotificationFeatureEnabled = useHasFeature(FEATURES.PUSH_NOTIFICATIONS)\n\n  if (!isNotificationFeatureEnabled) {\n    return null\n  }\n\n  return (\n    <>\n      <Head>\n        <title>{`${BRAND_NAME} – Settings – Notifications`}</title>\n      </Head>\n\n      <SettingsHeader />\n\n      <main>\n        <PushNotifications />\n      </main>\n    </>\n  )\n}\n\nexport default NotificationsPage\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"macOsInfo\":\"styles_macOsInfo__6sd2_\",\"item\":\"styles_item__mbLQr\",\"icon\":\"styles_icon__CfCTp\",\"globalInfo\":\"styles_globalInfo__FTQds\"};","import React from 'react'\nimport NextLink from 'next/link'\nimport { Tab, Tabs, Typography } from '@mui/material'\nimport { useRouter } from 'next/router'\nimport type { NavItem } from '@/components/sidebar/SidebarNavigation/config'\nimport css from './styles.module.css'\n\nconst NavTabs = ({ tabs }: { tabs: NavItem[] }) => {\n  const router = useRouter()\n  const activeTab = Math.max(0, tabs.map((tab) => tab.href).indexOf(router.pathname))\n  const query = router.query.safe ? { safe: router.query.safe } : undefined\n\n  return (\n    <Tabs value={activeTab} variant=\"scrollable\" allowScrollButtonsMobile className={css.tabs}>\n      {tabs.map((tab, idx) => (\n        <Tab\n          key={tab.href}\n          href={{ pathname: tab.href, query }}\n          component={NextLink}\n          tabIndex={0}\n          className={css.tab}\n          label={\n            <Typography\n              variant=\"body2\"\n              fontWeight={700}\n              color={activeTab === idx ? 'primary' : 'primary.light'}\n              className={css.label}\n            >\n              {tab.label}\n            </Typography>\n          }\n        />\n      ))}\n    </Tabs>\n  )\n}\n\nexport default NavTabs\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tabs\":\"styles_tabs__8AoqD\",\"tab\":\"styles_tab__WjqMe\",\"label\":\"styles_label__D53iN\"};","var Symbol = require('./_Symbol'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray');\n\n/** Built-in value references. */\nvar spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\n\n/**\n * Checks if `value` is a flattenable `arguments` object or array.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n */\nfunction isFlattenable(value) {\n  return isArray(value) || isArguments(value) ||\n    !!(spreadableSymbol && value && value[spreadableSymbol]);\n}\n\nmodule.exports = isFlattenable;\n","var SetCache = require('./_SetCache'),\n    arrayIncludes = require('./_arrayIncludes'),\n    arrayIncludesWith = require('./_arrayIncludesWith'),\n    arrayMap = require('./_arrayMap'),\n    baseUnary = require('./_baseUnary'),\n    cacheHas = require('./_cacheHas');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of methods like `_.difference` without support\n * for excluding multiple arrays or iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Array} values The values to exclude.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of filtered values.\n */\nfunction baseDifference(array, values, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      isCommon = true,\n      length = array.length,\n      result = [],\n      valuesLength = values.length;\n\n  if (!length) {\n    return result;\n  }\n  if (iteratee) {\n    values = arrayMap(values, baseUnary(iteratee));\n  }\n  if (comparator) {\n    includes = arrayIncludesWith;\n    isCommon = false;\n  }\n  else if (values.length >= LARGE_ARRAY_SIZE) {\n    includes = cacheHas;\n    isCommon = false;\n    values = new SetCache(values);\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee == null ? value : iteratee(value);\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var valuesIndex = valuesLength;\n      while (valuesIndex--) {\n        if (values[valuesIndex] === computed) {\n          continue outer;\n        }\n      }\n      result.push(value);\n    }\n    else if (!includes(values, computed, comparator)) {\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseDifference;\n","import { Box, Typography } from '@mui/material'\nimport classNames from 'classnames'\n\nimport type { ReactElement } from 'react'\n\nimport css from './styles.module.css'\n\nconst PageHeader = ({\n  title,\n  action,\n  noBorder,\n}: {\n  title: string\n  action?: ReactElement\n  noBorder?: boolean\n}): ReactElement => {\n  return (\n    <Box className={classNames(css.container, { [css.border]: !noBorder })}>\n      <Typography variant=\"h3\" className={css.title}>\n        {title}\n      </Typography>\n      {action}\n    </Box>\n  )\n}\n\nexport default PageHeader\n","import type { ReactElement } from 'react'\n\nimport NavTabs from '@/components/common/NavTabs'\nimport PageHeader from '@/components/common/PageHeader'\nimport { generalSettingsNavItems, settingsNavItems } from '@/components/sidebar/SidebarNavigation/config'\nimport css from '@/components/common/PageHeader/styles.module.css'\nimport useSafeAddress from '@/hooks/useSafeAddress'\nimport { useCurrentChain } from '@/hooks/useChains'\nimport { isRouteEnabled } from '@/utils/chains'\nimport madProps from '@/utils/mad-props'\n\nexport const SettingsHeader = ({\n  safeAddress,\n  chain,\n}: {\n  safeAddress: ReturnType<typeof useSafeAddress>\n  chain: ReturnType<typeof useCurrentChain>\n}): ReactElement => {\n  const navItems = safeAddress\n    ? settingsNavItems.filter((route) => isRouteEnabled(route.href, chain))\n    : generalSettingsNavItems\n\n  return (\n    <PageHeader\n      title={safeAddress ? 'Settings' : 'Preferences'}\n      action={\n        <div className={css.navWrapper}>\n          <NavTabs tabs={navItems} />\n        </div>\n      }\n    />\n  )\n}\n\nexport default madProps(SettingsHeader, {\n  safeAddress: useSafeAddress,\n  chain: useCurrentChain,\n})\n","var baseAssignValue = require('./_baseAssignValue'),\n    baseForOwn = require('./_baseForOwn'),\n    baseIteratee = require('./_baseIteratee');\n\n/**\n * Creates an object with the same keys as `object` and values generated\n * by running each own enumerable string keyed property of `object` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, key, object).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns the new mapped object.\n * @see _.mapKeys\n * @example\n *\n * var users = {\n *   'fred':    { 'user': 'fred',    'age': 40 },\n *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n * };\n *\n * _.mapValues(users, function(o) { return o.age; });\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n *\n * // The `_.property` iteratee shorthand.\n * _.mapValues(users, 'age');\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n */\nfunction mapValues(object, iteratee) {\n  var result = {};\n  iteratee = baseIteratee(iteratee, 3);\n\n  baseForOwn(object, function(value, key, object) {\n    baseAssignValue(result, key, iteratee(value, key, object));\n  });\n  return result;\n}\n\nmodule.exports = mapValues;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__sGid8\",\"title\":\"styles_title___s0jt\",\"border\":\"styles_border__BkX1U\",\"pageHeader\":\"styles_pageHeader__fRL7d\",\"actionsWrapper\":\"styles_actionsWrapper__g_Tq2\",\"navWrapper\":\"styles_navWrapper__XNqgs\"};"],"names":["baseDifference","require","baseFlatten","baseRest","isArrayLikeObject","module","exports","array","values","arrayPush","isFlattenable","depth","predicate","isStrict","result","index","length","value","Message","children","permission","CheckWalletWithPermission","permissionProps","noTooltip","checkNetwork","allowUndeployedSafe","wallet","useWallet","connectWallet","useConnectWallet","isWrongChain","useIsWrongChain","sdk","useSafeSDK","hasPermission","useHasPermission","safe","safeLoaded","useSafeInfo","isUndeployedSafe","deployed","message","useMemo","Tooltip","title","span","onClick","undefined","_filterUndeployedSafes","safes","undeployedSafes","pickBy","mapValues","safeAddresses","chainId","undeployedAddresses","Object","keys","difference","_transformAddedSafes","entries","addedSafes","reduce","acc","addedSafesOnChain","_transformCurrentSubscribedSafes","allPreferences","safeAddress","push","chains","notifiableSafes","find","chain","_mergeNotifiableSafes","ownedSafes","currentSubscriptions","added","Array","from","Set","ownedSafesOnChain","filter","includes","addedAddress","uniqueSafeAddresses","_areAllSafesSelected","selectedSafes","every","hasChain","hasEverySafe","_getTotalSignaturesRequired","currentNotifiedSafes","isNewChain","isNewSafe","some","_shouldRegisterSelectedSafes","_shouldUnregsiterSelectedSafes","_getSafesToRegister","safesToRegister","safesToRegisterOnChain","shouldRegister","safesToUnregister","safesToUnregisterOnChain","shouldUnregister","GlobalPushNotifications","useChains","useAppSelector","selectUndeployedSafes","isLoading","setIsLoading","useState","address","useAllOwnedSafes","selectAllAddedSafes","getAllPreferences","useNotificationPreferences","unregisterDeviceNotifications","unregisterSafeNotifications","registerNotifications","useNotificationRegistrations","safesForRenewal","useNotificationsRenewal","setSelectedSafes","useEffect","isMounted","deployedSafes","_sanitizeNotifiableSafes","configs","totalNotifiableSafes","_getTotalNotifiableSafes","isAllSelected","totalSignaturesRequired","canSave","onSave","requestNotificationPermission","registrationPromises","newlySelectedSafes","_getSafesToUnregister","unregistrationPromises","flatMap","map","Promise","all","trackEvent","PUSH_NOTIFICATION_EVENTS","SAVE_SETTINGS","Typography","sx","color","palette","primary","light","Grid","container","item","xs","display","alignItems","justifyContent","mb","variant","fontWeight","Box","mr","textAlign","maybePlural","Permission","EnablePushNotifications","Button","disabled","isOk","CircularProgress","size","Paper","border","List","ListItem","disablePadding","className","css","ListItemButton","onSelectAll","dense","ListItemIcon","Checkbox","edge","checked","disableRipple","ListItemText","primaryTypographyProps","Divider","i","arr","isChainSelected","Fragment","onSelectChain","prev","chainName","isSafeSelected","pl","py","onSelectSafe","sameAddress","addr","EthHashInfo","avatarSize","prefix","shortName","shortAddress","showName","useIsMac","isMac","setIsMac","navigator","userAgent","isRegistering","setIsRegistering","NotificationRenewal","renewNotifications","needsRenewal","isNotificationsRenewalEnabled","useIsNotificationsRenewalEnabled","handeSignClick","Alert","severity","RENEWAL_MESSAGE","width","PushNotifications","isOwner","useIsSafeOwner","isUpdatingIndexedDb","setIsUpdatingIndexedDb","theme","useTheme","isLargeScreen","useMediaQuery","breakpoints","up","updatePreferences","getPreferences","preferences","setPreferences","newPreferences","shouldShowMacHelper","IS_DEV","handleOnChange","ENABLE_SAFE","totalRegisteredSafesOnChain","DISABLE_SAFE","p","spacing","sm","gap","flexDirection","ExternalLink","href","HelpCenterArticle","PUSH_NOTIFICATIONS","b","NetworkWarning","action","div","style","showCopyButton","hasExplorer","FormControlLabel","data-testid","control","Switch","onChange","label","Link","AppRoutes","settings","notifications","passHref","legacyBehavior","MuiLink","FormGroup","WebhookType","INCOMING_ETHER","INCOMING_TOKEN","_","TOGGLE_INCOMING_TXS","MODULE_TRANSACTION","EXECUTED_MULTISIG_TRANSACTION","TOGGLE_OUTGOING_TXS","CONFIRMATION_REQUEST","updateConfirmationRequestPreferences","TOGGLE_CONFIRMATION_REQUEST","then","registered","catch","useHasFeature","FEATURES","NotificationsPage","Head","BRAND_NAME","SettingsHeader","main","tabs","router","useRouter","activeTab","Math","max","tab","indexOf","pathname","query","Tabs","allowScrollButtonsMobile","idx","Tab","component","NextLink","tabIndex","Symbol","isArguments","isArray","spreadableSymbol","isConcatSpreadable","SetCache","arrayIncludes","arrayIncludesWith","cacheHas","iteratee","comparator","isCommon","valuesLength","arrayMap","LARGE_ARRAY_SIZE","outer","computed","valuesIndex","PageHeader","noBorder","classNames","madProps","navItems","settingsNavItems","isRouteEnabled","route","generalSettingsNavItems","NavTabs","useSafeAddress","useCurrentChain","baseAssignValue","baseForOwn","baseIteratee","object","key"],"sourceRoot":"","ignoreList":[1,2,13,14,17]}