{"version":3,"file":"static/chunks/pages/settings/security-26c85a47a0740f58.js","mappings":"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","sources":["webpack://_N_E/?e263","webpack://_N_E/./src/components/common/Mui/index.tsx","webpack://_N_E/./src/components/common/NavTabs/index.tsx","webpack://_N_E/./src/components/settings/SecuritySettings/index.tsx","webpack://_N_E/./src/components/settings/SecurityLogin/index.tsx","webpack://_N_E/./src/pages/settings/security.tsx","webpack://_N_E/./src/components/common/NavTabs/styles.module.css","webpack://_N_E/./src/components/common/PageHeader/index.tsx","webpack://_N_E/./src/components/settings/SettingsHeader/index.tsx","webpack://_N_E/./src/components/common/PageHeader/styles.module.css"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/settings/security\",\n      function () {\n        return require(\"private-next-pages/settings/security.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/settings/security\"])\n      });\n    }\n  ","export * from \"/app/apps/web/src/components/common/Mui/index.tsx\"","import React from 'react'\nimport NextLink from 'next/link'\nimport { Tab, Tabs, Typography } from '@mui/material'\nimport { useRouter } from 'next/router'\nimport type { NavItem } from '@/components/sidebar/SidebarNavigation/config'\nimport css from './styles.module.css'\n\nconst NavTabs = ({ tabs }: { tabs: NavItem[] }) => {\n  const router = useRouter()\n  const activeTab = Math.max(0, tabs.map((tab) => tab.href).indexOf(router.pathname))\n  const query = router.query.safe ? { safe: router.query.safe } : undefined\n\n  return (\n    <Tabs value={activeTab} variant=\"scrollable\" allowScrollButtonsMobile className={css.tabs}>\n      {tabs.map((tab, idx) => (\n        <Tab\n          key={tab.href}\n          href={{ pathname: tab.href, query }}\n          component={NextLink}\n          tabIndex={0}\n          className={css.tab}\n          label={\n            <Typography\n              variant=\"body2\"\n              fontWeight={700}\n              color={activeTab === idx ? 'primary' : 'primary.light'}\n              className={css.label}\n            >\n              {tab.label}\n            </Typography>\n          }\n        />\n      ))}\n    </Tabs>\n  )\n}\n\nexport default NavTabs\n","import { useAppDispatch, useAppSelector } from '@/store'\nimport { selectBlindSigning, setBlindSigning } from '@/store/settingsSlice'\nimport { Paper, Grid, Typography, FormGroup, FormControlLabel, Checkbox } from '@mui/material'\n\nconst SecuritySettings = () => {\n  const isBlindSigningEnabled = useAppSelector(selectBlindSigning)\n  const dispatch = useAppDispatch()\n\n  return (\n    <Paper sx={{ padding: 4 }}>\n      <Grid container spacing={3}>\n        <Grid item lg={4} xs={12}>\n          <Typography variant=\"h4\" fontWeight=\"bold\" mb={1}>\n            Security\n          </Typography>\n        </Grid>\n\n        <Grid item xs>\n          <Typography mb={2}>\n            Enabling this setting allows the signing of unreadable signature requests. Signing these messages can lead\n            to unpredictable consequences, including the potential loss of funds or control over your account.\n          </Typography>\n          <FormGroup>\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={isBlindSigningEnabled}\n                  onChange={() => dispatch(setBlindSigning(!isBlindSigningEnabled))}\n                />\n              }\n              label=\"Enable blind signing\"\n            />\n          </FormGroup>\n        </Grid>\n      </Grid>\n    </Paper>\n  )\n}\n\nexport default SecuritySettings\n","import { Box } from '@mui/material'\nimport dynamic from 'next/dynamic'\nimport { useIsRecoverySupported } from '@/features/recovery/hooks/useIsRecoverySupported'\nimport SecuritySettings from '../SecuritySettings'\nimport { useRouter } from 'next/router'\n\nconst RecoverySettings = dynamic(() => import('@/features/recovery/components/RecoverySettings'))\n\nconst SecurityLogin = () => {\n  const isRecoverySupported = useIsRecoverySupported()\n  const router = useRouter()\n\n  return (\n    <Box display=\"flex\" flexDirection=\"column\" gap={2}>\n      {isRecoverySupported && router.query.safe ? <RecoverySettings /> : null}\n\n      <SecuritySettings />\n    </Box>\n  )\n}\n\nexport default SecurityLogin\n","import type { NextPage } from 'next'\nimport Head from 'next/head'\n\nimport SettingsHeader from '@/components/settings/SettingsHeader'\nimport SecurityLogin from '@/components/settings/SecurityLogin'\nimport { BRAND_NAME } from '@/config/constants'\n\nconst SecurityPage: NextPage = () => {\n  return (\n    <>\n      <Head>\n        <title>{`${BRAND_NAME} – Settings – Security`}</title>\n      </Head>\n\n      <SettingsHeader />\n\n      <main>\n        <SecurityLogin />\n      </main>\n    </>\n  )\n}\n\nexport default SecurityPage\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tabs\":\"styles_tabs__8AoqD\",\"tab\":\"styles_tab__WjqMe\",\"label\":\"styles_label__D53iN\"};","import { Box, Typography } from '@mui/material'\nimport classNames from 'classnames'\n\nimport type { ReactElement } from 'react'\n\nimport css from './styles.module.css'\n\nconst PageHeader = ({\n  title,\n  action,\n  noBorder,\n}: {\n  title: string\n  action?: ReactElement\n  noBorder?: boolean\n}): ReactElement => {\n  return (\n    <Box className={classNames(css.container, { [css.border]: !noBorder })}>\n      <Typography variant=\"h3\" className={css.title}>\n        {title}\n      </Typography>\n      {action}\n    </Box>\n  )\n}\n\nexport default PageHeader\n","import type { ReactElement } from 'react'\n\nimport NavTabs from '@/components/common/NavTabs'\nimport PageHeader from '@/components/common/PageHeader'\nimport { generalSettingsNavItems, settingsNavItems } from '@/components/sidebar/SidebarNavigation/config'\nimport css from '@/components/common/PageHeader/styles.module.css'\nimport useSafeAddress from '@/hooks/useSafeAddress'\nimport { useCurrentChain } from '@/hooks/useChains'\nimport { isRouteEnabled } from '@/utils/chains'\nimport madProps from '@/utils/mad-props'\n\nexport const SettingsHeader = ({\n  safeAddress,\n  chain,\n}: {\n  safeAddress: ReturnType<typeof useSafeAddress>\n  chain: ReturnType<typeof useCurrentChain>\n}): ReactElement => {\n  const navItems = safeAddress\n    ? settingsNavItems.filter((route) => isRouteEnabled(route.href, chain))\n    : generalSettingsNavItems\n\n  return (\n    <PageHeader\n      title={safeAddress ? 'Settings' : 'Preferences'}\n      action={\n        <div className={css.navWrapper}>\n          <NavTabs tabs={navItems} />\n        </div>\n      }\n    />\n  )\n}\n\nexport default madProps(SettingsHeader, {\n  safeAddress: useSafeAddress,\n  chain: useCurrentChain,\n})\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__sGid8\",\"title\":\"styles_title___s0jt\",\"border\":\"styles_border__BkX1U\",\"pageHeader\":\"styles_pageHeader__fRL7d\",\"actionsWrapper\":\"styles_actionsWrapper__g_Tq2\",\"navWrapper\":\"styles_navWrapper__XNqgs\"};"],"names":["tabs","router","useRouter","activeTab","Math","max","map","tab","href","indexOf","pathname","query","safe","undefined","Tabs","value","variant","allowScrollButtonsMobile","className","css","idx","Tab","component","NextLink","tabIndex","label","Typography","fontWeight","color","isBlindSigningEnabled","useAppSelector","selectBlindSigning","dispatch","SecuritySettings","useAppDispatch","Paper","sx","padding","Grid","container","spacing","item","lg","xs","mb","FormGroup","FormControlLabel","control","Checkbox","checked","onChange","setBlindSigning","RecoverySettings","dynamic","isRecoverySupported","useIsRecoverySupported","Box","display","flexDirection","gap","SecurityPage","Head","title","BRAND_NAME","SettingsHeader","main","SecurityLogin","action","PageHeader","noBorder","classNames","madProps","safeAddress","chain","navItems","settingsNavItems","filter","isRouteEnabled","route","generalSettingsNavItems","div","NavTabs","useSafeAddress","useCurrentChain"],"sourceRoot":"","ignoreList":[]}